// Code generated by structgen ../../d4data/definitions.json generated_types.go; DO NOT EDIT.

package d4

import (
	bin "github.com/Dakota628/d4parse/pkg/bin"
	"io"
)

func NewByFormatHash(h int) Object {
	switch h {
	case 123576589:
		return &SoundTableDefinition{}
	case 2705556582:
		return &TiledStyleDefinition{}
	case 1401597153:
		return &ObserverDefinition{}
	case 2771942927:
		return &BiomeDefinition{}
	case 2832127214:
		return &WorldDefinition{}
	case 3381734033:
		return &AffixDefinition{}
	case 7088667:
		return &SetItemBonusDefinition{}
	case 380239245:
		return &ConditionDefinition{}
	case 3259836636:
		return &FogVolumeDefinition{}
	case 3804982558:
		return &PowerDefinition{}
	case 2697244277:
		return &TutorialDefinition{}
	case 534872050:
		return &ParagonGlyphAffixDefinition{}
	case 755559698:
		return &MakeupDefinition{}
	case 897638220:
		return &MonsterAffixDefinition{}
	case 1714036886:
		return &ABTestDefinition{}
	case 583067962:
		return &TrailDefinition{}
	case 3288876967:
		return &WeatherDefinition{}
	case 3091042523:
		return &ParagonNodeDefinition{}
	case 1614599467:
		return &LoreDefinition{}
	case 3581737567:
		return &RopeDefinition{}
	case 3028891766:
		return &AnimationDefinition{}
	case 2589047893:
		return &ShaderDefinition{}
	case 750077193:
		return &EmoteDefinition{}
	case 3487489608:
		return &WorldStateDefinition{}
	case 33576486:
		return &CollisionSettingsDefinition{}
	case 885532651:
		return &TrackedRewardDefinition{}
	case 3380059938:
		return &QuestDefinition{}
	case 2134793469:
		return &ChallengeDefinition{}
	case 3665529110:
		return &PlayerTitleDefinition{}
	case 2833653452:
		return &ParagonThresholdDefinition{}
	case 2623583028:
		return &StaggerDefinition{}
	case 961417760:
		return &FlagSetDefinition{}
	case 103202468:
		return &MusicDefinition{}
	case 3175752678:
		return &ClothDefinition{}
	case 4226195413:
		return &DungeonAffixDefinition{}
	case 1610557741:
		return &VibrationDefinition{}
	case 1886836184:
		return &DemonScrollDefinition{}
	case 1787033204:
		return &GameBalanceDefinition{}
	case 122651675:
		return &ParagonGlyphDefinition{}
	case 1765209194:
		return &NPCComponentSetDefinition{}
	case 35622378:
		return &AccountDefinition{}
	case 2720737509:
		return &HoudiniParticlesSimDefinition{}
	case 3649590056:
		return &FogOfWarDefinition{}
	case 4236165849:
		return &HeroDefinition{}
	case 18197804:
		return &MonsterFamilyDefinition{}
	case 1505457976:
		return &BoostDefinition{}
	case 729361343:
		return &MaterialValueSetDefinition{}
	case 3207332567:
		return &SpeakerDefinition{}
	case 1245587136:
		return &EffectGroupDefinition{}
	case 759454506:
		return &ParticleDefinition{}
	case 4033859869:
		return &AppearanceDefinition{}
	case 1313271435:
		return &ItemTypeDefinition{}
	case 3806544672:
		return &ReputationDefinition{}
	case 3176705080:
		return &AnimTreeDefinition{}
	case 4110251921:
		return &EncounterDefinition{}
	case 78014346:
		return &ReverbDefinition{}
	case 602045172:
		return &MarkingShapeDefinition{}
	case 1883232011:
		return &SceneDefinition{}
	case 3509507267:
		return &FaceDefinition{}
	case 685009452:
		return &ActivityDefinition{}
	case 4133184448:
		return &RecipeDefinition{}
	case 855891767:
		return &DyeDefinition{}
	case 748469283:
		return &FacialHairDefinition{}
	case 3403712277:
		return &JewelryDefinition{}
	case 2806960416:
		return &TerritoryDefinition{}
	case 3030569474:
		return &StoryboardDefinition{}
	case 629552494:
		return &AmbientSoundDefinition{}
	case 1043973718:
		return &MaterialValueDefinition{}
	case 248985203:
		return &EyeColorDefinition{}
	case 106063450:
		return &ParagonBoardDefinition{}
	case 504242798:
		return &ActorDefinition{}
	case 2053041403:
		return &MaterialDefinition{}
	case 444476534:
		return &ItemDefinition{}
	case 4188235771:
		return &UIDialogDefinition{}
	case 1090574979:
		return &SubzoneDefinition{}
	case 1535366740:
		return &ConversationDefinition{}
	case 1855248456:
		return &CrafterDefinition{}
	case 3195129035:
		return &StoreProductDefinition{}
	case 1266777396:
		return &AchievementDefinition{}
	case 2980791119:
		return &LightDefinition{}
	case 333863280:
		return &SoundDefinition{}
	case 72915516:
		return &PhysicsDefinition{}
	case 2210875563:
		return &ShaderMapDefinition{}
	case 2420016543:
		return &AspectDefinition{}
	case 406598172:
		return &wWiseSoundBankDefinition{}
	case 470708965:
		return &LevelAreaDefinition{}
	case 3643810545:
		return &EmblemDefinition{}
	case 1613245723:
		return &PlayerClassDefinition{}
	case 4040157842:
		return &TextureDefinition{}
	case 1803351102:
		return &FontDefinition{}
	case 1743771856:
		return &MovieDefinition{}
	case 1340376438:
		return &StringListDefinition{}
	case 2511652383:
		return &AudioContextDefinition{}
	case 2191681936:
		return &QuestChainDefinition{}
	case 1632124970:
		return &ItemRequirementDefinition{}
	case 2180915558:
		return &WallDefinition{}
	case 2259066920:
		return &SurfaceDefinition{}
	case 2713967435:
		return &Animation2DDefinition{}
	case 1395860536:
		return &HairColorDefinition{}
	case 1784206760:
		return &GlobalDefinition{}
	case 3528476834:
		return &ShakeDefinition{}
	case 4060704305:
		return &ExplosionDefinition{}
	case 2168367308:
		return &VectorFieldDefinition{}
	case 3894106449:
		return &MarkerSetDefinition{}
	case 1271134248:
		return &HairStyleDefinition{}
	case 578767506:
		return &AnimSetDefinition{}
	case 138216317:
		return &SkillKitDefinition{}
	case 1776463076:
		return &MarkingColorDefinition{}
	default:
		return nil
	}
}

func NewByTypeHash[T Object](h int) Object {
	switch h {
	case 88275:
		return &OBB{}
	case 861281:
		return &Type_d2461{}
	case 2408934:
		return &AABB{}
	case 3112412:
		return &Stat{}
	case 5337680:
		return &PowerLimitedActorType{}
	case 5640122:
		return &SoundTableDefinition{}
	case 8510589:
		return &SavedCameraState{}
	case 9306245:
		return &ShaderInputLayout{}
	case 12265920:
		return &PowerConditionIsVulnerable{}
	case 12875460:
		return &PlayerParagonPointMessage{}
	case 18808552:
		return &AttributesSetValuesMessage{}
	case 21780289:
		return &Type_14c5741{}
	case 24231676:
		return &TexFrame{}
	case 26944936:
		return &Type_19b25a8{}
	case 30471230:
		return &WwiseSwitchValue{}
	case 31035945:
		return &AssignSkillMessage{}
	case 36650923:
		return &PetType{}
	case 38885574:
		return &OutroWaypointEffectMessage{}
	case 45134984:
		return &LimboWarpPrefetchBeginMessage{}
	case 48209924:
		return &MarkerWeatherVolumeData{}
	case 48522627:
		return &TiledWindowPieces{}
	case 49637164:
		return &TiledStyleDefinition{}
	case 51081978:
		return &Type_30b72fa{}
	case 57812962:
		return &Type_37227e2{}
	case 59500993:
		return &Type_38be9c1{}
	case 64253465:
		return &IKGeneralBoneChain{}
	case 67331420:
		return &CurrentWorldSubcondition{}
	case 71815918:
		return &Type_447d2ee{}
	case 72180526:
		return &Type_44d632e{}
	case 75652318:
		return &ZoneMapParams{}
	case 78452166:
		return &Type_4ad15c6{}
	case 78967695:
		return &HdrSettings{}
	case 79564513:
		return &ProjectileAttachmentOnHitMessage{}
	case 79879298:
		return &Type_4c2dc82{}
	case 82777608:
		return &GameBalanceTable{}
	case 87940067:
		return &AimTargetMessage{}
	case 88475393:
		return &ActorFoleySoundOverride{}
	case 89349493:
		return &Type_5535d75{}
	case 89353708:
		return &Type_5536dec{}
	case 90985183:
		return &BlockedDamageVisualsMessage{}
	case 92261083:
		return &Type_57fcadb{}
	case 92721210:
		return &Type_586d03a{}
	case 93816786:
		return &DungeonAffixFamilyEntry{}
	case 98864240:
		return &Plane{}
	case 99314398:
		return &Type_5eb6ade{}
	case 99338022:
		return &GeoChunkIndexBuffer{}
	case 100099747:
		return &PresetBannerData{}
	case 100864898:
		return &Ray2D{}
	case 100864931:
		return &Ray3D{}
	case 102278321:
		return &Shape{}
	case 105310949:
		return &MarkerCameraData{}
	case 106673333:
		return &ScriptEventParamPlayer{}
	case 107073724:
		return &Type_661d0bc{}
	case 112892379:
		return &Type_6ba99db{}
	case 117231958:
		return &BlendSettings{}
	case 118576961:
		return &ChallengeCategory{}
	case 126352052:
		return &MaterialColorValueDefinition{}
	case 127673428:
		return &UITextStyle{}
	case 131857979:
		return &AnimTreeNodeOverride{}
	case 132838840:
		return &Type_7eaf5b8{}
	case 134857105:
		return &ObserverDefinition{}
	case 135947440:
		return &MarkerFogVolumeData{}
	case 136631170:
		return &SkillTag_Table{}
	case 137922517:
		return &WeatherStateParams{}
	case 145726193:
		return &AffixSyncComponents{}
	case 146224836:
		return &Type_8b736c4{}
	case 147061427:
		return &PowerConditionIsShapeshiftForm{}
	case 148976275:
		return &PlayerEmblemResponseMessage{}
	case 152386499:
		return &Type_9153bc3{}
	case 155004991:
		return &UIParagonBoardStyle{}
	case 158271388:
		return &GameTestingPvpSamplingStartMessage{}
	case 164326720:
		return &TrySalvageAllMessage{}
	case 165130238:
		return &Type_9d7affe{}
	case 165581846:
		return &Type_9de9416{}
	case 167120374:
		return &UICheckBoxStyle{}
	case 171121941:
		return &BiomeDefinition{}
	case 173900177:
		return &WorldDefinition{}
	case 174716335:
		return &AnimSyncGroup{}
	case 176697472:
		return &ScriptEventParamRecipe{}
	case 177635266:
		return &MarkerHiddenCacheGizmoData{}
	case 185354185:
		return &Type_b0c47c9{}
	case 188761711:
		return &BiomeClutter{}
	case 189792993:
		return &Type_b5002e1{}
	case 193950776:
		return &ModifyCurrencyMessage{}
	case 199422900:
		return &JoinGameFailedMessage{}
	case 200235594:
		return &Type_bef5a4a{}
	case 202596751:
		return &MarkerEncounterData{}
	case 203401058:
		return &CriteriaModifier{}
	case 203483570:
		return &MailSendMessage{}
	case 203752552:
		return &TriggerEventFadeOtherPlayers{}
	case 204122261:
		return &ScrollbarStyle{}
	case 207826213:
		return &PlayHotbarUIFlourishMessage{}
	case 208996826:
		return &UIMinimapStyle{}
	case 213896766:
		return &Type_cbfce3e{}
	case 214270858:
		return &Type_cc5838a{}
	case 214586038:
		return &AddSocketResultMessage{}
	case 215453821:
		return &PowerConditionIsPower{}
	case 216509239:
		return &AffixDefinition{}
	case 216733152:
		return &ExperienceLevel{}
	case 224697917:
		return &OutroPortalEffectMessage{}
	case 228221451:
		return &UIEffect{}
	case 228359364:
		return &TryImbueAffixMessage{}
	case 228865963:
		return &SetItemBonusDefinition{}
	case 231895989:
		return &GBHandle{}
	case 232788579:
		return &PowerCastingEffectOverride{}
	case 234160671:
		return &ScriptEventParamString{}
	case 234624765:
		return &NPCComponentHardpointOverride{}
	case 235192742:
		return &Type_e04c1a6{}
	case 236738320:
		return &UIControlStyle{}
	case 239012676:
		return &OnAssistBuffCallback{}
	case 248064347:
		return &SharedServerWorldPlace{}
	case 250193936:
		return &ConditionDefinition{}
	case 253272816:
		return &WwiseName{}
	case 255596702:
		return &EffectGroupScaleYKeyData{}
	case 258676623:
		return &RitualTetherEffectMessage{}
	case 260563484:
		return &OnPetDeathBuffCallback{}
	case 264669227:
		return &ConsoleAwardDefinition{}
	case 266386765:
		return &Type_fe0bd4d{}
	case 267260813:
		return &Capsule{}
	case 269037185:
		return &CardArt{}
	case 273567485:
		return &MarkerWaypointGizmoData{}
	case 274458137:
		return &FatVertex{}
	case 275314580:
		return &ParagonGlyphExperience{}
	case 276390936:
		return &PrefetchWorldDataMessage{}
	case 277417732:
		return &LogoutContextMessage{}
	case 279687928:
		return &ACDEnterKnownMessage{}
	case 280849552:
		return &SavedCameraStates{}
	case 285850372:
		return &Type_1109bb04{}
	case 287416921:
		return &MarkerChestGizmoData{}
	case 287728085:
		return &UIStackPanelStyle{}
	case 288988602:
		return &JoinExistingGameMessage{}
	case 294654905:
		return &MarkerHeightFieldData{}
	case 294950919:
		return &MarkerHeightFieldLine{}
	case 295800455:
		return &Type_11a18e87{}
	case 295985342:
		return &PlayerUnpossessActorMessage{}
	case 296386918:
		return &DataIDDataMessage{}
	case 297390777:
		return &QuestObjectiveSet{}
	case 298327223:
		return &Type_11c81cb7{}
	case 300410424:
		return &AudioMonsterCategory{}
	case 303887094:
		return &TriggerEventAttachSpawnedActor{}
	case 307762844:
		return &DestroyOnProximityGizmoData{}
	case 307879080:
		return &Type_1259dca8{}
	case 309879163:
		return &StoryboardGenericTrack{}
	case 311539709:
		return &FogVolumeDefinition{}
	case 312499914:
		return &TexAnimTranslationCurve{}
	case 316337160:
		return &FoliageSettings{}
	case 316559119:
		return &PowerConditionIsSpecificActor{}
	case 318793304:
		return &BoxProximityData{}
	case 324361903:
		return &SceneSpecification{}
	case 330209804:
		return &TriggerEventRelaxCloth{}
	case 332218139:
		return &OnDotReceivedBuffCallback{}
	case 334330977:
		return &PVPGizmoMessage{}
	case 335066719:
		return &OnPetAddBuffCallback{}
	case 336944377:
		return &GameVariableIsSetSubcondition{}
	case 337203476:
		return &TutorialScreen{}
	case 340493133:
		return &GameTestingMonsterSkillSamplingStartMessage{}
	case 341256100:
		return &StoreDisclaimerData{}
	case 341778518:
		return &UIBlinkerStyle{}
	case 342198450:
		return &NpcLookTemplate{}
	case 342818969:
		return &PowerCrowdControlInfo{}
	case 346303511:
		return &Type_14a42c17{}
	case 347016374:
		return &PowerDefinition{}
	case 347583877:
		return &OnAttackBuffCallback{}
	case 350245922:
		return &ACDInventoryUpdateActorSNO{}
	case 351116421:
		return &NamedGizmoData{}
	case 351209529:
		return &PowerConditionIsPet{}
	case 353175414:
		return &UILayoutEntries{}
	case 359225989:
		return &MarkerAmbientSoundData{}
	case 360669915:
		return &PathLink{}
	case 361180618:
		return &MapRevealWorldMessage{}
	case 362087135:
		return &Type_159502df{}
	case 365739947:
		return &Currency{}
	case 366023756:
		return &GlobalBase{}
	case 366095659:
		return &GlobalData{}
	case 366375197:
		return &TutorialDefinition{}
	case 367818336:
		return &EventCallbackSubcondition{}
	case 375153600:
		return &GameTestingTakeScreenshotMessage{}
	case 377055229:
		return &UberMaterial{}
	case 377108136:
		return &StartLocationName{}
	case 378061786:
		return &CampaignData{}
	case 378671321:
		return &PlayerOwnsAMountSubcondition{}
	case 380017523:
		return &SurveyMessage{}
	case 380944299:
		return &HelpCode_Table{}
	case 382532488:
		return &FogMask{}
	case 384027390:
		return &Type_16e3cafe{}
	case 385403115:
		return &DebugProjectileMovementUpdateMessage{}
	case 387731069:
		return &Type_171c4e7d{}
	case 389048112:
		return &NpcFollowerArchetype{}
	case 392807017:
		return &GlobalClanData{}
	case 394027396:
		return &DetachCarryableFromPlayerMessage{}
	case 394717690:
		return &Type_1786e9fa{}
	case 398282971:
		return &Type_17bd50db{}
	case 404172836:
		return &Type_18173024{}
	case 405077397:
		return &TriggerEventSetAudioState{}
	case 408415486:
		return &ConvLocaleDisplayTimes{}
	case 413517284:
		return &MarkerFadeVolumeData{}
	case 415892117:
		return &Type_18ca0295{}
	case 417636351:
		return &Type_18e49fff{}
	case 417796692:
		return &AIPropType_Table{}
	case 418395020:
		return &HeroStateRewardsMessage{}
	case 419152424:
		return &Type_18fbc228{}
	case 422165983:
		return &QuestTimerUpdatedMessage{}
	case 424839738:
		return &UIRadioButtonStyle{}
	case 427805145:
		return &Type_197fc9d9{}
	case 430464268:
		return &UpgradedItemLabelSubcondition{}
	case 432411082:
		return &Type_19c611ca{}
	case 434197565:
		return &GlobalServiceNPCData{}
	case 443290979:
		return &ParagonGlyphAffixDefinition{}
	case 446843337:
		return &PVPShrineEventUpdateMessage{}
	case 447120107:
		return &MarkerItemData{}
	case 448289747:
		return &UIMenuItemStyle{}
	case 450842144:
		return &SpawnerGizmoData{}
	case 452207452:
		return &Type_1af4235c{}
	case 454347093:
		return &PrefabScopedActorGroupData_Table{}
	case 456561964:
		return &MakeupDefinition{}
	case 457007016:
		return &GameVariableStringSubcondition{}
	case 458282602:
		return &WwiseSoundBankContentBase{}
	case 459349266:
		return &PlatformAccount{}
	case 459613767:
		return &Type_1b652647{}
	case 461739888:
		return &ScriptEventParamGizmoType{}
	case 466375807:
		return &PlayerClassCoreStatBenefitData{}
	case 467583236:
		return &ActorProjectileData{}
	case 469047295:
		return &MonsterAffixDefinition{}
	case 469541751:
		return &Type_1bfca377{}
	case 471636391:
		return &Type_1c1c99a7{}
	case 475975077:
		return &Type_1c5ecda5{}
	case 476946996:
		return &TimedSpawningData{}
	case 481077997:
		return &PowerConditionStoredValueEquals{}
	case 485930233:
		return &Type_1cf6b4f9{}
	case 487980657:
		return &Type_1d15fe71{}
	case 489718821:
		return &ShoreWaveSettings{}
	case 490076731:
		return &MailDeleteMessage{}
	case 490118052:
		return &DebugForceSpawnMessage{}
	case 491575639:
		return &ClanBankDepositMessage{}
	case 494681324:
		return &Type_1d7c3cec{}
	case 495345607:
		return &GlobalFontColor{}
	case 500700259:
		return &Type_1dd81463{}
	case 501814863:
		return &UIMargins{}
	case 501899601:
		return &ItemAffixAttribute{}
	case 503094317:
		return &PlayHitEffectMessage{}
	case 506492871:
		return &UIWindowStyle{}
	case 509045980:
		return &TriggerEventShadow{}
	case 513386483:
		return &GameTestingCharacterSamplingStartMessage{}
	case 514913766:
		return &Type_1eb0f5e6{}
	case 516822506:
		return &DynamicMovementData{}
	case 518656708:
		return &AIStateDebugSetStateMessage{}
	case 523544037:
		return &Type_1f34a5e5{}
	case 528427185:
		return &SignGizmoData{}
	case 528757367:
		return &Type_1f843277{}
	case 531649295:
		return &GameTestingRTCSamplingStartMessage{}
	case 532046846:
		return &EmitterPointData{}
	case 540107926:
		return &IKBoneChainBase{}
	case 540613693:
		return &CollisionShape{}
	case 544227643:
		return &SharedChildFile{}
	case 546095827:
		return &ScriptEventParamReputation{}
	case 546182319:
		return &DebugDataRequestMessage{}
	case 547442486:
		return &Type_20a14f36{}
	case 551002818:
		return &TriggerEventShadowDuration{}
	case 551777591:
		return &ScriptFormulaInfo{}
	case 552516018:
		return &MaterialTextureEntry{}
	case 557181583:
		return &WeaponExpertiseRank{}
	case 559004334:
		return &StoryboardPlaySoundNode{}
	case 563099623:
		return &Type_219037e7{}
	case 568298472:
		return &Type_21df8be8{}
	case 568526390:
		return &TriggerEventAddObject{}
	case 570318784:
		return &TriggerEventDeleteObject{}
	case 571402940:
		return &Type_220eeabc{}
	case 582599742:
		return &PowerPhaseOneShot{}
	case 584663085:
		return &Type_22d9402d{}
	case 585896597:
		return &PlayerClassDruidData{}
	case 586826685:
		return &EffectGroupScaleXKeyData{}
	case 592804084:
		return &TranslationCurve{}
	case 596227098:
		return &TriggerEventActorMovement{}
	case 598155613:
		return &MarkerBaseGizmoData{}
	case 600059248:
		return &DebugEventLogMessage{}
	case 600875676:
		return &StaticLoadingImages{}
	case 601368518:
		return &PrefetchSubzoneEntranceDataMessage{}
	case 601452812:
		return &ABTestDefinition{}
	case 607927028:
		return &DebugProjectileRaycastMessage{}
	case 609698022:
		return &Type_245740e6{}
	case 612856310:
		return &AnimTangent{}
	case 615033278:
		return &Type_24a8a9be{}
	case 615324205:
		return &EliteKilledMessage{}
	case 619659323:
		return &PowerConditionHasAffixEquipped{}
	case 621008261:
		return &TrailDefinition{}
	case 623688299:
		return &Type_252cba6b{}
	case 626815792:
		return &ErrorWithContextMessage{}
	case 632575071:
		return &Type_25b4545f{}
	case 635232813:
		return &DungeonSigilTierSubcondition{}
	case 636207354:
		return &UIListItemStyle{}
	case 641859515:
		return &UIControlTemplate{}
	case 646020626:
		return &EffectGroupACDToACDMessage{}
	case 650798075:
		return &PlayAnimationMessage{}
	case 651418529:
		return &CrafterConditions{}
	case 654904231:
		return &Type_27090ba7{}
	case 656451641:
		return &WeatherDefinition{}
	case 658153198:
		return &Type_273a9eee{}
	case 658729586:
		return &LabelEntry{}
	case 667403575:
		return &Type_27c7c537{}
	case 679896568:
		return &ConsoleProperty{}
	case 680168459:
		return &PlayerCustomizationMessage{}
	case 685542235:
		return &Type_28dc8b5b{}
	case 685760733:
		return &EmitterBoxData{}
	case 687910683:
		return &ActorFacingData{}
	case 693826374:
		return &FoleyOverridePreloadHelper{}
	case 694569815:
		return &ParagonNodeDefinition{}
	case 696164520:
		return &LookVariantMap{}
	case 698965827:
		return &PRTransformMessage{}
	case 699316394:
		return &DRLGSpawningData{}
	case 699762730:
		return &DRLGSpawningPool{}
	case 701532932:
		return &WorldDeletedMessage{}
	case 701717625:
		return &QuestPreloadHelper{}
	case 702155408:
		return &EnableRagdollParams{}
	case 702892200:
		return &OnItemPickupBuffCallback{}
	case 708398011:
		return &DisplayMode{}
	case 714854064:
		return &CurrentZoneSubcondition{}
	case 715283015:
		return &ZoneProgressRewardInfoMessage{}
	case 716315941:
		return &WwiseStandardSoundBank{}
	case 719000045:
		return &ConversationRandomChoiceNode{}
	case 721304485:
		return &SerializeContainerData{}
	case 721585600:
		return &StringLabelHandleEx{}
	case 724022612:
		return &PlayerClassBarbData{}
	case 725763710:
		return &EventRewardChestGizmoData{}
	case 730132346:
		return &RareItemName{}
	case 730988871:
		return &QuestObjectiveSetLink{}
	case 731368717:
		return &SNODiskEntry{}
	case 733725688:
		return &RogueSpecChangeMessage{}
	case 735016212:
		return &LinearAxisParams{}
	case 735885398:
		return &MarkerNPCActorData{}
	case 738942754:
		return &ScriptEventParamEffectGroup{}
	case 750243227:
		return &WaypointGizmoData{}
	case 754360841:
		return &Type_2cf6a209{}
	case 754688451:
		return &ActorMovingData{}
	case 755154324:
		return &Type_2d02bd94{}
	case 756611932:
		return &Type_2d18fb5c{}
	case 758869941:
		return &PlayerHasUnlockedMountsSubcondition{}
	case 759236416:
		return &POICameraInstanceData{}
	case 761532415:
		return &UITreeStyle{}
	case 761777473:
		return &PlayerBuffSubcondition{}
	case 761993241:
		return &DebugSetActorUpdateIntervalMessage{}
	case 765028544:
		return &Type_2d9968c0{}
	case 768702240:
		return &EssencePowerTierEntry_Table{}
	case 769249943:
		return &Type_2dd9d297{}
	case 773758990:
		return &PrefetchRunOnDisk{}
	case 777063961:
		return &WorldServerData{}
	case 779531282:
		return &SocketedEffects{}
	case 779841713:
		return &ActorAnimSetPreloadHelper{}
	case 792493210:
		return &PlayerSkillModPointsSubcondition{}
	case 796243964:
		return &ParagonUnequipBoardMessage{}
	case 797044827:
		return &ActorMonsterData{}
	case 797606314:
		return &MaterialEnumValueDefinition{}
	case 797648367:
		return &Type_2f8b25ef{}
	case 798453786:
		return &Currencies_Table{}
	case 800593142:
		return &WorldTierUnlockedMessage{}
	case 802058580:
		return &Type_2fce7154{}
	case 804883275:
		return &SpeedTreeWind8{}
	case 805216097:
		return &BoneStructureInfo{}
	case 805226337:
		return &PlayerActorSetInitialMessage{}
	case 805969435:
		return &Type_300a1e1b{}
	case 809352960:
		return &Type_303dbf00{}
	case 809704699:
		return &LoreDefinition{}
	case 810622396:
		return &Type_30511dbc{}
	case 812773786:
		return &OnDotApplyBuffCallback{}
	case 812993760:
		return &PowerPayloadDefinition{}
	case 814048081:
		return &AICellBytes{}
	case 815039567:
		return &SurfaceGrid{}
	case 821344136:
		return &ExperienceLevelAlt_Table{}
	case 821665730:
		return &SavedPlayerTitle{}
	case 824315617:
		return &Type_31220ee1{}
	case 826038293:
		return &WwiseMetaDataSoundBank{}
	case 827674886:
		return &Type_31555106{}
	case 830630473:
		return &Type_31826a49{}
	case 834055373:
		return &PortalTransferSetupMessage{}
	case 834825378:
		return &Type_31c26ca2{}
	case 835243889:
		return &Structure{}
	case 836615167:
		return &RopeDefinition{}
	case 838073325:
		return &WorldTierSubcondition{}
	case 843622019:
		return &FogVolumeInstanceData{}
	case 844554497:
		return &Type_3256e101{}
	case 854376920:
		return &ACDTranslateSyncMessage{}
	case 857617376:
		return &TryRepairAllMessage{}
	case 859173317:
		return &MarkerSoundData{}
	case 859971517:
		return &ServerNotificationDataMessage{}
	case 864007404:
		return &OnHealingReceivedBuffCallback{}
	case 866553347:
		return &ItemTier{}
	case 871413486:
		return &ACDForceAddedMessage{}
	case 872540109:
		return &ActiveSkillEntry{}
	case 873111065:
		return &CollisionCapsule{}
	case 873409362:
		return &Type_340f2b52{}
	case 874191810:
		return &PlayLineParams{}
	case 874267018:
		return &UIDownloadImageStyle{}
	case 875081095:
		return &GameTestingNPCSamplingStartMessage{}
	case 876325571:
		return &Type_343baac3{}
	case 878162020:
		return &QuestSwitchGizmoData{}
	case 880817737:
		return &AnimationDefinition{}
	case 881828868:
		return &MarkerNoMountVolumeData{}
	case 882615838:
		return &Type_349ba61e{}
	case 884063201:
		return &VoiceActorEntry{}
	case 888105884:
		return &UpgradeItemMessage{}
	case 888408526:
		return &TriggerConditions{}
	case 892291564:
		return &Type_352f49ec{}
	case 893154457:
		return &OnKillBuffCallback{}
	case 894232435:
		return &AnimDepthOfField{}
	case 897096220:
		return &GlobalZoneProgressData{}
	case 897321246:
		return &Type_357c091e{}
	case 899754116:
		return &Type_35a12884{}
	case 900462496:
		return &ActorPlayerData{}
	case 901079139:
		return &PlayerLevelRangeSubcondition{}
	case 906169645:
		return &Type_36030d2d{}
	case 907176602:
		return &UniqueOperatorChestGizmoData{}
	case 910005755:
		return &SubzoneModifierStateMessage{}
	case 911325909:
		return &TriggerEventFoley{}
	case 911604182:
		return &TexAnim{}
	case 912556216:
		return &PowerConditionDungeonTier{}
	case 912941483:
		return &CommandFrameSynchronizeMessage{}
	case 914586851:
		return &ObjectiveRegionParams{}
	case 919850711:
		return &TriggerEventMusic{}
	case 923517792:
		return &ShaderDefinition{}
	case 928568907:
		return &BoolDataMessage{}
	case 930297292:
		return &TriggerEventVoice{}
	case 931132840:
		return &NpcLookEntry{}
	case 933677803:
		return &UIHotbarButtonStyle{}
	case 934402691:
		return &EmoteDefinition{}
	case 934747956:
		return &MarkerLightData{}
	case 935473883:
		return &ListenerReaction{}
	case 936375859:
		return &EnterKnownShaderMapOverrides{}
	case 939032690:
		return &NecroArmyUnitSpecializationSacrificeData{}
	case 939553606:
		return &AttackerEnemiesParam{}
	case 941161779:
		return &AnimTreeLayerName{}
	case 941445633:
		return &Type_381d5201{}
	case 945079131:
		return &Type_3854c35b{}
	case 948891356:
		return &DebugPlayerProcessHelpCodeMessage{}
	case 950929648:
		return &NotLogicSubcondition{}
	case 951791235:
		return &EffectGroupHardpoint{}
	case 958873913:
		return &ParametricSettings{}
	case 959143181:
		return &GeneratorToItemResponseMessage{}
	case 960545022:
		return &Type_3940c0fe{}
	case 962397665:
		return &CraftMultipleMessage{}
	case 962881663:
		return &MarkerReflectionProbeData{}
	case 963792479:
		return &HearthPortalInfoMessage{}
	case 964455581:
		return &ScriptEventParamOwnerFollower{}
	case 966075911:
		return &ConditionalAudioState{}
	case 971002810:
		return &PlayerWorldTierSubcondition{}
	case 977570672:
		return &AnimSetPowerEntry{}
	case 981125895:
		return &FreezeDirectionMessage{}
	case 982587744:
		return &Type_3a911960{}
	case 983502194:
		return &Type_3a9f0d72{}
	case 987746260:
		return &NPCPreset{}
	case 988032103:
		return &NpcGenerationData{}
	case 988753460:
		return &Type_3aef2e34{}
	case 989915321:
		return &Type_3b00e8b9{}
	case 991471482:
		return &Cylinder{}
	case 991799518:
		return &InterpolationScalar{}
	case 992657102:
		return &StoryboardPlayStoryboardNode{}
	case 1001478021:
		return &ParametricLayer{}
	case 1001740690:
		return &WorldStateDefinition{}
	case 1003082940:
		return &ChangedPlayerMessage{}
	case 1007410546:
		return &WallCornerPieces{}
	case 1007904609:
		return &StoreCameraTransition{}
	case 1011253607:
		return &Type_3c468167{}
	case 1011655352:
		return &PlasmaAttachMessage{}
	case 1014113135:
		return &TriggerEventDisableRagdollAnimationOverride{}
	case 1014763069:
		return &CancelGroupTransferMessage{}
	case 1014796656:
		return &ConversationNodeReference{}
	case 1015376646:
		return &ActorMountData{}
	case 1018331041:
		return &PlayerACDInfo{}
	case 1020310943:
		return &PlayerSavedDataMessage{}
	case 1023716882:
		return &TransmogSlotMessage{}
	case 1026071916:
		return &RecipeTier{}
	case 1028015787:
		return &DT_BYTE{}
	case 1028111660:
		return &DT_ENUM{}
	case 1028170061:
		return &DT_GBID{}
	case 1028442418:
		return &DT_NULL{}
	case 1028641394:
		return &Type_3d4fd272{}
	case 1028680983:
		return &DT_UINT{}
	case 1028759507:
		return &DT_WORD{}
	case 1030159526:
		return &CollisionSettingsDefinition{}
	case 1031323553:
		return &PlayerVariableValueSubcondition{}
	case 1032599996:
		return &AssetList{}
	case 1036833962:
		return &TriggerEventChangeClothParameters{}
	case 1038063251:
		return &Type_3ddf9693{}
	case 1038618161:
		return &DebugDataBlockMessage{}
	case 1043704300:
		return &TrackedRewardDefinition{}
	case 1051891831:
		return &SpeedTreeWindParams{}
	case 1053813052:
		return &Type_3ecfe93c{}
	case 1053929211:
		return &QuestDefinition{}
	case 1055008700:
		return &VendorInventory{}
	case 1055046034:
		return &Type_3ee2b992{}
	case 1056455724:
		return &ChallengeDefinition{}
	case 1058180893:
		return &LightStateParams{}
	case 1059956194:
		return &MarkerHeightFieldClutter{}
	case 1061475052:
		return &Type_3f44d2ec{}
	case 1063987433:
		return &ShrineGizmoData{}
	case 1064833490:
		return &Type_3f7811d2{}
	case 1066764433:
		return &Type_3f958891{}
	case 1068774800:
		return &FrameAnim{}
	case 1071057721:
		return &PowerBuffDefinition{}
	case 1074679724:
		return &CollSettingsParam{}
	case 1077456687:
		return &TriggerEventHitFlashDuration{}
	case 1079088876:
		return &TextureContent{}
	case 1083074776:
		return &PlayerTitleDefinition{}
	case 1083389844:
		return &PreloadSceneDataMessage{}
	case 1087707231:
		return &DWordDataMessage{}
	case 1090497837:
		return &AlwaysFalseSubcondition{}
	case 1091889950:
		return &ParagonThresholdDefinition{}
	case 1093951926:
		return &StaggerDefinition{}
	case 1098162516:
		return &Type_4174a154{}
	case 1101891844:
		return &OpenDungeonForLFDMessage{}
	case 1102252714:
		return &Type_41b30aaa{}
	case 1102252715:
		return &Type_41b30aab{}
	case 1103586575:
		return &FlagSetDefinition{}
	case 1105471552:
		return &DemonSummoningQuestBucket{}
	case 1105628966:
		return &Type_41e68f26{}
	case 1106225244:
		return &AnimTreeNodeOverrideWrapper{}
	case 1106358970:
		return &TriggerEventFrostBreath{}
	case 1107537454:
		return &SubzoneWorldMarkerSetEntry{}
	case 1109533772:
		return &TriggerEventDeleteAllObjects{}
	case 1110936387:
		return &Type_42378b43{}
	case 1113609512:
		return &Type_42605528{}
	case 1113825987:
		return &BiomeObject{}
	case 1113883424:
		return &ConversationCooldown{}
	case 1121250797:
		return &PowerConditionHasModPoints{}
	case 1121634143:
		return &Type_42dac75f{}
	case 1122569254:
		return &MountPreset{}
	case 1125787639:
		return &Type_431a27f7{}
	case 1127608961:
		return &EffectGroupPreloadHelper{}
	case 1127767451:
		return &BoneStructureInfoData{}
	case 1130943864:
		return &RopeEffectMessageACDToPlace{}
	case 1131078565:
		return &TriggerEventAddBaseMountLoadout{}
	case 1134541503:
		return &TriggerEventSubObjectVisibility{}
	case 1137498125:
		return &PvPChestGizmoData{}
	case 1143552823:
		return &Type_44293b37{}
	case 1144581000:
		return &TriggerEventHideWarpUI{}
	case 1144835562:
		return &MusicDefinition{}
	case 1150600713:
		return &PlayerCurrentWorldSubcondition{}
	case 1154619828:
		return &ProximityAdjustment{}
	case 1155821708:
		return &VisualEquipment{}
	case 1156716628:
		return &TraversalGizmoData{}
	case 1161896531:
		return &OnDeathBuffCallback{}
	case 1163953319:
		return &ParagonThresholdEntry{}
	case 1173939491:
		return &ClothDefinition{}
	case 1175697692:
		return &Type_4613b91c{}
	case 1178593178:
		return &UIItemButtonStyle{}
	case 1181604269:
		return &Quaternion16{}
	case 1185241065:
		return &HitpointSpecifier{}
	case 1187027022:
		return &AssetListEntry{}
	case 1187455164:
		return &Type_46c720bc{}
	case 1188733192:
		return &EffectGroupActorTrack{}
	case 1191591578:
		return &DefaultMaterialValueDefinition{}
	case 1195077723:
		return &TriggerEventAddTrail{}
	case 1196096041:
		return &PowerConditionDistanceToTarget{}
	case 1199573104:
		return &EngagedMessage{}
	case 1200534587:
		return &MarkerSavePointGizmoData{}
	case 1201772373:
		return &DestroyableObjectGizmoData{}
	case 1207123170:
		return &WeaponExpertiseRanks{}
	case 1208547332:
		return &TriggerEventCameraMoveToCameraMarker{}
	case 1210377699:
		return &ScriptEventParamBase{}
	case 1210430033:
		return &WorldStateUpdateMessage{}
	case 1210649495:
		return &ScriptEventParamItem{}
	case 1210992754:
		return &ScriptEventParamSelf{}
	case 1211952593:
		return &ScaleKey{}
	case 1213843687:
		return &DungeonAffixDefinition{}
	case 1215544921:
		return &UIWrapPanelStyle{}
	case 1220959089:
		return &DynamicMovementData_Table{}
	case 1221882697:
		return &InventoryRequestUseMessage{}
	case 1224073241:
		return &ParagonEquipBoardMessage{}
	case 1225817687:
		return &VibrationDefinition{}
	case 1228895741:
		return &ConnectionEstablishedMessage{}
	case 1236371119:
		return &EffectGroupTrack{}
	case 1237626281:
		return &SceneSubzoneMarkerSetPreloadHelper{}
	case 1238677571:
		return &Type_49d4b843{}
	case 1245475889:
		return &Type_4a3c7431{}
	case 1245693876:
		return &ActorPropData{}
	case 1247230898:
		return &OnGetHitBuffCallback{}
	case 1250952257:
		return &HeightFieldWaveSettings{}
	case 1251504619:
		return &DemonScrollDefinition{}
	case 1252497901:
		return &ScaleCurve{}
	case 1254730756:
		return &AIStateDebugTestPowerMessage{}
	case 1260918711:
		return &LookVariantMaterialMap{}
	case 1263412124:
		return &TryUnlockRecipeTierMessage{}
	case 1265777792:
		return &PlayerIntValMessage{}
	case 1266660523:
		return &GroundNormalTests{}
	case 1267580109:
		return &Type_4b8dbccd{}
	case 1269686704:
		return &MarkerHeightFieldTexture{}
	case 1270559160:
		return &StringWrapper{}
	case 1271971574:
		return &Type_4bd0bef6{}
	case 1274493949:
		return &StoryboardPlaySoundTrack{}
	case 1274683599:
		return &DebugDataHeaderMessage{}
	case 1274748969:
		return &UInt64DataMessage{}
	case 1278380139:
		return &RareMonsterNamesMessage{}
	case 1281316753:
		return &QuestTrackedQuestChangedMessage{}
	case 1282659427:
		return &PVPMonsterMessage{}
	case 1286645889:
		return &ScriptEventParamActor{}
	case 1288253615:
		return &TriggerEventDisableConstraint{}
	case 1288668428:
		return &Triangle2D{}
	case 1288668461:
		return &Triangle3D{}
	case 1288926662:
		return &PowerConditionSkillRankCompare{}
	case 1289731112:
		return &ScriptEventParamDWORD{}
	case 1292893022:
		return &ScriptEventParamFloat{}
	case 1295852463:
		return &ScriptEventParamAllowAny{}
	case 1300029571:
		return &RunTimeMaterialValues{}
	case 1304868885:
		return &ScriptEventParamPower{}
	case 1306251290:
		return &ScriptEventParamQuest{}
	case 1306363395:
		return &TraversalInstanceData{}
	case 1306543934:
		return &VersionsMessage{}
	case 1307976086:
		return &ScriptEventParamScene{}
	case 1308611305:
		return &SpawnLocType{}
	case 1310250065:
		return &TriggerEventCancelLook{}
	case 1313057402:
		return &Type_4e43aa7a{}
	case 1313165104:
		return &ScriptEventParamWorld{}
	case 1313940188:
		return &MarkerHeightFieldTextureInfo{}
	case 1317228073:
		return &GameBalanceDefinition{}
	case 1317967588:
		return &StartingAllowedWeather{}
	case 1320052487:
		return &BlockingActorLoadMessage{}
	case 1325067928:
		return &RareMonsterNamesEntry{}
	case 1325950502:
		return &WorldStateUpdateData{}
	case 1328668874:
		return &TriggerEventFootstep{}
	case 1330480459:
		return &WwiseAudioBus{}
	case 1334189719:
		return &ActorGroupSubcondition{}
	case 1335413793:
		return &OnOtherBuffAddedCallback{}
	case 1338965781:
		return &TriggerEventCameraTransitionToObserver{}
	case 1340417938:
		return &HirelingSwapMessage{}
	case 1345508590:
		return &ActivityMetadata{}
	case 1352167279:
		return &Material{}
	case 1353876900:
		return &Type_50b285a4{}
	case 1357984967:
		return &SalvagedItemLabelSubcondition{}
	case 1358693725:
		return &AnimPermutation{}
	case 1359885118:
		return &ACDPrimaryPowerMessage{}
	case 1361343054:
		return &TriggerData{}
	case 1362850202:
		return &DRLGDungeonState{}
	case 1364074038:
		return &ActorPhysicsData{}
	case 1364938622:
		return &BoneData{}
	case 1365215937:
		return &RecipeIngredient{}
	case 1365297765:
		return &BoneName{}
	case 1367839516:
		return &TriggerEventHideCaptionUI{}
	case 1370498779:
		return &PlayerPossessActorMessage{}
	case 1370930836:
		return &SubObjectSegment{}
	case 1375908409:
		return &OnFirstHitAttemptBuffCallback{}
	case 1376535853:
		return &PowerMod{}
	case 1378962479:
		return &Type_52314c2f{}
	case 1380971296:
		return &WorldLocationMessageData{}
	case 1381884558:
		return &Type_525de28e{}
	case 1384905369:
		return &TriggerEventAddEffectGroup{}
	case 1385175149:
		return &ExtractAffixResultMessage{}
	case 1385267894:
		return &MarkerEffectGroupData{}
	case 1391978581:
		return &EnchantAffixChooseMessage{}
	case 1395779955:
		return &SimpleRequest{}
	case 1398161649:
		return &Type_535640f1{}
	case 1401177745:
		return &Type_53844691{}
	case 1403384113:
		return &AIPathData{}
	case 1404327310:
		return &OnContactFramePowerCallback{}
	case 1404527137:
		return &ConditionData{}
	case 1405707193:
		return &GoToWaypointMessage{}
	case 1406641541:
		return &MonsterExtRaritySubcondition{}
	case 1410120192:
		return &ScriptEventInvalidType{}
	case 1411504817:
		return &POICameraGizmoData{}
	case 1412871082:
		return &SupportedServices{}
	case 1414125715:
		return &ScriptEventParamFloatGreaterThan{}
	case 1414743843:
		return &Type_54534723{}
	case 1420342763:
		return &EnterWorldMessage{}
	case 1428470990:
		return &Type_5524bcce{}
	case 1428538427:
		return &BiomeItem{}
	case 1429869474:
		return &GlobalRoadSpline{}
	case 1429922773:
		return &OnKnockbackEndPowerCallback{}
	case 1431372750:
		return &GameTestingWorldSamplingStartMessage{}
	case 1441694327:
		return &Type_55ee8277{}
	case 1442146883:
		return &TriggerEventShowSubtitle{}
	case 1442604930:
		return &AnimSetOrderTagEntry_Table{}
	case 1443554511:
		return &Type_560ae4cf{}
	case 1445759116:
		return &Type_562c888c{}
	case 1452860828:
		return &MarkerObserverVolumeData{}
	case 1455359337:
		return &PrefabCustomization{}
	case 1455893936:
		return &PowerStartVariant{}
	case 1457308015:
		return &Type_56dcc16f{}
	case 1457360706:
		return &ActorItemData{}
	case 1460440831:
		return &TrackedQuestChangedMessage{}
	case 1462511893:
		return &ParagonGlyphDefinition{}
	case 1462706204:
		return &Type_572f201c{}
	case 1462760288:
		return &ACDSyncBuffsMessage{}
	case 1466985016:
		return &AllLogicSubcondition{}
	case 1469357787:
		return &MonsterFamilySubcondition{}
	case 1481956267:
		return &GizmoMessage{}
	case 1482076039:
		return &ActorGroupData_Table{}
	case 1484526036:
		return &TraceMessage{}
	case 1485298337:
		return &Type_5887daa1{}
	case 1487816389:
		return &TriggerEventActorPlayAnimation{}
	case 1488082503:
		return &DemonSummoningQuestBucket_Table{}
	case 1490043571:
		return &ScriptEventParamSpawnerParentName{}
	case 1490227580:
		return &ScriptEventParamSpawnerParentSelf{}
	case 1490385319:
		return &MarkerSplineData{}
	case 1492891980:
		return &Type_58fbb94c{}
	case 1494553099:
		return &UIThumbButtonStyle{}
	case 1496684361:
		return &NPCComponentSetDefinition{}
	case 1496944793:
		return &ParagonGlyphUpgradeMessage{}
	case 1497572237:
		return &HorizontalTiledWindowPieces{}
	case 1498808798:
		return &ClanLabel{}
	case 1499500636:
		return &TerritoryRegionParams{}
	case 1499847222:
		return &AccountDefinition{}
	case 1500149896:
		return &UIComboBoxStyle{}
	case 1500520594:
		return &SwitchGizmoData{}
	case 1505533788:
		return &MonsterACDInfo{}
	case 1506311405:
		return &GlobalCrafterEvents{}
	case 1510969510:
		return &DemonSummoningRitualQuests{}
	case 1512482878:
		return &GameTestingPersonaSamplingStartMessage{}
	case 1515056329:
		return &SurveyTypeEntry_Table{}
	case 1515542467:
		return &SoundTableEntry{}
	case 1516041750:
		return &PlayerLevelSubcondition{}
	case 1519954155:
		return &MaterialScalarValueDefinition{}
	case 1524322706:
		return &TriggerEventFadeRemotePlayers{}
	case 1527347021:
		return &VertInfluences{}
	case 1527797171:
		return &EnterKnownLookOverrides{}
	case 1529384342:
		return &AIStateDebugSetEntryStateMessage{}
	case 1530760901:
		return &GlobalNPCCustomizationData{}
	case 1531705921:
		return &PowerConditionDamageIsCrit{}
	case 1536548129:
		return &VertexElem{}
	case 1539306012:
		return &PostApplyBuffCallback{}
	case 1539764745:
		return &HoudiniParticlesSimDefinition{}
	case 1542498662:
		return &InventoryLocationMessageData{}
	case 1545009353:
		return &NecroArmyUnitSpecializationData{}
	case 1545908648:
		return &Type_5c24b1a8{}
	case 1548004936:
		return &Type_5c44ae48{}
	case 1548404444:
		return &Type_5c4ac6dc{}
	case 1548498258:
		return &OnHitBuffCallback{}
	case 1549763492:
		return &FogOfWarDefinition{}
	case 1552149356:
		return &Type_5c83eb6c{}
	case 1553481155:
		return &VisualItem{}
	case 1553851092:
		return &PlayerClassNecroData{}
	case 1557633509:
		return &InventoryRequestSocketMessage{}
	case 1560350015:
		return &OnResourceSpentBuffCallback{}
	case 1561306520:
		return &SceneCommonSpecification{}
	case 1563449722:
		return &PlayerSavedData{}
	case 1565240433:
		return &PolymorphicBase{}
	case 1567071638:
		return &PolytopeData{}
	case 1567658692:
		return &PrefetchSceneMessage{}
	case 1572611965:
		return &NpcTemplate{}
	case 1573591793:
		return &PowerConditionIsSkillSlot{}
	case 1578221855:
		return &TriggerEventShowClosedCaption{}
	case 1578429650:
		return &AssignTechniqueSlotMessage{}
	case 1579502660:
		return &GroundTestPosition{}
	case 1579898130:
		return &ScriptEventParamMonsterFamily{}
	case 1580383550:
		return &Type_5e32bd3e{}
	case 1583616832:
		return &Type_5e641340{}
	case 1585147788:
		return &MusicTransition{}
	case 1585421177:
		return &Type_5e7f9b79{}
	case 1587276558:
		return &PowerConditionIsStealthed{}
	case 1589989121:
		return &DecalLookVariantMap{}
	case 1595431348:
		return &Type_5f1859b4{}
	case 1596648439:
		return &HeroDefinition{}
	case 1598717599:
		return &RareMonsterNamesEntry_Table{}
	case 1599239464:
		return &Type_5f527528{}
	case 1600030893:
		return &PowerFacingWindow{}
	case 1600853111:
		return &UIScrollableTextStyle{}
	case 1606406480:
		return &SNONameDataMessage{}
	case 1609541836:
		return &MarkerWallData{}
	case 1612373481:
		return &ScriptEventParamLinkedMarkerAny{}
	case 1613488483:
		return &PS5ConsoleAwardDefinition{}
	case 1613933674:
		return &LookVariant{}
	case 1620996494:
		return &EmitterCylinderData{}
	case 1621969581:
		return &RunTimeMaterialScalarGraphEntry{}
	case 1627723867:
		return &Type_6105185b{}
	case 1629427722:
		return &AbortPowerMessage{}
	case 1632310600:
		return &CheckpointGizmoData{}
	case 1634307306:
		return &Type_61698cea{}
	case 1635348238:
		return &PetMessage{}
	case 1636896932:
		return &Type_619110a4{}
	case 1640357264:
		return &AnimTreeBlendTriangle{}
	case 1641549773:
		return &PowerConditionIsInActorGroup{}
	case 1645595534:
		return &LargeBiomeObject{}
	case 1647198707:
		return &MonsterFamilyDefinition{}
	case 1648188489:
		return &TriggerEventHitFlash{}
	case 1661010243:
		return &Type_63010143{}
	case 1661010244:
		return &Type_63010144{}
	case 1662164195:
		return &QuestPhase{}
	case 1664425892:
		return &ImbueAffixResultMessage{}
	case 1665901277:
		return &AnimSetAnimPreloadHelper{}
	case 1668292200:
		return &Type_63701e68{}
	case 1670410600:
		return &TriggerEventFootstepDrag{}
	case 1670688473:
		return &TriggerEventFootstepLift{}
	case 1671323816:
		return &ConversationSpeakerCaseNode{}
	case 1672889714:
		return &PlayerTalentRankSubcondition{}
	case 1675052528:
		return &BoostDefinition{}
	case 1680851546:
		return &Type_642fc25a{}
	case 1681337108:
		return &Type_64372b14{}
	case 1683664497:
		return &DT_POLYMORPHIC_VARIABLEARRAY[T]{}
	case 1687293198:
		return &TriggerEventDisableCollisionMessages{}
	case 1688351367:
		return &UIScrollBoxStyle{}
	case 1693956821:
		return &InventorySplitStackMessage{}
	case 1697033285:
		return &PlayerWorldTierEligibilityMessage{}
	case 1697914509:
		return &AIPropType{}
	case 1698657718:
		return &UIControlFont{}
	case 1698752488:
		return &UIControlIcon{}
	case 1700805074:
		return &PortalGizmoData{}
	case 1703620037:
		return &TelemetryBugEnteredMessage{}
	case 1706747121:
		return &SalvageResultItem{}
	case 1707030331:
		return &ItemUpgradeResultMessage{}
	case 1708090461:
		return &FoliageGrid{}
	case 1708808756:
		return &GlobalVendorEvents{}
	case 1709841508:
		return &PlayerQuestMessage{}
	case 1712030165:
		return &Type_660b81d5{}
	case 1717523836:
		return &Type_665f557c{}
	case 1718506033:
		return &Type_666e5231{}
	case 1718849905:
		return &NecroArmyUnitSpecializationUpgradeData{}
	case 1724776431:
		return &TriggerEventSequenceEnded{}
	case 1725462643:
		return &UIMinimapRoadsStyle{}
	case 1733186626:
		return &Type_674e5442{}
	case 1738300573:
		return &MarkerMonsterActorData{}
	case 1738373142:
		return &PowerConditionDamageIsDot{}
	case 1740982451:
		return &Type_67c548b3{}
	case 1745318875:
		return &ActorSlotHelper{}
	case 1745391946:
		return &Type_6808914a{}
	case 1751632332:
		return &Type_6867c9cc{}
	case 1752813939:
		return &Type_6879d173{}
	case 1753871156:
		return &WaypointEffectInfo{}
	case 1755847107:
		return &HardpointOffsets{}
	case 1756881483:
		return &RevealTeamMessage{}
	case 1760724339:
		return &IKLegBoneChain{}
	case 1762254162:
		return &Type_6909dd52{}
	case 1766737593:
		return &SNOFileHeader{}
	case 1769463365:
		return &Type_6977de45{}
	case 1770847088:
		return &UITimerStyle{}
	case 1771829381:
		return &OnStartPowerCallback{}
	case 1775775341:
		return &AtLeastLogicSubcondition{}
	case 1776237801:
		return &ItemCountSubcondition{}
	case 1777060346:
		return &NecroPetData{}
	case 1777318472:
		return &EffectGroupActorAnimationTrack{}
	case 1780051193:
		return &ScriptEventParamLevelArea{}
	case 1781863288:
		return &ItemQualityModifierSubcondition{}
	case 1782591369:
		return &UIContextMenuStyle{}
	case 1786551918:
		return &CraftingMatCategory{}
	case 1786644177:
		return &DeathMaterialTemplate{}
	case 1787454432:
		return &Type_6a8a63e0{}
	case 1789096554:
		return &RunTimeMaterialVectorGraphEntry{}
	case 1791638909:
		return &Type_6aca3d7d{}
	case 1795423328:
		return &Type_6b03fc60{}
	case 1797021084:
		return &Type_6b1c5d9c{}
	case 1797564205:
		return &PlayerWeaponExpertiseLevelMessage{}
	case 1800961110:
		return &SphereProximityData{}
	case 1801469402:
		return &Type_6b603dda{}
	case 1805383760:
		return &DebugDataFinishedMessage{}
	case 1806235108:
		return &ACDTranslateNormalMessage{}
	case 1806875813:
		return &GameFlagSubcondition{}
	case 1810202905:
		return &Influence{}
	case 1811863812:
		return &VertTiledWindowPieces{}
	case 1812237195:
		return &Type_6c048b8b{}
	case 1812693783:
		return &ParagonGlyphObtainedMessage{}
	case 1812719981:
		return &DemonScrollNodeMessage{}
	case 1815184996:
		return &Type_6c318664{}
	case 1815206818:
		return &PvPResurrectTriggeredBuffCallback{}
	case 1816168716:
		return &ConditionProperty{}
	case 1817937405:
		return &ParagonUnequipSocketMessage{}
	case 1826826915:
		return &Type_6ce32aa3{}
	case 1827034945:
		return &MaterialValueSetDefinition{}
	case 1827228827:
		return &SkillTreeReward_Table{}
	case 1828129294:
		return &WorldRevealedPortalInfo{}
	case 1835606997:
		return &PlayCutsceneMessage{}
	case 1843934011:
		return &Type_6de8333b{}
	case 1845219085:
		return &PowerConditionDamageIsFromPayload{}
	case 1849409482:
		return &MapPinMessage{}
	case 1852155541:
		return &ActorVariantPreloadHelper{}
	case 1853817945:
		return &Type_6e7f0459{}
	case 1860709698:
		return &AttributeSetValueMessage{}
	case 1860780666:
		return &Type_6ee9427a{}
	case 1863894076:
		return &Type_6f18c43c{}
	case 1866279015:
		return &LockingGizmoData{}
	case 1868650677:
		return &Type_6f6158b5{}
	case 1869689402:
		return &HitReactionOverride{}
	case 1872500871:
		return &IconLayout{}
	case 1874071251:
		return &TriggerEventChangePhysicsParameters{}
	case 1874856805:
		return &ClanBankMoveItemMessage{}
	case 1877253458:
		return &PlayerCurrentLevelAreaSubcondition{}
	case 1878327400:
		return &Type_6ff50068{}
	case 1886370288:
		return &TriggerEventTransparency{}
	case 1887511799:
		return &TriggerEventObjectLookAt{}
	case 1887910602:
		return &CraftingRecipeResultMessage{}
	case 1890695261:
		return &ScriptEventParamSecondaryGroup{}
	case 1892122433:
		return &HeroPreset{}
	case 1894103222:
		return &PrefabDataInfo{}
	case 1894312142:
		return &PrefabScopedActorGroupData{}
	case 1894444122:
		return &UIAutoScrollingTextStyle{}
	case 1896923476:
		return &BarbWeaponExpertiseData{}
	case 1899575067:
		return &PlayerNonAuthoritativePositionMessage{}
	case 1900436670:
		return &GeneratorToItemMessage{}
	case 1900454970:
		return &Type_7146a43a{}
	case 1904113869:
		return &ItemPowerSubcondition{}
	case 1904447052:
		return &PersonaSkinColor{}
	case 1905862367:
		return &ActorCollisionData{}
	case 1910102078:
		return &Type_71d9d83e{}
	case 1913132816:
		return &Type_72081710{}
	case 1914659836:
		return &AssignClassPassiveSkillSlotMessage{}
	case 1915825028:
		return &MediumBiomeObject{}
	case 1917309641:
		return &Type_7247d2c9{}
	case 1919141278:
		return &LooteeLevelRangeSubcondition{}
	case 1921550813:
		return &TriggerEventMsg{}
	case 1922961974:
		return &StencilParams{}
	case 1925015032:
		return &Type_72bd65f8{}
	case 1927540920:
		return &GlobalMarkerActorPortalData{}
	case 1928395195:
		return &ChangeAppearanceMessage{}
	case 1929374276:
		return &Type_72ffea44{}
	case 1929750214:
		return &GameTestingStatusTextMessage{}
	case 1931092405:
		return &DT_BCVEC2I{}
	case 1931790071:
		return &MarkerDestroyableObjectGizmoData{}
	case 1932093566:
		return &ForcedPrefetchData{}
	case 1932832286:
		return &OnInitializeDamageBuffCallback{}
	case 1934448837:
		return &VoteKickMessage{}
	case 1937283260:
		return &Type_737898bc{}
	case 1937804743:
		return &SkillTreeNodeEntry{}
	case 1941067946:
		return &ChangedHeroIdMessage{}
	case 1941343248:
		return &PowerConditionHasActorTarget{}
	case 1946425919:
		return &LogicSubcondition{}
	case 1947080328:
		return &UIConsoleEditStyle{}
	case 1954392551:
		return &DRLGPortalInfo{}
	case 1955932002:
		return &Type_74952762{}
	case 1956557694:
		return &BoostCheatEntry{}
	case 1958909611:
		return &NpcLookTagEntry_Table{}
	case 1961073695:
		return &CameraModeSetMessage{}
	case 1963650241:
		return &ExperienceLevelAlt{}
	case 1966453421:
		return &Type_7535b2ad{}
	case 1970160507:
		return &ColorCorrectionParams{}
	case 1975688513:
		return &UIMinimapArtStyle{}
	case 1976178896:
		return &Type_75ca18d0{}
	case 1976572630:
		return &TriggerEvent{}
	case 1976971716:
		return &AICellData{}
	case 1977693790:
		return &PlayMusicOverlayMessage{}
	case 1982581444:
		return &BannerMaskOnly{}
	case 1983770026:
		return &DeathFadeTimeMessage{}
	case 1984123993:
		return &ActorGizmoData{}
	case 1986190036:
		return &FlagLookup{}
	case 1988397685:
		return &TriggerEventAddRope{}
	case 1989677168:
		return &GenericBlobResponseMessage{}
	case 1994743229:
		return &EffectGroupActorPositionTrack{}
	case 1996222619:
		return &WorldEventStartingMessage{}
	case 1996866922:
		return &ImbueRecipe{}
	case 2003228405:
		return &NecroArmyUnitMessage{}
	case 2004372852:
		return &SpeakerDefinition{}
	case 2006826034:
		return &TriggerEventSetWeaponSheathed{}
	case 2007470353:
		return &Type_77a79111{}
	case 2007685731:
		return &Type_77aada63{}
	case 2011319229:
		return &Type_77e24bbd{}
	case 2012569092:
		return &OnInterruptPowerCallback{}
	case 2018777882:
		return &Type_78541b1a{}
	case 2019694123:
		return &OnCreatePowerCallback{}
	case 2021184730:
		return &ACDGroupMessage{}
	case 2022002312:
		return &Type_78854e88{}
	case 2024104618:
		return &Type_78a562aa{}
	case 2028905861:
		return &PlayerClassResourceData{}
	case 2029186460:
		return &TriggerCleanup{}
	case 2029827469:
		return &ClientDebugLogMessage{}
	case 2030959986:
		return &ActivityReward{}
	case 2031655355:
		return &PowerPhasePreplay{}
	case 2034679227:
		return &ScriptEventParamQuestName{}
	case 2036903461:
		return &CurrentLevelAreaSubcondition{}
	case 2037513697:
		return &GlobalMarkerActorWaypointData{}
	case 2041894246:
		return &PrivateGameSubcondition{}
	case 2046453424:
		return &MarkerInstanceChunk{}
	case 2046994646:
		return &Type_7a02a8d6{}
	case 2049702795:
		return &ScriptEventParamMonsterRarity{}
	case 2051550180:
		return &MarkerInstanceGroup{}
	case 2052605128:
		return &PrefetchQuestMessage{}
	case 2056603216:
		return &Type_7a954650{}
	case 2057617923:
		return &EffectGroupDefinition{}
	case 2057942129:
		return &CurrencyModifiedMessage{}
	case 2058477748:
		return &Type_7ab1e0b4{}
	case 2059036506:
		return &Type_7aba675a{}
	case 2059654736:
		return &Type_7ac3d650{}
	case 2060105275:
		return &Type_7acab63b{}
	case 2060884859:
		return &OctreePrimitive{}
	case 2061652930:
		return &DebugProjectileCollisionCheck{}
	case 2064769380:
		return &MarkerPortalDestGizmoData{}
	case 2065256525:
		return &ItemSourceWorldTierSubcondition{}
	case 2066859665:
		return &ItemUpgradeCountSubcondition{}
	case 2066998999:
		return &NPCHairColors{}
	case 2067380477:
		return &OnResourceGainedBuffCallback{}
	case 2073439808:
		return &Type_7b962e40{}
	case 2074591759:
		return &Type_7ba7c20f{}
	case 2077459498:
		return &FoleyMaterialTag{}
	case 2079139131:
		return &Type_7bed253b{}
	case 2087454851:
		return &ScriptEventParamConversation{}
	case 2088474641:
		return &SubObjectAppearance{}
	case 2088915018:
		return &PowerConditionIsValidForWeaponExpertise{}
	case 2092006570:
		return &OnBerserkRemovedCallback{}
	case 2094206499:
		return &AnimSetOverrideEntry{}
	case 2098572313:
		return &CollisionMesh{}
	case 2104860565:
		return &SkillTreeNode{}
	case 2105554066:
		return &Type_7d803492{}
	case 2112201650:
		return &ScriptEventParamFloatRangeEntered{}
	case 2112421053:
		return &Type_7de8fcbd{}
	case 2114060201:
		return &ActorCombatData{}
	case 2114606337:
		return &Type_7e0a5501{}
	case 2118224808:
		return &Type_7e418ba8{}
	case 2121213381:
		return &GameTestingActorDeathSamplingStartMessage{}
	case 2127931882:
		return &WorldEvent{}
	case 2137439767:
		return &DeathLookTemplate{}
	case 2142531194:
		return &Type_7fb46e7a{}
	case 2142750046:
		return &HirelingInfo{}
	case 2143433921:
		return &Type_7fc234c1{}
	case 2144199072:
		return &HiddenCacheGizmoData{}
	case 2145337385:
		return &SurfaceWorldConstraints{}
	case 2145377512:
		return &TriggerEventCameraStayOnSpline{}
	case 2145577021:
		return &ParticleDefinition{}
	case 2146499348:
		return &Type_7ff0fb14{}
	case 2149480436:
		return &TriggerEventSetWeaponVisibility{}
	case 2151397172:
		return &SonyConsoleAwardDefinition{}
	case 2151579788:
		return &Type_803e808c{}
	case 2153074669:
		return &Type_80554fed{}
	case 2155009884:
		return &AnimPreplayData{}
	case 2157773438:
		return &ConversationSpeakerSwitchNode{}
	case 2160968233:
		return &Hardpoint{}
	case 2163877900:
		return &Type_80fa280c{}
	case 2163881319:
		return &Type_80fa3567{}
	case 2166886397:
		return &LineSeg2D{}
	case 2166886430:
		return &LineSeg3D{}
	case 2170423475:
		return &Matrix3x3{}
	case 2170424565:
		return &Matrix4x4{}
	case 2170992511:
		return &PeriodicBuffCallback{}
	case 2171505484:
		return &Type_816e8b4c{}
	case 2172679889:
		return &RandomNumberGenerator{}
	case 2172682041:
		return &Type_81807f39{}
	case 2174682268:
		return &ANNDataMessage{}
	case 2175310548:
		return &DT_CHARARRAY{}
	case 2176853528:
		return &RunTimeMaterialScalarValueEntry{}
	case 2179972544:
		return &CrowdControlEffects{}
	case 2181073666:
		return &Type_82008b02{}
	case 2181465511:
		return &ScriptEventParamPlayerAlly{}
	case 2183663603:
		return &Type_82280ff3{}
	case 2184063125:
		return &Type_822e2895{}
	case 2185067100:
		return &BlizzconSubcondition{}
	case 2193642883:
		return &DT_STARTLOC_NAME{}
	case 2196035606:
		return &ParticleLifeEvent{}
	case 2201739835:
		return &QuestItemCountSubcondition{}
	case 2203797867:
		return &PowerConditionDamageHasFortified{}
	case 2203850545:
		return &Type_835c1731{}
	case 2204929451:
		return &Type_836c8dab{}
	case 2209846478:
		return &InitiateGroupTransferMessage{}
	case 2214406937:
		return &AppearanceDefinition{}
	case 2215366883:
		return &WwiseExternalSource{}
	case 2216403567:
		return &Type_841ba26f{}
	case 2217400535:
		return &TriggerEventChangeLookDuration{}
	case 2218862017:
		return &LocalPlayerNetEvent{}
	case 2221046122:
		return &Type_8462796a{}
	case 2224583688:
		return &ConvexHull{}
	case 2228087293:
		return &ActorWeaponData{}
	case 2231778435:
		return &ConditionalMaterialOverride{}
	case 2231852322:
		return &BasicGizmoData{}
	case 2232542902:
		return &LabelGBID{}
	case 2232906326:
		return &FoleyMaterialTagInfo{}
	case 2232994936:
		return &LabelRule{}
	case 2236788925:
		return &PowerConditionIsInCombat{}
	case 2237510224:
		return &InventoryRequestQuickMoveMessage{}
	case 2239531469:
		return &Type_857c89cd{}
	case 2241053736:
		return &WwiseInitSoundBank{}
	case 2241554070:
		return &WardrobeGizmoData{}
	case 2241717353:
		return &GlobalRoadGraph{}
	case 2244038972:
		return &ScreenStaticCamps{}
	case 2246606637:
		return &WorldSetRemainingReviveCountMessage{}
	case 2247187911:
		return &Type_85f15dc7{}
	case 2247750652:
		return &OnHitEffectTriggeredBuffCallback{}
	case 2251741487:
		return &Type_8636d92f{}
	case 2254079268:
		return &SpeakerActorOverride{}
	case 2256765564:
		return &PowerConditionHasItemEquipped{}
	case 2257212908:
		return &SchedulerGlobalUniqueCategory_Table{}
	case 2264191210:
		return &PlayerIndexMessage{}
	case 2266988989:
		return &DRLGNodeLink{}
	case 2268617325:
		return &Type_87385a6d{}
	case 2271882673:
		return &AssignArsenalSkillSlotMessage{}
	case 2273327169:
		return &DesignerVariablePayload{}
	case 2273337114:
		return &ItemTypeDefinition{}
	case 2275911501:
		return &Type_87a7a74d{}
	case 2281806197:
		return &FloatDataMessage{}
	case 2286345736:
		return &ACDChangeGBHandleMessage{}
	case 2286607278:
		return &MailRetrieveMessage{}
	case 2288649288:
		return &SceneData{}
	case 2289366803:
		return &LevelScalingData{}
	case 2289552381:
		return &MailRetrieveResponseMessage{}
	case 2291044736:
		return &ActorGroupData{}
	case 2292633268:
		return &TimeSinceEventSubcondition{}
	case 2294093111:
		return &LoreMessage{}
	case 2294355469:
		return &Type_88c1160d{}
	case 2296234344:
		return &ActiveSkillSavedData{}
	case 2303447637:
		return &Type_894bd255{}
	case 2305778229:
		return &PowerCallbackBase{}
	case 2306151105:
		return &ProcChanceBuffCallbackBase{}
	case 2307863150:
		return &GameTestingMonsterSamplingStartMessage{}
	case 2308255985:
		return &ScriptEventParamGameTime{}
	case 2309166548:
		return &Int64DataMessage{}
	case 2311704666:
		return &UIItemTagStyle{}
	case 2313381993:
		return &AnimPayloadData{}
	case 2314008733:
		return &ActorAIData{}
	case 2314185754:
		return &Type_89efac1a{}
	case 2316484023:
		return &Type_8a12bdb7{}
	case 2317315368:
		return &PostFXParams{}
	case 2319005362:
		return &LevelAreaTagsEntry{}
	case 2321101556:
		return &UIListBoxStyle{}
	case 2322101684:
		return &PlayerClassSubcondition{}
	case 2322205255:
		return &OnGizmoOperatedBuffCallback{}
	case 2322586175:
		return &PowerConditionDamageHasVulnerable{}
	case 2330953703:
		return &Type_8aef87e7{}
	case 2332138205:
		return &AIBroadcast{}
	case 2335353143:
		return &Type_8b32a937{}
	case 2339908716:
		return &UnassignSkillMessage{}
	case 2340576936:
		return &VoiceActorEntry_Table{}
	case 2342148084:
		return &ReputationDefinition{}
	case 2342641194:
		return &IntDataMessage{}
	case 2343980501:
		return &RunTimeMaterialVectorValueEntry{}
	case 2345705581:
		return &GroupTransferQueryMessage{}
	case 2350164363:
		return &PowerConditionHasSkillTag{}
	case 2351673709:
		return &SkillEnchantSavedData{}
	case 2352207656:
		return &Type_8c33d728{}
	case 2354163126:
		return &CampaignArc{}
	case 2354985244:
		return &ReputationSubcondition{}
	case 2359108143:
		return &TriggerEventShowWarpUI{}
	case 2363268517:
		return &GameTestingSmokeSamplingStartMessage{}
	case 2365357836:
		return &ACDChangeActorMessage{}
	case 2366025409:
		return &Type_8d06aec1{}
	case 2366029567:
		return &Type_8d06beff{}
	case 2366545239:
		return &Type_8d0e9d57{}
	case 2366876290:
		return &LevelScalingDefinition{}
	case 2367854564:
		return &GlobalCustomizationData{}
	case 2368820934:
		return &PlayAnimationMessageSpec{}
	case 2369645379:
		return &TriggerProximityData{}
	case 2370441714:
		return &PetType_Table{}
	case 2372115555:
		return &TriggerEventShowCaptionUI{}
	case 2378235681:
		return &MaterialBoolValueDefinition{}
	case 2378676899:
		return &AttributeFormulaEntry_Table{}
	case 2381837287:
		return &GameFoundForTransferMessage{}
	case 2382044172:
		return &PlayerDWordDataMessage{}
	case 2382427025:
		return &WindowPieces{}
	case 2384880434:
		return &DT_RGBACOLOR{}
	case 2385389941:
		return &ConsoleEvent{}
	case 2387944564:
		return &PlayerHealthSubcondition{}
	case 2388214534:
		return &DT_FIXEDARRAY[T]{}
	case 2388963472:
		return &GameTestingWorldEventSamplingStartMessage{}
	case 2394153027:
		return &LookLink{}
	case 2394280102:
		return &MarkerAudioVolumeData{}
	case 2395658582:
		return &MarkerDoorGizmoData{}
	case 2395819864:
		return &PlayerIsMaxLevelSubcondition{}
	case 2400971897:
		return &FlippyMessage{}
	case 2401292714:
		return &NullProximityData{}
	case 2402010415:
		return &VertexDensitySettings{}
	case 2404505973:
		return &GBIDDataMessage{}
	case 2405096309:
		return &DecalTemplate{}
	case 2409250148:
		return &PlayerHasFollowerSubcondition{}
	case 2412575474:
		return &Type_8fccfaf2{}
	case 2417105777:
		return &PlayNonPositionalSoundMessage{}
	case 2420814353:
		return &Type_904ab211{}
	case 2421467334:
		return &ActorGroup{}
	case 2423935966:
		return &AnimTreeDefinition{}
	case 2430479134:
		return &SavedTransmog{}
	case 2433333811:
		return &Type_9109ba33{}
	case 2438391130:
		return &OnRetreatCompleteCallback{}
	case 2442380883:
		return &PowerConditionOnChance{}
	case 2450313795:
		return &DT_STRING_FORMULA{}
	case 2451485018:
		return &EnchantAffixChoice{}
	case 2451870822:
		return &NPCComponentEntry{}
	case 2454123799:
		return &PetDetachMessage{}
	case 2454381057:
		return &NPCComponentGroup{}
	case 2454888476:
		return &EncounterDefinition{}
	case 2456833659:
		return &Type_92704e7b{}
	case 2465803619:
		return &DungeonSpawningPoolEntry{}
	case 2469691855:
		return &ReverbDefinition{}
	case 2473743515:
		return &ParagonGlyphExperience_Table{}
	case 2474805987:
		return &Type_93828ae3{}
	case 2475257601:
		return &OctreeCube{}
	case 2475563578:
		return &OctreeLeaf{}
	case 2475646440:
		return &OctreeNode{}
	case 2478508419:
		return &GlobalIntensityLevels{}
	case 2478744539:
		return &PersistentEventUpdateMessage{}
	case 2486290493:
		return &BroadcastTextMessage{}
	case 2489740473:
		return &Type_94666cb9{}
	case 2498157443:
		return &MarkingShapeDefinition{}
	case 2499966838:
		return &MaxKeyedDungeonCompletedSubcondition{}
	case 2500959896:
		return &Type_95119e98{}
	case 2502332464:
		return &Type_95269030{}
	case 2504911729:
		return &Type_954deb71{}
	case 2507153527:
		return &PlayerClassCoreStatBenefitEntry{}
	case 2508478640:
		return &QuestCallbackSubcondition{}
	case 2510049735:
		return &SceneChunk{}
	case 2511145847:
		return &SceneDefinition{}
	case 2517296881:
		return &OperateWorldTierSelectMessage{}
	case 2517800201:
		return &HealthPotionData{}
	case 2519410570:
		return &MailDeleteResponseMessage{}
	case 2519917715:
		return &TrickleMessage{}
	case 2520702334:
		return &InterpolationPathHeader{}
	case 2522697303:
		return &TransmogEnableMessage{}
	case 2526923990:
		return &WallPiece{}
	case 2529552754:
		return &RevealSceneMessage{}
	case 2531064807:
		return &ExperienceLevel_Table{}
	case 2532034596:
		return &OnAIUpdatePowerCallback{}
	case 2535282083:
		return &ScriptEventParamOwnerParty{}
	case 2537782937:
		return &MonsterSubcondition{}
	case 2538390904:
		return &FaceDefinition{}
	case 2540505462:
		return &Type_976d0976{}
	case 2540765384:
		return &Type_977100c8{}
	case 2543084619:
		return &ActorMovementPowerData{}
	case 2544145426:
		return &IKFrames{}
	case 2544485076:
		return &MonsterRaritySubcondition{}
	case 2548851047:
		return &DemonScrollRewardChoicePickedMessage{}
	case 2549076906:
		return &GlobalSnoTemplatesData{}
	case 2549498530:
		return &PS4ConsoleAwardDefinition{}
	case 2549709590:
		return &ActivityDefinition{}
	case 2549930403:
		return &AngularAxisParams{}
	case 2550988783:
		return &ActivateDungeonKeyMessage{}
	case 2554403987:
		return &PowerConditionHasBuff{}
	case 2554746855:
		return &Type_984657e7{}
	case 2562866241:
		return &Type_98c23c41{}
	case 2563708935:
		return &VisualInventoryMessage{}
	case 2564089914:
		return &UIRActorStyle{}
	case 2564555685:
		return &AppBone{}
	case 2567036372:
		return &ZoneProgressClaimRewardsMessage{}
	case 2568734177:
		return &RecipeDefinition{}
	case 2568815379:
		return &Type_991d0313{}
	case 2569096240:
		return &ACDTranslateDetPathSpiralMessage{}
	case 2570366766:
		return &Type_9934af2e{}
	case 2570990031:
		return &Type_993e31cf{}
	case 2571326005:
		return &Environment{}
	case 2571982133:
		return &ConversationLineSetNode{}
	case 2575985446:
		return &Type_998a6b26{}
	case 2577181091:
		return &UIHotkeyStyle{}
	case 2580339411:
		return &PowerScriptParam{}
	case 2580740532:
		return &Type_99d2f9b4{}
	case 2581622842:
		return &DisplayGameTextMessage{}
	case 2582092633:
		return &DungeonAffixFamilyEntry_Table{}
	case 2583917793:
		return &OnOtherBuffRemovedCallback{}
	case 2584931415:
		return &PowerLimitedActorType_Table{}
	case 2586870554:
		return &Type_9a30831a{}
	case 2588169118:
		return &PRTransform{}
	case 2592055163:
		return &AVParams{}
	case 2594652800:
		return &VectorPath{}
	case 2595039391:
		return &HirelingSavedData{}
	case 2597480017:
		return &IncludePath{}
	case 2598565419:
		return &DyeDefinition{}
	case 2599303564:
		return &NPCInteractOptionsMessage{}
	case 2600087323:
		return &RopeEffectMessageACDToACD{}
	case 2601544319:
		return &Type_9b106a7f{}
	case 2602744819:
		return &PowerConditionIsMonsterRarity{}
	case 2603594083:
		return &DynamicPortalInfo{}
	case 2607134593:
		return &TriggerEventFadeMonsters{}
	case 2612133870:
		return &RewardDefinition{}
	case 2613264313:
		return &Type_9bc33fb9{}
	case 2613318812:
		return &UIDateTimeStyle{}
	case 2615077772:
		return &NPCColorSet{}
	case 2616788302:
		return &PowerResourceCost{}
	case 2621793879:
		return &ACDLookAtMessage{}
	case 2623909960:
		return &ActorFaceHelper{}
	case 2624747364:
		return &MailReadMessage{}
	case 2626405485:
		return &FloatingAmountMessage{}
	case 2627400883:
		return &SpeedTreeWind{}
	case 2629560997:
		return &SkillDeclaration{}
	case 2630271823:
		return &PrefetchActorMessage{}
	case 2632036962:
		return &SerializeData{}
	case 2635124950:
		return &GlobalEmblems{}
	case 2637916746:
		return &QuestSideQuestAbandonedMessage{}
	case 2638826700:
		return &DebugEventLogMetaData{}
	case 2649429830:
		return &TriggerEventFadePlayers{}
	case 2650697781:
		return &MarkerDecalData{}
	case 2653177306:
		return &TriggerEventSetWeaponVisibilityDuration{}
	case 2655029985:
		return &NPCInteraction{}
	case 2656393353:
		return &Type_9e555889{}
	case 2659267804:
		return &Type_9e8134dc{}
	case 2661866676:
		return &Type_9ea8dcb4{}
	case 2664386791:
		return &GizmoConditionData{}
	case 2665518925:
		return &FacialHairDefinition{}
	case 2666466548:
		return &ClothData{}
	case 2671035274:
		return &PlayerLevelMessage{}
	case 2677649540:
		return &ActorSoundTableData{}
	case 2679332817:
		return &VictimMessage{}
	case 2692507939:
		return &PortedToPlayerMessage{}
	case 2693985039:
		return &BaseACDInfo{}
	case 2696054852:
		return &WorldStateFullUpdateMessage{}
	case 2698056971:
		return &JewelryDefinition{}
	case 2699874909:
		return &TerritoryDefinition{}
	case 2703348374:
		return &TriggerEventSpawnObject{}
	case 2704697578:
		return &LookVariantOverride{}
	case 2705520630:
		return &PowerConditionIsActorUnstoppable{}
	case 2710083680:
		return &Type_a1889860{}
	case 2710729343:
		return &MountClearMessage{}
	case 2711713996:
		return &TriggerEventCameraChangeTarget{}
	case 2714300283:
		return &SNOBlocklistDataChanged{}
	case 2715697063:
		return &PowerConditionIsTrackedActor{}
	case 2715997611:
		return &Type_a1e2d5ab{}
	case 2716429438:
		return &StarsSettings{}
	case 2718809169:
		return &LoudnessParams{}
	case 2720386370:
		return &TriggerEventEnableRagdollAnimationOverride{}
	case 2722037534:
		return &DesignerVariable_Table{}
	case 2722473312:
		return &StartPowerMessage{}
	case 2722669670:
		return &PowerConditionParagonGlyphAffixIsActive{}
	case 2729507990:
		return &Type_a2b0fc96{}
	case 2738650612:
		return &ParagonGlyphIntoSocketMessage{}
	case 2740285311:
		return &PlayerClassRogueData{}
	case 2750801330:
		return &Circle{}
	case 2751678841:
		return &RotationKey{}
	case 2752714698:
		return &ACDTranslateAckMessage{}
	case 2753673685:
		return &NPCACDInfo{}
	case 2755888482:
		return &PowerConditionHasFortifiedHealth{}
	case 2758429349:
		return &PowerConditionIsCrowdControlled{}
	case 2760098121:
		return &ConsoleCommandResultsMessage{}
	case 2760774118:
		return &Type_a48e11e6{}
	case 2763598860:
		return &PlayerVariableIsSetSubcondition{}
	case 2763918557:
		return &ConversationSample{}
	case 2764320258:
		return &DT_INT{}
	case 2764331143:
		return &DT_SNO{}
	case 2765613286:
		return &Anim2DFrame{}
	case 2766662738:
		return &ActorCollisionFlags{}
	case 2767272062:
		return &Type_a4f1387e{}
	case 2768795568:
		return &Type_a50877b0{}
	case 2770795733:
		return &ShaderMapOverride{}
	case 2771980683:
		return &Type_a539118b{}
	case 2772503601:
		return &Type_a5410c31{}
	case 2777232529:
		return &PowerConditionIsDamageType{}
	case 2777898273:
		return &GenericBlobMessage{}
	case 2778042845:
		return &PlayerEnterKnownMessage{}
	case 2778974978:
		return &Type_a5a3cb02{}
	case 2780317717:
		return &MarkerActorData{}
	case 2780951310:
		return &SpeedTreeWindBase{}
	case 2781228885:
		return &Type_a5c62f55{}
	case 2782855569:
		return &Type_a5df0191{}
	case 2784838746:
		return &RepairResultsMessage{}
	case 2795391298:
		return &RemovedBuffCallback{}
	case 2800636746:
		return &GroupRegionEntry_Table{}
	case 2800793622:
		return &TriggerEventDetachObject{}
	case 2803017583:
		return &KeyedDungeonTierEntry_Table{}
	case 2803465218:
		return &PlayerClassSorcererData{}
	case 2809861339:
		return &ClassInfoDataArray{}
	case 2811181471:
		return &GBIDHeader{}
	case 2811314006:
		return &HotbarButtonData{}
	case 2822536850:
		return &StoryboardDefinition{}
	case 2823526119:
		return &ScriptEventParamFloatRangeInside{}
	case 2823824643:
		return &UITutorialStyle{}
	case 2824118202:
		return &CurrencyItem{}
	case 2825252704:
		return &UIKeyMappingButtonStyle{}
	case 2826025722:
		return &MarkerNoSpawnVolumeData{}
	case 2827109142:
		return &AnimTreeNodeBase{}
	case 2828840794:
		return &SkillTreeNodeMessage{}
	case 2828952640:
		return &ActorPreloadHelper{}
	case 2829109539:
		return &TriggerEventRestoreCamera{}
	case 2833801029:
		return &Type_a8e85f45{}
	case 2838399059:
		return &UIScrollbarStyle{}
	case 2839639157:
		return &Type_a9417475{}
	case 2842269379:
		return &ValidComponent{}
	case 2847726419:
		return &Type_a9bcdb53{}
	case 2857749912:
		return &Type_aa55cd98{}
	case 2863656093:
		return &EffectGroupKeyData{}
	case 2865538525:
		return &PreApplyBuffCallback{}
	case 2866333320:
		return &DT_ACD_NETWORK_NAME{}
	case 2867390635:
		return &LayerInstanceChunk{}
	case 2871889556:
		return &ReputationValuePair{}
	case 2873585262:
		return &OnEndPowerCallback{}
	case 2876844401:
		return &ItemSalvageLevel_Table{}
	case 2877507578:
		return &Type_ab8347fa{}
	case 2882940688:
		return &ActorCritterData{}
	case 2884204419:
		return &QuestCallbackRegion{}
	case 2884411237:
		return &Type_abec9f65{}
	case 2885013475:
		return &NPCItems{}
	case 2887578027:
		return &Type_ac1cf1ab{}
	case 2888871135:
		return &Type_ac30acdf{}
	case 2890825383:
		return &UIRadioButtonGroupStyle{}
	case 2891320840:
		return &Type_ac560e08{}
	case 2893246136:
		return &MaterialBoolValue{}
	case 2894373936:
		return &TriggerEventSetHelmVisibility{}
	case 2899228989:
		return &SubzoneModifierTagsEntry_Table{}
	case 2899636366:
		return &GameVariableValueSubcondition{}
	case 2901213531:
		return &Type_aced015b{}
	case 2902473767:
		return &GeoSet{}
	case 2902494846:
		return &Type_ad008e7e{}
	case 2907517865:
		return &Type_ad4d33a9{}
	case 2907865191:
		return &MountACDInfo{}
	case 2908600322:
		return &PlayerTradeMessage{}
	case 2909661697:
		return &DesignerVariableChanged{}
	case 2917036215:
		return &Type_adde70b7{}
	case 2918685438:
		return &Type_adf79afe{}
	case 2920294703:
		return &SetIdleAnimationMessage{}
	case 2926955773:
		return &Type_ae75ccfd{}
	case 2928454866:
		return &AmbientSoundDefinition{}
	case 2932113843:
		return &HeroDetailsArray{}
	case 2935055576:
		return &ScriptMessageMap{}
	case 2935158038:
		return &Type_aef2f516{}
	case 2936716518:
		return &HeroDetailsEntry{}
	case 2940213818:
		return &WorldStateSubcondition{}
	case 2940719703:
		return &PowerConditionHasDot{}
	case 2940723648:
		return &Type_af47e1c0{}
	case 2941496629:
		return &MaterialValueDefinition{}
	case 2942321358:
		return &Type_af6042ce{}
	case 2943074919:
		return &Type_af6bc267{}
	case 2943327539:
		return &Type_af6f9d33{}
	case 2944981941:
		return &Type_af88dbb5{}
	case 2948324216:
		return &IKBone{}
	case 2948381038:
		return &IKData{}
	case 2949726179:
		return &ACDTranslateFacingMessage{}
	case 2953843760:
		return &MarkerLink{}
	case 2956401361:
		return &HeroDetailsValue{}
	case 2956903311:
		return &PowerConditionHasDamage{}
	case 2958127092:
		return &PowerConditionIsAutoCast{}
	case 2959453771:
		return &EyeColorDefinition{}
	case 2963039083:
		return &DungeonAffixRange{}
	case 2963051637:
		return &PlayerKickTimerMessage{}
	case 2964990786:
		return &Type_b0ba2b42{}
	case 2965426892:
		return &UIColorPickerStyle{}
	case 2968578253:
		return &Type_b0f0e8cd{}
	case 2968693081:
		return &Type_b0f2a959{}
	case 2971327593:
		return &WeaponExpertiseRanks_Table{}
	case 2974720179:
		return &Type_b14ea0b3{}
	case 2974844252:
		return &QuestFollower{}
	case 2977136533:
		return &RotationCurve{}
	case 2977505002:
		return &QuestPhasePreloadHelper{}
	case 2979382107:
		return &BountyData{}
	case 2980650101:
		return &CarryableGizmoData{}
	case 2982009401:
		return &Type_b1bdda39{}
	case 2982989742:
		return &Type_b1cccfae{}
	case 2983615105:
		return &MarkerAxeMapIconData{}
	case 2985547766:
		return &OffHandItemLabelSubcondition{}
	case 2985980787:
		return &ConstraintLink{}
	case 2987561328:
		return &MapRevealSceneMessage{}
	case 2990104049:
		return &QuestChainStep{}
	case 2990129354:
		return &SummonActorEntry{}
	case 2991662091:
		return &InvLoc{}
	case 2997763859:
		return &InventoryRequestMoveMessage{}
	case 3000146908:
		return &Type_b2d29bdc{}
	case 3001537487:
		return &ShaderPermutation{}
	case 3002009882:
		return &BossDoorInstanceData{}
	case 3002505909:
		return &AnimTreeOverride{}
	case 3009884126:
		return &LevelAreaTagSubcondition{}
	case 3015841888:
		return &BountyDataMessage{}
	case 3015895646:
		return &Type_b3c2ea5e{}
	case 3017070665:
		return &AxialCylinder{}
	case 3017273369:
		return &Type_b3d7f019{}
	case 3017681211:
		return &TriggerEventObjectMoveToLocator{}
	case 3019282580:
		return &Type_b3f69894{}
	case 3019833463:
		return &Type_b3ff0077{}
	case 3020586783:
		return &PlayerSetCameraDefaultsMessage{}
	case 3021124313:
		return &ParagonBoardDefinition{}
	case 3021334823:
		return &PreloadHelper{}
	case 3022074310:
		return &SerialDataInfo{}
	case 3024805895:
		return &PresetNPCComponent{}
	case 3025939855:
		return &TransmogSaveSnapshotMessage{}
	case 3026081009:
		return &UIRechargeTimerStyle{}
	case 3028624595:
		return &Type_b48524d3{}
	case 3029538669:
		return &Type_b493176d{}
	case 3032334607:
		return &SpeedTreeWind8Params{}
	case 3032830054:
		return &Type_b4c55066{}
	case 3043022828:
		return &XboxConsoleAwardDefinition{}
	case 3043783025:
		return &PortedToWaypointMessage{}
	case 3044153190:
		return &Type_b5721766{}
	case 3045089718:
		return &Type_b58061b6{}
	case 3045283369:
		return &DT_SHARED_SERVER_DATA_ID{}
	case 3046368200:
		return &Type_b593e3c8{}
	case 3047785107:
		return &MarkerServerData{}
	case 3048628370:
		return &DebugDrawPrimMessage{}
	case 3052003491:
		return &EmitterSphericalCapData{}
	case 3054048017:
		return &HirelingRequestLearnSkillMessage{}
	case 3063971755:
		return &UIControlHandle{}
	case 3066101868:
		return &Type_b6c1006c{}
	case 3066352125:
		return &CollisionSettings{}
	case 3067360607:
		return &QuestCallback{}
	case 3068002867:
		return &Type_b6de0233{}
	case 3068519038:
		return &PowerConditionIsChannelled{}
	case 3075465310:
		return &QuestKillAllMonstersUpdatedMessage{}
	case 3075785259:
		return &Transmog{}
	case 3076557727:
		return &RareItemNameMessage{}
	case 3076704615:
		return &ChairGizmoData{}
	case 3077127225:
		return &ScriptEventParamPrimaryGroup{}
	case 3077190069:
		return &Type_b76a31b5{}
	case 3078666273:
		return &Type_b780b821{}
	case 3078833356:
		return &LocalEventDataMessage{}
	case 3081830969:
		return &ConfirmDungeonKeyUseMessage{}
	case 3083504987:
		return &DebugTrackedCheckpointRequestMessage{}
	case 3085005858:
		return &ActorDefinition{}
	case 3085544830:
		return &OnUnequipPowerCallback{}
	case 3089331074:
		return &UIControlConsoleInput{}
	case 3090765995:
		return &UIBrowserWindowStyle{}
	case 3094316551:
		return &LightInstanceData{}
	case 3095149691:
		return &CommonPortalGizmoData{}
	case 3096238958:
		return &PreloadACDDataMessage{}
	case 3096396389:
		return &Type_b88f4265{}
	case 3096716593:
		return &ActorUIData{}
	case 3100302512:
		return &OnDodgeBuffCallback{}
	case 3101063468:
		return &GetInventoryLocationMessage{}
	case 3101715391:
		return &AnimTreeNodeChild{}
	case 3101771039:
		return &Type_b8e1451f{}
	case 3101980087:
		return &ChestGizmoData{}
	case 3102876383:
		return &Line3D{}
	case 3105203439:
		return &WwiseConversationSoundBank{}
	case 3106010889:
		return &ItemQualitySubcondition{}
	case 3109214426:
		return &KillCountMessage{}
	case 3110834328:
		return &MaterialDefinition{}
	case 3112270847:
		return &BannerIcon{}
	case 3112682290:
		return &BannerTrim{}
	case 3114240327:
		return &Type_b99f8947{}
	case 3115140505:
		return &PowerPhaseBase{}
	case 3115515000:
		return &PowerPhaseLoop{}
	case 3116261682:
		return &ScalarFunctionFormula{}
	case 3117769734:
		return &PowerConditionHasHealth{}
	case 3118959544:
		return &ItemDefinition{}
	case 3120447277:
		return &IRect2D{}
	case 3120951188:
		return &SkillTreeReward{}
	case 3121633597:
		return &DT_OPTIONAL[T]{}
	case 3122866172:
		return &Type_ba2327fc{}
	case 3123636279:
		return &UIDialogDefinition{}
	case 3124492544:
		return &DT_VECTOR2D{}
	case 3124492577:
		return &DT_VECTOR3D{}
	case 3124492610:
		return &DT_VECTOR4D{}
	case 3126228816:
		return &BossEncounterStateMessage{}
	case 3127494188:
		return &MarkerPrefabData{}
	case 3128190323:
		return &Type_ba746573{}
	case 3128795864:
		return &Type_ba7da2d8{}
	case 3130001275:
		return &GetInventoryLocationResponseMessage{}
	case 3132676386:
		return &Marker{}
	case 3133380173:
		return &Type_bac3964d{}
	case 3135495650:
		return &DamageTakenBuffCallback{}
	case 3135734846:
		return &QuestSubconditionBase{}
	case 3137045551:
		return &MonsterFamilyArchetype{}
	case 3138400357:
		return &AppearanceLook{}
	case 3141460973:
		return &CarryableReceptacleGizmoData{}
	case 3142967512:
		return &ActorVOData{}
	case 3144084119:
		return &IndexedTriangle{}
	case 3144630075:
		return &Type_bb6f3f3b{}
	case 3144984891:
		return &AnimSetOrderTagEntry{}
	case 3145411138:
		return &ActiveSubzoneModifierSubcondition{}
	case 3152339101:
		return &DestroySceneMessage{}
	case 3153011302:
		return &Type_bbef2266{}
	case 3153797075:
		return &Currencies{}
	case 3154629575:
		return &Type_bc07d3c7{}
	case 3154991006:
		return &NSlice{}
	case 3156652577:
		return &TriggerEventObjectKeyFrame{}
	case 3158181227:
		return &BuffCallbackBase{}
	case 3161684625:
		return &TransmogMultipleSlotsMessage{}
	case 3162215415:
		return &PreloadSpawnWorldDataMessage{}
	case 3162763801:
		return &Type_bc83f219{}
	case 3169008909:
		return &AnimTreeLeaf{}
	case 3169091771:
		return &AnimTreeNode{}
	case 3174582404:
		return &MaterialEnum{}
	case 3176841574:
		return &QuestChainSubcondition{}
	case 3179414430:
		return &ScriptMessageMapFilter{}
	case 3179509402:
		return &AnimationClothOverride{}
	case 3183760729:
		return &SimpleResponse{}
	case 3185513958:
		return &HirelingInfoUpdateMessage{}
	case 3186488010:
		return &ConversationCannedNode{}
	case 3186581877:
		return &ActorVisualInventoryData{}
	case 3188175834:
		return &CampDiscoveredSubcondition{}
	case 3188626749:
		return &LabelGBID_Table{}
	case 3188635763:
		return &ByteDataMessage{}
	case 3190432702:
		return &CampaignCallbackSubcondition{}
	case 3193003306:
		return &UIStoryboard2Style{}
	case 3195183391:
		return &AttachCarryableToPlayerMessage{}
	case 3196250645:
		return &CriteriaEvent{}
	case 3199231532:
		return &IKWindow{}
	case 3203271662:
		return &RandomAmbientSoundParams{}
	case 3203307102:
		return &ChargeableGizmoData{}
	case 3205258018:
		return &SwitchBehaviorGizmoData{}
	case 3207113136:
		return &Type_bf28a9b0{}
	case 3207444007:
		return &WorldTierChangeMessage{}
	case 3208364871:
		return &Type_bf3bc347{}
	case 3208997398:
		return &Type_bf456a16{}
	case 3212271855:
		return &DT_RGBACOLORVALUE{}
	case 3213398498:
		return &Octree{}
	case 3218190286:
		return &AttributeSpecifier{}
	case 3218202504:
		return &PlayEffectMessage{}
	case 3220679561:
		return &ConversationLineNode{}
	case 3225564917:
		return &CraftingMatCategory_Table{}
	case 3227031434:
		return &PublicGameSubcondition{}
	case 3227193627:
		return &PlayerVariableStringSubcondition{}
	case 3228260825:
		return &SpeedTreeBranchWindLevel{}
	case 3228520127:
		return &Type_c06f4ebf{}
	case 3228758260:
		return &ActorNPCData{}
	case 3229621050:
		return &QuestTagsEntry_Table{}
	case 3230174094:
		return &PlayErrorSoundMessage{}
	case 3231772010:
		return &JoinLANGameMessage{}
	case 3237647452:
		return &Type_c0fa945c{}
	case 3244749660:
		return &DT_VARIABLEARRAY[T]{}
	case 3245746969:
		return &Type_c1762b19{}
	case 3251137226:
		return &Type_c1c86aca{}
	case 3251419010:
		return &NpcArchetypeTemplate{}
	case 3251854358:
		return &ItemPreloadHelper{}
	case 3251898289:
		return &ConversationTreeNode{}
	case 3252537043:
		return &Type_c1ddc6d3{}
	case 3256968112:
		return &SpawnGenerator{}
	case 3262450273:
		return &Type_c2750a61{}
	case 3267106107:
		return &SkillTag{}
	case 3268314499:
		return &Type_c2ce8583{}
	case 3268886310:
		return &TriggerEventScreenFade{}
	case 3269576188:
		return &ProjectileImpactEffect{}
	case 3274290366:
		return &FogOfWarImage{}
	case 3278523656:
		return &StoryboardTimePointNode{}
	case 3278877880:
		return &UILayoutList{}
	case 3280532025:
		return &LevelAreaTagsEntry_Table{}
	case 3281363526:
		return &TriggerEventFade{}
	case 3281673073:
		return &TriggerEventNull{}
	case 3289294727:
		return &DotApplicationVisualsMessage{}
	case 3291325597:
		return &BuffExclusiveType{}
	case 3291807044:
		return &TryChatMessage{}
	case 3292961903:
		return &SubzoneDefinition{}
	case 3297622236:
		return &CapsuleProximityData{}
	case 3297747400:
		return &ConversationRandomSelectionNode{}
	case 3300608366:
		return &SubObjectNameInfo{}
	case 3301016084:
		return &GameTestingExecuteClientCheatMessage{}
	case 3303422751:
		return &PowerPetSpawn{}
	case 3304344920:
		return &IntensityParam{}
	case 3305523879:
		return &Type_c5064aa7{}
	case 3308252139:
		return &AIStateDebugSetConditionStateMessage{}
	case 3308326094:
		return &ActivityLinks{}
	case 3309501108:
		return &MarkerPortalGizmoData{}
	case 3311139638:
		return &ScriptEventParamMarkerHandle{}
	case 3311804693:
		return &UIEditStyle{}
	case 3312843337:
		return &MarkerGroupData{}
	case 3314464778:
		return &Type_c58eb80a{}
	case 3315275999:
		return &PartyVoteReplyMessage{}
	case 3316134124:
		return &WindowPiecesBase{}
	case 3316219731:
		return &PlayerGenderSubcondition{}
	case 3319843167:
		return &PvPBucketLevels{}
	case 3320317005:
		return &Type_c5e8044d{}
	case 3322368510:
		return &PortalInfo{}
	case 3323553519:
		return &RequiredMessageHeader{}
	case 3326311639:
		return &OnBerserkAppliedCallback{}
	case 3326716277:
		return &TriggerEventPOISkip{}
	case 3328092972:
		return &GlobalMarkerActor{}
	case 3328288509:
		return &Type_c661a6fd{}
	case 3328579492:
		return &ConversationDefinition{}
	case 3328833529:
		return &UIProgressBarStyle{}
	case 3330224177:
		return &PayloadOnHitMessage{}
	case 3332118356:
		return &Type_c69c1754{}
	case 3332566052:
		return &Rect2D{}
	case 3334207401:
		return &ScriptedAchievementEvent{}
	case 3335434764:
		return &NPCServiceData{}
	case 3335832649:
		return &ClassInfoPlayStyle{}
	case 3339108615:
		return &DT_SNO_NAME{}
	case 3342454473:
		return &UICutsceneStyle{}
	case 3343271695:
		return &ActorJitterJoint{}
	case 3343492614:
		return &StackPortionMessage{}
	case 3346038647:
		return &Type_c7707f77{}
	case 3346910512:
		return &ACDInventoryPositionMessage{}
	case 3351197648:
		return &CrafterDefinition{}
	case 3352174724:
		return &RenderParams{}
	case 3352290229:
		return &BoneStructure{}
	case 3352785496:
		return &PlayerFlagSubcondition{}
	case 3356365191:
		return &TransmogSlotData{}
	case 3357404523:
		return &UIButtonStyle{}
	case 3363235252:
		return &TriggerEventAttachCamera{}
	case 3365671474:
		return &TriggerEventOutroAllObjects{}
	case 3368440460:
		return &EffectGroupPositionZKeyData{}
	case 3369569511:
		return &Type_c8d78ce7{}
	case 3374369047:
		return &StoreProductDefinition{}
	case 3378075250:
		return &AchievementDefinition{}
	case 3381331198:
		return &UISkillTreeStyle{}
	case 3381982601:
		return &UpdateConvAutoAdvanceMessage{}
	case 3382837424:
		return &Type_c9a200b0{}
	case 3384912071:
		return &Sphere{}
	case 3387295447:
		return &QuestReward{}
	case 3391081376:
		return &Type_ca1fcba0{}
	case 3394879799:
		return &RenderPass{}
	case 3398293218:
		return &GizmoTemplate{}
	case 3398933424:
		return &SpawnLocType_Table{}
	case 3399256911:
		return &OnPhaseEnteredPowerCallback{}
	case 3401368825:
		return &Type_cabcc4f9{}
	case 3402153949:
		return &ActorLookOverrideChangedMessage{}
	case 3403053865:
		return &AIStateDebugTestSwitchMessage{}
	case 3405923948:
		return &DungeonList{}
	case 3406869682:
		return &PlayerIsShapeshiftedSubcondition{}
	case 3409009058:
		return &GlobalAVData{}
	case 3409962653:
		return &AlphaBlendFactors{}
	case 3412473811:
		return &Type_cb6637d3{}
	case 3413477057:
		return &NetAttributeKeyValue{}
	case 3414193985:
		return &Type_cb807741{}
	case 3414881765:
		return &ZoneProgressEarnedMessage{}
	case 3417499265:
		return &LightDefinition{}
	case 3421175403:
		return &CheatCampaignStateMessage{}
	case 3422409450:
		return &Type_cbfdd2ea{}
	case 3423838001:
		return &Type_cc139f31{}
	case 3423973094:
		return &OnProjectileImpactPowerCallback{}
	case 3426042948:
		return &Type_cc354444{}
	case 3430954138:
		return &SkillRankChangedMessage{}
	case 3431030737:
		return &PortalSpecifierMessage{}
	case 3431747696:
		return &ScriptedAchievementEvent_Table{}
	case 3433075868:
		return &CriteriaDefinition{}
	case 3434678791:
		return &NPCComponentSetPreloadHelper{}
	case 3436800625:
		return &Type_ccd96a71{}
	case 3438967867:
		return &ConversationScopeNode{}
	case 3440513314:
		return &LightInfluenceSettings{}
	case 3442930196:
		return &Type_cd36f214{}
	case 3443761618:
		return &SoundDefinition{}
	case 3445310279:
		return &Type_cd5b4347{}
	case 3447305554:
		return &Type_cd79b552{}
	case 3453107854:
		return &ScriptEventParamSubzone{}
	case 3457286220:
		return &PhysicsDefinition{}
	case 3457307456:
		return &CharacterPreset{}
	case 3457543411:
		return &AffixMessage{}
	case 3460647206:
		return &GlobalWaypointData{}
	case 3460728073:
		return &TriggerEventOutroEffectGroup{}
	case 3464528123:
		return &MarkerActorGizmoData{}
	case 3464679862:
		return &Type_ce82d1b6{}
	case 3468767588:
		return &Type_cec13164{}
	case 3469121019:
		return &ParticleKeyFrames{}
	case 3469228022:
		return &Type_cec837f6{}
	case 3470756225:
		return &PVPGameSubcondition{}
	case 3471665578:
		return &DungeonSpawningPoolEntry_Table{}
	case 3477503045:
		return &AttributeSubcondition{}
	case 3480546724:
		return &NpcLookTagEntry{}
	case 3481819086:
		return &ScriptEventParamActorGroup{}
	case 3485436892:
		return &Type_cfbf8bdc{}
	case 3489737491:
		return &TriggerEventCameraKeyFrame{}
	case 3493213809:
		return &DT_TAGMAP[T]{}
	case 3493835382:
		return &TriggerEventObjectTurnToOriginalFacing{}
	case 3494179431:
		return &AnyLogicSubcondition{}
	case 3494624766:
		return &ShaderMapDefinition{}
	case 3495291529:
		return &AspectDefinition{}
	case 3496006087:
		return &DemonScrollReward{}
	case 3496443013:
		return &SavedWorldCameraState{}
	case 3500735359:
		return &GameTestingInvitePlayersToPartyMessage{}
	case 3503113420:
		return &TriggerEventPlayMovie{}
	case 3503394193:
		return &HeroStatusDataMessage{}
	case 3507066932:
		return &EnchantAffixMessage{}
	case 3507772913:
		return &TriggerEventChangeLook{}
	case 3509688990:
		return &GlobalStore{}
	case 3512347645:
		return &wWiseSoundBankDefinition{}
	case 3513188739:
		return &ItemSpecifierData{}
	case 3514741062:
		return &Type_d17eb146{}
	case 3520446032:
		return &GameSetupMessage{}
	case 3524572566:
		return &DungeonStatesEntry{}
	case 3529217166:
		return &Type_d25b948e{}
	case 3530669903:
		return &SimpleMessage{}
	case 3531049129:
		return &ClanBankWithdrawMessage{}
	case 3531482778:
		return &GlobalNightmareDungeonData{}
	case 3531501022:
		return &StoryboardTrack{}
	case 3533883397:
		return &Type_d2a2c805{}
	case 3533966913:
		return &OnAssistTriggeredBuffCallback{}
	case 3539111973:
		return &SchedulerGlobalUniqueCategory{}
	case 3540363826:
		return &ActorCustomizationHelper{}
	case 3542510007:
		return &RequestBuffCancelMessage{}
	case 3543556157:
		return &CountdownStartedMessage{}
	case 3544827702:
		return &OnKillTriggeredBuffCallback{}
	case 3549813337:
		return &EssencePowerTierEntry{}
	case 3549816935:
		return &ItemDungeonKeyDataMessage{}
	case 3550172668:
		return &ScriptEventParamTimeInterval{}
	case 3552797567:
		return &Type_d3c3637f{}
	case 3553323383:
		return &OnInitializeAttackBuffCallback{}
	case 3555289754:
		return &LevelAreaDefinition{}
	case 3558947995:
		return &Type_d4213c9b{}
	case 3559084288:
		return &Type_d4235100{}
	case 3560147884:
		return &ACDTranslateProjectileMessage{}
	case 3561077891:
		return &PlayerTitleResponseMessage{}
	case 3564584333:
		return &PowerOverride{}
	case 3568752688:
		return &PlayerForceShapeshiftMessage{}
	case 3573101747:
		return &TriggerEventFadeGroup{}
	case 3577501348:
		return &HelpCode{}
	case 3579684057:
		return &PlayConvLineMessage{}
	case 3581869265:
		return &GlobalRoadData{}
	case 3582883756:
		return &NecroArmyUnitTypeData{}
	case 3587671698:
		return &PlayHitJitterMessage{}
	case 3591048543:
		return &OnDoDamageBuffCallback{}
	case 3594392318:
		return &GlobalEmotes{}
	case 3595026749:
		return &UIControlGroupStyle{}
	case 3595429894:
		return &EffectGroupRotationRollKeyData{}
	case 3597846649:
		return &HiddenCacheEntry_Table{}
	case 3600465269:
		return &PVPShrineEventParticipatingMessage{}
	case 3600576406:
		return &ValidComponents{}
	case 3602917158:
		return &TriggerEventFootstepTrail{}
	case 3603241256:
		return &WwiseExternalSourceSoundBank{}
	case 3604059869:
		return &PowerFormulaTableEntry{}
	case 3604657485:
		return &Type_d6dab54d{}
	case 3608616152:
		return &EffectGroupCameraTrack{}
	case 3610736854:
		return &WorldTierData{}
	case 3611725540:
		return &TriggerEventSetTimeOfDay{}
	case 3614745956:
		return &Type_d774a564{}
	case 3615195411:
		return &ParagonNodeMessage{}
	case 3620255269:
		return &ChatMessage{}
	case 3622735654:
		return &Type_d7ee8f26{}
	case 3622949179:
		return &EmblemDefinition{}
	case 3627847308:
		return &PlayerClassDefinition{}
	case 3631199318:
		return &ForcedPrefetchEntry{}
	case 3631735738:
		return &TextureDefinition{}
	case 3632414755:
		return &GroupTransferReplyMessage{}
	case 3633663932:
		return &PlayerTownPortalReturnDestMessage{}
	case 3635012279:
		return &UIStyleResource{}
	case 3636736964:
		return &InventoryRequestSortMessage{}
	case 3639515093:
		return &HardpointInfo{}
	case 3639617719:
		return &HardpointLink{}
	case 3639680842:
		return &HardpointName{}
	case 3640855436:
		return &GlobalBountyData{}
	case 3643369700:
		return &InventoryImages{}
	case 3643941448:
		return &Type_d9322248{}
	case 3644249578:
		return &ACDWorldPositionMessage{}
	case 3646617580:
		return &GeoChunkVertexBuffer{}
	case 3647138944:
		return &FontDefinition{}
	case 3648032783:
		return &ACDTranslateDetPathSinMessage{}
	case 3648845914:
		return &Type_d97cf85a{}
	case 3650222889:
		return &MovieDefinition{}
	case 3652303092:
		return &DoorGizmoData{}
	case 3656025176:
		return &PowerConditionDamageIsOverpower{}
	case 3658540132:
		return &BuffExclusiveType_Table{}
	case 3659646211:
		return &Type_da21c503{}
	case 3660521401:
		return &SubzoneTypeSubcondition{}
	case 3661168133:
		return &Type_da38fe05{}
	case 3666486037:
		return &Type_da8a2315{}
	case 3672216444:
		return &StringListDefinition{}
	case 3674862323:
		return &QuestTagsEntry{}
	case 3677631049:
		return &PlayerSkillRankSubcondition{}
	case 3678340364:
		return &PowerPhaseBranch{}
	case 3682172275:
		return &EnterWorldPlayer{}
	case 3682266269:
		return &MonsterAwarenessInfo{}
	case 3683293384:
		return &EffectGroupActorVariant{}
	case 3687515379:
		return &Type_dbcb04f3{}
	case 3688169642:
		return &ActorServerData{}
	case 3693220108:
		return &BoneKeysInfo{}
	case 3696177905:
		return &MapPingMessage{}
	case 3697422160:
		return &HardpointOffset{}
	case 3697515930:
		return &PortToPlayerMessage{}
	case 3699670443:
		return &EffectGroupPositionYKeyData{}
	case 3700819239:
		return &Type_dc960527{}
	case 3701792450:
		return &IntensitySubParam{}
	case 3704120622:
		return &ParagonGlyphAffixAttribute{}
	case 3707753598:
		return &TriggerEventObjectMoveToObject{}
	case 3708548105:
		return &TraversalSurfaceOptions{}
	case 3709235023:
		return &SNODataMessage{}
	case 3710538503:
		return &SlopeBone{}
	case 3712531304:
		return &KeyedDungeonTierEntry{}
	case 3716696767:
		return &UIPieChartStyle{}
	case 3718463390:
		return &GameErrorData{}
	case 3722141311:
		return &PVPObeliskGizmoData{}
	case 3735052004:
		return &ScrollbarElementImages{}
	case 3735262368:
		return &AudioContextDefinition{}
	case 3736356571:
		return &ScriptEventDescription{}
	case 3741213674:
		return &ItemSalvageLevel{}
	case 3741275878:
		return &GlobalMarkerActorData{}
	case 3742548360:
		return &ConditionWrapper{}
	case 3742728940:
		return &RogueSpecializationGlobalData{}
	case 3748836680:
		return &WorldSyncedData{}
	case 3748928721:
		return &Subcondition{}
	case 3750701941:
		return &Type_df8f2b75{}
	case 3757510275:
		return &Type_dff70e83{}
	case 3762407828:
		return &BuffSubcondition{}
	case 3763372188:
		return &AnimContactFrame{}
	case 3763808751:
		return &EmitterDataBase{}
	case 3769072179:
		return &ComplexEffectAddMessage{}
	case 3776831931:
		return &SummonedActorsPreloadHelper{}
	case 3777118895:
		return &Type_e12242af{}
	case 3777567568:
		return &Type_e1291b50{}
	case 3782874409:
		return &EffectGroupMaterialValueKeyData{}
	case 3784737903:
		return &PowerConditionBase{}
	case 3785434353:
		return &Type_e1a124f1{}
	case 3786148276:
		return &Type_e1ac09b4{}
	case 3790868530:
		return &Type_e1f41032{}
	case 3795316385:
		return &AttributesChangedBuffCallback{}
	case 3796435398:
		return &PowerPhaseInitialization{}
	case 3797928927:
		return &WallInstanceData{}
	case 3798222270:
		return &QuestChainDefinition{}
	case 3799735114:
		return &GlobalRoadSegment{}
	case 3799976182:
		return &AnimTreeBlendCase{}
	case 3801316792:
		return &Type_e2937db8{}
	case 3802158917:
		return &SkillTreeNodeConnection{}
	case 3805829137:
		return &SoundPlayHistory{}
	case 3810234018:
		return &TriggerEventEnableRagdoll{}
	case 3814410313:
		return &SkillTreeNodePersonalConnection{}
	case 3817037376:
		return &ActorEffectData{}
	case 3818149954:
		return &FloatingNumberMessage{}
	case 3820930965:
		return &Type_e3bec795{}
	case 3822890031:
		return &BlizzconCVarsMessage{}
	case 3824324374:
		return &Type_e3f28f16{}
	case 3824510090:
		return &ProximityDataBase{}
	case 3825953289:
		return &ItemRequirementDefinition{}
	case 3826475810:
		return &AIStateDebugSetAllEntryStatesMessage{}
	case 3831299673:
		return &ConstraintParameters{}
	case 3833068973:
		return &WorldSyncedDataMessage{}
	case 3833381323:
		return &ScriptEventParamTrackedReward{}
	case 3835832585:
		return &DRLGWorldDebugInfoMessage{}
	case 3836204633:
		return &WallDefinition{}
	case 3836325597:
		return &BountyIcons{}
	case 3844612145:
		return &StringTableEntry{}
	case 3845014595:
		return &PlayerQuestHistoryEntry{}
	case 3846829457:
		return &DT_CSTRING[T]{}
	case 3848460434:
		return &SpeedTree8RippleGroup{}
	case 3854564369:
		return &MailSentResponseMessage{}
	case 3856437459:
		return &CustomizationData{}
	case 3856914134:
		return &Type_e5e3d6d6{}
	case 3856916112:
		return &BountyZones{}
	case 3859902386:
		return &SurfaceDefinition{}
	case 3860176388:
		return &UIActorTagStyle{}
	case 3861122336:
		return &DynamicGameParameter{}
	case 3862192725:
		return &SpawnerGizmoInstanceData{}
	case 3863771036:
		return &AttributeFormulaEntry{}
	case 3864020909:
		return &DT_FLOAT{}
	case 3864023881:
		return &QuestChestGizmoData{}
	case 3865659177:
		return &CollisionHeightField{}
	case 3866881285:
		return &TexAnimTranslation{}
	case 3867655596:
		return &DT_INT64{}
	case 3870434112:
		return &Type_e6b22340{}
	case 3872544350:
		return &MarkerFolder{}
	case 3874588324:
		return &PowerFormulaTableEntry_Table{}
	case 3874798551:
		return &DesignerVariable{}
	case 3877855748:
		return &DT_RANGE[T]{}
	case 3878713911:
		return &AttributeFormulaRange{}
	case 3878735867:
		return &Type_e730cffb{}
	case 3879849394:
		return &Type_e741cdb2{}
	case 3882395607:
		return &PowerConditionIsActorBerserk{}
	case 3884811641:
		return &BoneKeyInfo{}
	case 3885149667:
		return &CampaignChain{}
	case 3889109893:
		return &GameTestingSkillSamplingStartMessage{}
	case 3889375613:
		return &OnDismountCallback{}
	case 3890074365:
		return &TriggerEventCameraFollowSpline{}
	case 3890408608:
		return &MaterialTexture{}
	case 3890926379:
		return &Type_e7ead32b{}
	case 3891466367:
		return &Animation2DDefinition{}
	case 3892462007:
		return &ShaderOverride{}
	case 3894303202:
		return &Type_e81e59e2{}
	case 3895665662:
		return &Type_e83323fe{}
	case 3896035154:
		return &OnProjectileCreateBuffCallback{}
	case 3897348097:
		return &Type_e84cd001{}
	case 3897752931:
		return &EffectGroupKey{}
	case 3898049428:
		return &Type_e8578394{}
	case 3898498167:
		return &QuestRewardChoicePickedMessage{}
	case 3900142886:
		return &UIMinimapFoWStyle{}
	case 3900534977:
		return &Type_e87d70c1{}
	case 3905611800:
		return &TriggerEventSetWeaponSheathedDuration{}
	case 3907208665:
		return &ConversationTypeSounds{}
	case 3907910327:
		return &MarkerDataBase{}
	case 3908508603:
		return &UITreeFolderStyle{}
	case 3909729180:
		return &EndOfTickMessage{}
	case 3910588210:
		return &CloneBeingDeletedMessage{}
	case 3911232674:
		return &QuitGameMessage{}
	case 3913967859:
		return &EffectGroupActorMovementTrack{}
	case 3914002741:
		return &BannerColor{}
	case 3914528908:
		return &HairColorDefinition{}
	case 3917270559:
		return &Type_e97cce1f{}
	case 3917788984:
		return &PowerConditionHasResource{}
	case 3923895581:
		return &ActorShaderMapOverrideChangedMessage{}
	case 3925842543:
		return &Type_e9ff9a6f{}
	case 3928304546:
		return &DefaultTextureInfo{}
	case 3932958987:
		return &TriggerEventObjectFollowSpline{}
	case 3934284334:
		return &MarkerHandle{}
	case 3934769268:
		return &ParametricInfo{}
	case 3934834412:
		return &RestrictedComponent{}
	case 3938200363:
		return &Type_eabc2b2b{}
	case 3938253109:
		return &DPathSinData{}
	case 3938938339:
		return &QuestSubcondition{}
	case 3941658074:
		return &SalvageResultsMessage{}
	case 3941725086:
		return &ServerLogMessage{}
	case 3945992458:
		return &GenericBlobRequestMessage{}
	case 3947422249:
		return &Type_eb48e229{}
	case 3952011826:
		return &Type_eb8eea32{}
	case 3952663046:
		return &Type_eb98da06{}
	case 3955716320:
		return &bcQuat{}
	case 3955895500:
		return &PowerConditionIsFortified{}
	case 3956651678:
		return &ACDPickupFailedMessage{}
	case 3964094914:
		return &DungeonStateSubcondition{}
	case 3965580581:
		return &AnimFacingWindow{}
	case 3967226522:
		return &GlobalDefinition{}
	case 3968129939:
		return &EventSubcondition{}
	case 3969718545:
		return &Type_ec9d1911{}
	case 3974107604:
		return &GeoChunk{}
	case 3976143237:
		return &EffectGroupRotationPitchKeyData{}
	case 3976816482:
		return &MarkerBoneTransform{}
	case 3981645687:
		return &GlobalHealerEvents{}
	case 3981727516:
		return &NPCComponentRestrictionEntry{}
	case 3982191897:
		return &OnShapeshiftCallback{}
	case 3982467417:
		return &LookVariantMaterialOverride{}
	case 3983648445:
		return &GlobalPortalData{}
	case 3984646638:
		return &InventoryStackTransferMessage{}
	case 3986156917:
		return &ShakeDefinition{}
	case 3986397825:
		return &MarkerTextLabelData{}
	case 3987096416:
		return &Type_eda64360{}
	case 3987413862:
		return &BannerTextileTexture{}
	case 3987819995:
		return &HeadstoneGizmoData{}
	case 3988626058:
		return &PrefabData{}
	case 3990454785:
		return &MaterialEnumValue{}
	case 3992025323:
		return &Type_edf178eb{}
	case 3997453985:
		return &Type_ee444ea1{}
	case 3998907722:
		return &Type_ee5a7d4a{}
	case 4000554560:
		return &SkillTagStruct{}
	case 4006089948:
		return &Type_eec814dc{}
	case 4010719183:
		return &Type_ef0eb7cf{}
	case 4012831658:
		return &ExplosionDefinition{}
	case 4014476633:
		return &Type_ef480d59{}
	case 4014883557:
		return &MarkerLevelAreaVolumeData{}
	case 4022121664:
		return &VectorFieldDefinition{}
	case 4027789355:
		return &Type_f013302b{}
	case 4030900426:
		return &EffectGroupPositionXKeyData{}
	case 4031654575:
		return &AttachActorToActorMessage{}
	case 4031705439:
		return &ActorBrainData{}
	case 4037362027:
		return &SavePointPortalGizmoData{}
	case 4037984604:
		return &EffectItem{}
	case 4040942623:
		return &AppearanceMaterial{}
	case 4041606172:
		return &ScriptEventParamPrefabScopedActorGroup{}
	case 4042669885:
		return &Type_f0f63f3d{}
	case 4044315890:
		return &HiddenCacheEntry{}
	case 4047712805:
		return &ScriptEventParamLinkedMarkerInGroup{}
	case 4057854301:
		return &Type_f1ddf15d{}
	case 4059665222:
		return &GameSyncedDebugDataMessage{}
	case 4060009143:
		return &Type_f1fed2b7{}
	case 4063447694:
		return &LookAtBone{}
	case 4063504516:
		return &LookAtData{}
	case 4067534784:
		return &NecroArmySpecMessage{}
	case 4068810465:
		return &OnRetreatCallback{}
	case 4068844708:
		return &GlobalCharacterPresets{}
	case 4071223241:
		return &StopConvLineMessage{}
	case 4074791098:
		return &Type_f2e060ba{}
	case 4079759321:
		return &ActorDeathData{}
	case 4083908541:
		return &PowerConditionParagonNodeIsPurchased{}
	case 4088142735:
		return &TriggerEventPlayConversationLine{}
	case 4088798277:
		return &ACDTranslateDetPathMessage{}
	case 4088842039:
		return &EndConversationMessage{}
	case 4092961056:
		return &Type_f3f5a120{}
	case 4093179991:
		return &MarkerSetDefinition{}
	case 4100996537:
		return &Type_f4703db9{}
	case 4101156222:
		return &EffectGroupMaterialTrack{}
	case 4102386549:
		return &PlayerWarpedMessage{}
	case 4103184625:
		return &TryConsoleCommand{}
	case 4104033586:
		return &Type_f49e9532{}
	case 4104641245:
		return &GlobalQuestData{}
	case 4106185116:
		return &BreakableContainerGizmoData{}
	case 4107356838:
		return &TriggerEventOutroObject{}
	case 4111826321:
		return &PRSTransform{}
	case 4113664708:
		return &OnFirstHitPowerCallback{}
	case 4115604446:
		return &HairStyleDefinition{}
	case 4117978883:
		return &GroupRegionEntry{}
	case 4118521851:
		return &OnEquipPowerCallback{}
	case 4119790019:
		return &Type_f58f01c3{}
	case 4120944920:
		return &ResolvedPortalDestination{}
	case 4121622049:
		return &SubObject{}
	case 4121727419:
		return &Type_f5ac91bb{}
	case 4122208010:
		return &WwiseGameParameter{}
	case 4122576194:
		return &SurveyTypeEntry{}
	case 4123321325:
		return &Type_f5c4e3ed{}
	case 4123887595:
		return &Type_f5cd87eb{}
	case 4128871178:
		return &Type_f619930a{}
	case 4129646214:
		return &TrackedCheckpointGizmoData{}
	case 4133241699:
		return &MarkerSpawnLocData{}
	case 4134809062:
		return &MsgTriggeredEvent{}
	case 4134908163:
		return &Type_f675b103{}
	case 4135518729:
		return &LevelScalingDefinition_Table{}
	case 4135555133:
		return &Type_f67f903d{}
	case 4136813248:
		return &PowerConditionHasSkillRequirement{}
	case 4137156027:
		return &AccountProfilePrivacyFlagMessage{}
	case 4138174023:
		return &SetBonusTier{}
	case 4138637758:
		return &EffectGroupRotationYawKeyData{}
	case 4138865712:
		return &Type_f6b21430{}
	case 4143117588:
		return &WeaponExpertiseRankReward{}
	case 4148177091:
		return &NPCComponentInstanceData{}
	case 4148712533:
		return &Type_f7485455{}
	case 4155240392:
		return &Type_f7abefc8{}
	case 4156757805:
		return &Type_f7c3172d{}
	case 4158233291:
		return &BossDoorGizmoData{}
	case 4159814500:
		return &MountSetMessage{}
	case 4160730271:
		return &PowerConditionIsMonsterFamilyArchetype{}
	case 4164648442:
		return &GlobalHealthPotionData{}
	case 4166874378:
		return &Type_f85d750a{}
	case 4167247368:
		return &CompInfluence{}
	case 4171238087:
		return &TriggerEventOutroServicesDisable{}
	case 4171504262:
		return &ACDTranslateSnappedMessage{}
	case 4173985261:
		return &TriggerEventRangedDuration{}
	case 4176299945:
		return &GlobalUIData{}
	case 4180576668:
		return &CompVertInfluences{}
	case 4180938800:
		return &DebugActorTooltipMessage{}
	case 4188868250:
		return &AnimSetDefinition{}
	case 4198139340:
		return &RevealWorldMessage{}
	case 4199705024:
		return &EffectGroupStandardTrack{}
	case 4201850638:
		return &UIDrawHookStyle{}
	case 4203656352:
		return &Type_fa8eb4a0{}
	case 4204258745:
		return &Type_fa97e5b9{}
	case 4206682020:
		return &ACDCollFlagsMessage{}
	case 4206722984:
		return &PopGroupHandle{}
	case 4206949144:
		return &ConnectorProperties{}
	case 4208099680:
		return &MainHandItemLabelSubcondition{}
	case 4211607403:
		return &Type_fb08076b{}
	case 4211930836:
		return &TriggerGizmoData{}
	case 4212868281:
		return &Type_fb1b44b9{}
	case 4213128525:
		return &TransmogSlot{}
	case 4214119801:
		return &LogoutTickTimeMessage{}
	case 4215210960:
		return &ImageFileID{}
	case 4219334015:
		return &EffectGroupScaleZKeyData{}
	case 4219842648:
		return &MountSelectMessage{}
	case 4221588828:
		return &Type_fba0555c{}
	case 4223096186:
		return &Type_fbb7557a{}
	case 4225700928:
		return &Type_fbdf1440{}
	case 4226459381:
		return &EmitterSubObjectData{}
	case 4226610788:
		return &Type_fbecf664{}
	case 4227218246:
		return &GlobalMarkerActorHiddenCacheData{}
	case 4228472600:
		return &TranslationKey{}
	case 4229906289:
		return &IconScale{}
	case 4232128366:
		return &IconAnchorPoint{}
	case 4234742813:
		return &DungeonStatesEntry_Table{}
	case 4236426675:
		return &MailReadResponseMessage{}
	case 4239082984:
		return &NecroArmySpecUpgradeMessage{}
	case 4239495055:
		return &Type_fcb18f8f{}
	case 4243792680:
		return &ExternalPlatform{}
	case 4244287280:
		return &SkillKitDefinition{}
	case 4245213777:
		return &MarkingColorDefinition{}
	case 4246870993:
		return &BountyTierIcons{}
	case 4248156668:
		return &ItemPVPEarDataMessage{}
	case 4248268532:
		return &MarkerHeightFieldSection{}
	case 4249306872:
		return &VertexCountSettings{}
	case 4252885141:
		return &PlayerPotionDosesSubcondition{}
	case 4253567699:
		return &Type_fd884ad3{}
	case 4257156132:
		return &PrefetchMarkerSetMessage{}
	case 4260534408:
		return &SurfaceGridPrimitive{}
	case 4263001440:
		return &Type_fe183d60{}
	case 4263299288:
		return &DynamicAudioState{}
	case 4263594309:
		return &Type_fe214945{}
	case 4263957835:
		return &OnPhaseExitedPowerCallback{}
	case 4265117700:
		return &LabelRuleSet{}
	case 4265474781:
		return &AIStateDebugSetLoopMessage{}
	case 4267045533:
		return &SetTetherInfoForPlayerMessage{}
	case 4271208238:
		return &TrackPieces{}
	case 4272741198:
		return &Type_feacdb4e{}
	case 4273329489:
		return &Type_feb5d551{}
	case 4282423481:
		return &Type_ff4098b9{}
	case 4286083682:
		return &DeathTemplate{}
	case 4286658627:
		return &CriteriaStartEvent{}
	case 4287040182:
		return &SubzoneModifierTagsEntry{}
	case 4294183896:
		return &PowerConditionIsPlayerActiveSkill{}
	default:
		return nil
	}
}

type OBB struct {
	Transform PRTransform
	WvExt     DT_VECTOR3D
}

func (t *OBB) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Transform.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.WvExt.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_d2461 struct {
	THeader                    RequiredMessageHeader
	Unk_25d9f91                DT_FIXEDARRAY[*GBHandle]
	ENetAttributeKeyValueIndex DT_FIXEDARRAY[*DT_UINT]
}

func (t *Type_d2461) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25d9f91.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+532, io.SeekStart); err != nil {
		return err
	}
	if err := t.ENetAttributeKeyValueIndex.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+792, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AABB struct {
	Wp    DT_VECTOR3D
	WvExt DT_VECTOR3D
}

func (t *AABB) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.WvExt.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Stat struct{}

func (t *Stat) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+1, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerLimitedActorType struct {
	THeader     GBIDHeader
	Unk_20d9783 DT_UINT
}

func (t *PowerLimitedActorType) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_20d9783.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SoundTableDefinition struct {
	EType            DT_ENUM
	TEntries         DT_VARIABLEARRAY[*SoundTableEntry]
	SnoFallbackTable DT_SNO
	TDefaultEntry    SoundTableEntry
	PtPostprocessed  DT_INT64
}

func (t *SoundTableDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFallbackTable.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDefaultEntry.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPostprocessed.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SavedCameraState struct {
	Transform            PRTransform
	WvCameraOffsetVector DT_VECTOR3D
	WvLookAtOffsetVector DT_VECTOR3D
	WvLastPOI            DT_VECTOR3D
}

func (t *SavedCameraState) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Transform.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.WvCameraOffsetVector.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.WvLookAtOffsetVector.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.WvLastPOI.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ShaderInputLayout struct {
	EVBFormat DT_ENUM
}

func (t *ShaderInputLayout) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EVBFormat.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionIsVulnerable struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
	ESubject DT_ENUM
}

func (t *PowerConditionIsVulnerable) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerParagonPointMessage struct {
	THeader     RequiredMessageHeader
	Unk_dce541c DT_UINT
	NNewPoints  DT_INT
}

func (t *PlayerParagonPointMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NNewPoints.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AttributesSetValuesMessage struct {
	THeader   RequiredMessageHeader
	Ann       DT_ACD_NETWORK_NAME
	AtKeyVals DT_FIXEDARRAY[*NetAttributeKeyValue]
}

func (t *AttributesSetValuesMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.AtKeyVals.UnmarshalD4(r, &Options{
		ArrayLength: 15,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_14c5741 struct {
	SzName     DT_CSTRING[*DT_BYTE]
	SzToolTip  DT_CSTRING[*DT_BYTE]
	ArAnimSets DT_VARIABLEARRAY[*DT_SNO]
}

func (t *Type_14c5741) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzToolTip.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArAnimSets.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TexFrame struct {
	HImageHandle DT_UINT
	FlU0         DT_FLOAT
	FlV0         DT_FLOAT
	FlU1         DT_FLOAT
	FlV1         DT_FLOAT
	FlTrimU0     DT_FLOAT
	FlTrimV0     DT_FLOAT
	FlTrimU1     DT_FLOAT
	FlTrimV1     DT_FLOAT
}

func (t *TexFrame) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.HImageHandle.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlU0.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlV0.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlU1.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlV1.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTrimU0.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTrimV0.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTrimU1.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTrimV1.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_19b25a8 struct {
	// Inherits Type_cbfce3e
	// Inherits MarkerSplineData
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType             DT_UINT
	EInterpolationMode DT_ENUM
	Unk_a3f1699        DT_FLOAT
	Unk_4a4ab0e        DT_VARIABLEARRAY[*Type_cc5838a]
	FlTotalLength      DT_FLOAT
	EType              DT_ENUM
	ERoadType          DT_ENUM
	DwPad              DT_UINT
}

func (t *Type_19b25a8) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EInterpolationMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a3f1699.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4a4ab0e.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTotalLength.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.ERoadType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WwiseSwitchValue struct {
	TGroup WwiseName
	TValue WwiseName
}

func (t *WwiseSwitchValue) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TGroup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AssignSkillMessage struct {
	THeader       RequiredMessageHeader
	SnoPower      DT_SNO
	NSlot         DT_INT
	NEnchantSlot  DT_INT
	BIsEnchant    DT_INT
	BIsAutoAssign DT_INT
	Unk_dce541c   DT_UINT
}

func (t *AssignSkillMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSlot.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NEnchantSlot.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsEnchant.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsAutoAssign.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PetType struct {
	THeader             GBIDHeader
	Unk_887ea65         DT_ENUM
	Unk_17d5315         DT_INT
	Unk_a9f95f3         DT_INT
	BHasPlayerIndicator DT_INT
}

func (t *PetType) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_887ea65.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_17d5315.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a9f95f3.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.BHasPlayerIndicator.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OutroWaypointEffectMessage struct {
	THeader      RequiredMessageHeader
	SnoLevelArea DT_SNO
}

func (t *OutroWaypointEffectMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelArea.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LimboWarpPrefetchBeginMessage struct {
	THeader      RequiredMessageHeader
	SnoWorld     DT_SNO
	WpLocation   DT_VECTOR3D
	DwPortalType DT_UINT
	Unk_164ef1e  DT_INT
}

func (t *LimboWarpPrefetchBeginMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpLocation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPortalType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_164ef1e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerWeatherVolumeData struct {
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType          DT_UINT
	DwPad           DT_UINT
	PtProxData      DT_POLYMORPHIC_VARIABLEARRAY[*ProximityDataBase]
	SnoAudioContext DT_SNO
	Unk_877fa6b     DT_SNO
	FDisabled       DT_INT
	Unk_80c961e     DT_INT
}

func (t *MarkerWeatherVolumeData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtProxData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAudioContext.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 93,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_877fa6b.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_80c961e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TiledWindowPieces struct {
	// Inherits WindowPiecesBase
	// Inherits PolymorphicBase
	DwType           DT_UINT
	DwPad            DT_UINT
	FlImageScale     DT_FLOAT
	NPadding         DT_UINT
	HCornerFrames    DT_FIXEDARRAY[*DT_UINT]
	HBackground      DT_UINT
	HLeftBorder      DT_UINT
	HTopBorder       DT_UINT
	HRightBorder     DT_UINT
	HBottomBorder    DT_UINT
	FInsetBackground DT_INT
	FTileBackground  DT_INT
	Unk_d661bef      DT_INT
	Unk_1ec53df      DT_INT
}

func (t *TiledWindowPieces) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlImageScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPadding.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.HCornerFrames.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.HBackground.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.HLeftBorder.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.HTopBorder.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.HRightBorder.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.HBottomBorder.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.FInsetBackground.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.FTileBackground.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d661bef.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1ec53df.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TiledStyleDefinition struct {
	PtWindowPiece DT_POLYMORPHIC_VARIABLEARRAY[*WindowPiecesBase]
	Unk_b66d648   DT_TAGMAP[*DT_ENUM]
}

func (t *TiledStyleDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtWindowPiece.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b66d648.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_30b72fa struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *Type_30b72fa) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_37227e2 struct {
	// Inherits Type_d4213c9b
	DwType      DT_UINT
	Unk_9b2bc26 Type_80554fed
	Unk_77ed19a DT_ENUM
	DwPad       DT_UINT
}

func (t *Type_37227e2) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b2bc26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77ed19a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_38be9c1 struct {
	DwType  DT_UINT
	FlTime  DT_FLOAT
	DwPad   DT_UINT
	TValue  DT_FLOAT
	EEasing DT_ENUM
}

func (t *Type_38be9c1) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.EEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type IKGeneralBoneChain struct {
	// Inherits IKBoneChainBase
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	EIKLimb     DT_ENUM
	EIKTarget   DT_ENUM
	PtIKBones   DT_VARIABLEARRAY[*IKBone]
	Unk_4311d19 DT_ENUM
	Unk_59c4651 HardpointLink
}

func (t *IKGeneralBoneChain) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EIKLimb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.EIKTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtIKBones.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4311d19.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_59c4651.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CurrentWorldSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType      DT_UINT
	BNegate     DT_INT
	DwPad       DT_UINT
	SnoWorld    DT_SNO
	Unk_c7b2b18 DT_ENUM
}

func (t *CurrentWorldSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c7b2b18.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_447d2ee struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *Type_447d2ee) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_44d632e struct {
	FlX DT_FLOAT
	FlY DT_FLOAT
}

func (t *Type_44d632e) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlX.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlY.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ZoneMapParams struct {
	FlZoneArtScale    DT_FLOAT
	VecZoneArtCenter  DT_VECTOR2D
	FlZoneBaseScale   DT_FLOAT
	Unk_80bc841       DT_FLOAT
	Unk_4e79635       DT_FLOAT
	Unk_341cf9b       DT_FLOAT
	Unk_7ed5974       DT_FLOAT
	Unk_f373e7a       DT_FLOAT
	Unk_77999b9       DT_FLOAT
	ArZoomBreakpoints DT_VARIABLEARRAY[*DT_FLOAT]
	Unk_42cbe27       DT_INT
	Unk_34b452        DT_SNO
	Unk_3620f37       DT_INT
	Unk_c60b9b0       DT_INT
	Unk_754c08a       DT_SNO
	ArFogOfWar        DT_VARIABLEARRAY[*FogOfWarImage]
	Unk_ff16ba3       DT_VARIABLEARRAY[*Type_bef5a4a]
}

func (t *ZoneMapParams) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlZoneArtScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecZoneArtCenter.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlZoneBaseScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_80bc841.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4e79635.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_341cf9b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7ed5974.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f373e7a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77999b9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArZoomBreakpoints.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_42cbe27.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_34b452.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3620f37.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c60b9b0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_754c08a.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArFogOfWar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ff16ba3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_4ad15c6 struct {
	THeader     RequiredMessageHeader
	Unk_f898967 DT_FLOAT
}

func (t *Type_4ad15c6) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f898967.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HdrSettings struct {
	Unk_4cd8a3f DT_SNO
}

func (t *HdrSettings) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4cd8a3f.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ProjectileAttachmentOnHitMessage struct {
	THeader           RequiredMessageHeader
	AnnTarget         DT_ACD_NETWORK_NAME
	AnnAttacker       DT_ACD_NETWORK_NAME
	Unk_5692531       DT_OPTIONAL[*DT_VECTOR3D]
	Unk_5d619c6       DT_OPTIONAL[*DT_VECTOR3D]
	FlImpactDirection DT_OPTIONAL[*DT_FLOAT]
	FlImpactPitch     DT_OPTIONAL[*DT_FLOAT]
	SnoEffectGroup    DT_SNO
}

func (t *ProjectileAttachmentOnHitMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnAttacker.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5692531.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5d619c6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlImpactDirection.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlImpactPitch.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_4c2dc82 struct {
	LocalTransform Type_5f527528
	Scale          DT_VECTOR4D
	Radius1        DT_FLOAT
	Radius2        DT_FLOAT
	Height         DT_FLOAT
	Friction       DT_FLOAT
	BoneIndex      DT_WORD
	Solver         DT_BYTE
	Padding        DT_FIXEDARRAY[*DT_WORD]
}

func (t *Type_4c2dc82) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.LocalTransform.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Scale.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Radius1.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Radius2.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Height.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Friction.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.BoneIndex.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+66, io.SeekStart); err != nil {
		return err
	}
	if err := t.Solver.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Padding.UnmarshalD4(r, &Options{ArrayLength: 5}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameBalanceTable struct {
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
}

func (t *GameBalanceTable) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AimTargetMessage struct {
	THeader   RequiredMessageHeader
	Ann       DT_ACD_NETWORK_NAME
	EType     DT_ENUM
	AnnTarget DT_ACD_NETWORK_NAME
	TPlace    SharedServerWorldPlace
}

func (t *AimTargetMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPlace.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorFoleySoundOverride struct {
	TFoleyMaterialTag FoleyMaterialTag
	Unk_f77a839       DT_FIXEDARRAY[*DT_SNO]
}

func (t *ActorFoleySoundOverride) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFoleyMaterialTag.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f77a839.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
		Group:       79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_5535d75 struct {
	Unk_6eeeaad IKBone
	Unk_155967  DT_FLOAT
}

func (t *Type_5535d75) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6eeeaad.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_155967.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_5536dec struct {
	EIKLimb            DT_ENUM
	PtUpperLegs        DT_VARIABLEARRAY[*IKBone]
	BUseAnimatedOffset DT_INT
	FlOffsetHeight     DT_FLOAT
	TAlternateBone     IKBone
	Unk_978714f        DT_FLOAT
}

func (t *Type_5536dec) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EIKLimb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtUpperLegs.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.BUseAnimatedOffset.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOffsetHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAlternateBone.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_978714f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BlockedDamageVisualsMessage struct {
	THeader           RequiredMessageHeader
	AnnDefender       DT_ACD_NETWORK_NAME
	AnnAttacker       DT_ACD_NETWORK_NAME
	Unk_5692531       DT_OPTIONAL[*DT_VECTOR3D]
	Unk_5d619c6       DT_OPTIONAL[*DT_VECTOR3D]
	FlImpactDirection DT_OPTIONAL[*DT_FLOAT]
	FlImpactPitch     DT_OPTIONAL[*DT_FLOAT]
}

func (t *BlockedDamageVisualsMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnDefender.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnAttacker.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5692531.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5d619c6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlImpactDirection.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlImpactPitch.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_57fcadb struct {
	NSeed                        DT_INT
	ArForcedLabels               DT_FIXEDARRAY[*DT_GBID]
	ArForcedDungeonStates        DT_FIXEDARRAY[*DT_GBID]
	Unk_dab7507                  DT_FIXEDARRAY[*DT_GBID]
	Unk_4ab8ccb                  DT_INT
	BDisableDefaultLabels        DT_INT
	BDisableDefaultDungeonStates DT_INT
}

func (t *Type_57fcadb) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArForcedLabels.UnmarshalD4(r, &Options{
		ArrayLength: 32,
		Flags:       9,
		Group:       4,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArForcedDungeonStates.UnmarshalD4(r, &Options{
		ArrayLength: 32,
		Flags:       9,
		Group:       31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dab7507.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       9,
		Group:       31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+528, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4ab8ccb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+532, io.SeekStart); err != nil {
		return err
	}
	if err := t.BDisableDefaultLabels.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+536, io.SeekStart); err != nil {
		return err
	}
	if err := t.BDisableDefaultDungeonStates.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+540, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_586d03a struct {
	NOccurrence  DT_INT
	SnoMarker    DT_INT
	NMarkerIndex DT_INT
}

func (t *Type_586d03a) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NOccurrence.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMarker.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMarkerIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DungeonAffixFamilyEntry struct {
	THeader   GBIDHeader
	BIsUnique DT_INT
}

func (t *DungeonAffixFamilyEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsUnique.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Plane struct {
	WvNormal DT_VECTOR3D
	WdD      DT_FLOAT
}

func (t *Plane) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.WvNormal.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.WdD.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_5eb6ade struct {
	THardpointLinkTarget HardpointLink
	DwTargetID           DT_UINT
	FlWeight             DT_FLOAT
}

func (t *Type_5eb6ade) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLinkTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTargetID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlWeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GeoChunkIndexBuffer struct {
	Unk_7ef82a3 DT_VARIABLEARRAY[*DT_WORD]
	Ibid        DT_INT
	FOptional   DT_INT
}

func (t *GeoChunkIndexBuffer) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7ef82a3.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ibid.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FOptional.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PresetBannerData struct {
	SzName DT_UINT
	SzData DT_CSTRING[*DT_BYTE]
}

func (t *PresetBannerData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Ray2D struct {
	WpOrigin    DT_VECTOR2D
	WvDirection DT_VECTOR2D
}

func (t *Ray2D) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpOrigin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.WvDirection.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Ray3D struct {
	WpOrigin    DT_VECTOR3D
	WvDirection DT_VECTOR3D
}

func (t *Ray3D) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpOrigin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.WvDirection.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Shape struct {
	DwFlags           DT_UINT
	EType             DT_ENUM
	EMaterial         DT_ENUM
	NDegrade          DT_INT
	FlDensityFactor   DT_FLOAT
	FlExplosionFactor DT_FLOAT
	FlVelocityFactor  DT_FLOAT
	THull             ConvexHull
	TBox              OBB
	TSphere           Sphere
	TCylinder         Cylinder
	TCapsule          Capsule
}

func (t *Shape) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMaterial.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.NDegrade.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDensityFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlExplosionFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlVelocityFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.THull.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.TBox.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSphere.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCylinder.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+244, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCapsule.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerCameraData struct {
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType       DT_UINT
	DwPad        DT_UINT
	AFOV         DT_FLOAT
	FlFocalPlane DT_FLOAT
	FlFStop      DT_FLOAT
	Unk_101b2fc  DT_FLOAT
	Unk_6749d34  DT_FLOAT
	Unk_839bfef  DT_FLOAT
	FlNearPlane  DT_FLOAT
	FlFarPlane   DT_FLOAT
}

func (t *MarkerCameraData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AFOV.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFocalPlane.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFStop.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_101b2fc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6749d34.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_839bfef.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlNearPlane.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFarPlane.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamPlayer struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
	BIsPlayer  DT_INT
}

func (t *ScriptEventParamPlayer) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsPlayer.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_661d0bc struct {
	// Inherits Type_d4213c9b
	DwType      DT_UINT
	Unk_9b2bc26 Type_80554fed
	Unk_77ed19a DT_ENUM
	DwPad       DT_UINT
}

func (t *Type_661d0bc) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b2bc26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77ed19a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_6ba99db struct {
	// Inherits Type_4e43aa7a
	DwType      DT_UINT
	Unk_9b2bc26 Type_80fa280c
	Unk_77ed19a DT_ENUM
	DwPad       DT_UINT
}

func (t *Type_6ba99db) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b2bc26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77ed19a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BlendSettings struct {
	FlBlendTime DT_FLOAT
	EBlendCurve DT_ENUM
}

func (t *BlendSettings) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlBlendTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendCurve.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ChallengeCategory struct {
	DwID              DT_UINT
	ArCategories      DT_VARIABLEARRAY[*ChallengeCategory]
	ArAchievementSnos DT_VARIABLEARRAY[*DT_SNO]
	UFlags            DT_UINT
}

func (t *ChallengeCategory) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCategories.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArAchievementSnos.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 99,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.UFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MaterialColorValueDefinition struct {
	// Inherits DefaultMaterialValueDefinition
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
	VValue DT_VECTOR4D
}

func (t *MaterialColorValueDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.VValue.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UITextStyle struct {
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	TFont                     UIControlFont
	Unk_4741819               DT_TAGMAP[*DT_ENUM]
}

func (t *UITextStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFont.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4741819.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimTreeNodeOverride struct {
	// Inherits AnimTreeNodeBase
	// Inherits PolymorphicBase
	DwType               DT_UINT
	DwPad                DT_UINT
	DwID                 DT_UINT
	ENodeType            DT_ENUM
	EAnimLayer           DT_ENUM
	PtChildren           DT_VARIABLEARRAY[*AnimTreeNodeChild]
	EBlendParam          DT_ENUM
	ESecondaryBlendParam DT_ENUM
	Unk_5733828          DT_VARIABLEARRAY[*AnimTreeBlendTriangle]
	TMinBlend            DT_VECTOR2D
	TMaxBlend            DT_VECTOR2D
	TBlendIn             BlendSettings
	TBlendOut            BlendSettings
	Unk_dd1cd6f          DT_INT
	NSyncGroupIndex      DT_INT
	NOverrideID          DT_INT
}

func (t *AnimTreeNodeOverride) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.ENodeType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAnimLayer.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtChildren.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendParam.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESecondaryBlendParam.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5733828.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMinBlend.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMaxBlend.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.TBlendIn.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.TBlendOut.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dd1cd6f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSyncGroupIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.NOverrideID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_7eaf5b8 struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *Type_7eaf5b8) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ObserverDefinition struct {
	AFOV                 DT_FLOAT
	WvLookAtOffsetVector DT_VECTOR3D
	WvCameraOffsetVector DT_VECTOR3D
	Unk_5a947a6          DT_INT
	Unk_5c0680d          DT_VECTOR3D
	Unk_9dab378          DT_FLOAT
	Unk_3fe5936          DT_FLOAT
	Unk_c9a32ec          DT_FLOAT
	Unk_3ac51ed          DT_FLOAT
	FOrthographic        DT_INT
	FlFocalPlane         DT_FLOAT
	FlFStop              DT_FLOAT
	Unk_101b2fc          DT_FLOAT
	Unk_6749d34          DT_FLOAT
	Unk_839bfef          DT_FLOAT
	FlZFar               DT_FLOAT
	FlHeight             DT_FLOAT
	Unk_3853352          DT_FLOAT
	Unk_76194b5          DT_FLOAT
	Unk_551d996          DT_FLOAT
	Unk_e8a7758          DT_FLOAT
	Unk_4f566f0          DT_FLOAT
	Unk_4771732          DT_FLOAT
	FlFollowSpeed        DT_FLOAT
	Unk_9fb28df          DT_FLOAT
	Unk_f4da6b2          DT_FLOAT
	Unk_483b79           DT_FLOAT
	Unk_57e840d          DT_FLOAT
	Unk_d6fad4           DT_FLOAT
	Unk_6b455b8          DT_FLOAT
	Unk_15b7944          DT_FLOAT
	Unk_d2b3efc          DT_FLOAT
	BVelocityCamera      DT_INT
	Unk_9e17f0a          DT_FLOAT
	Unk_8f82b03          DT_FLOAT
	Unk_777445b          DT_FLOAT
	Unk_ca6f9df          DT_FLOAT
	Unk_ee8e3a           DT_FLOAT
	Unk_e45f065          DT_FLOAT
}

func (t *ObserverDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.AFOV.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.WvLookAtOffsetVector.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.WvCameraOffsetVector.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5a947a6.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5c0680d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9dab378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3fe5936.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c9a32ec.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3ac51ed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FOrthographic.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFocalPlane.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFStop.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_101b2fc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6749d34.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_839bfef.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlZFar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3853352.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_76194b5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_551d996.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e8a7758.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4f566f0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4771732.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFollowSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9fb28df.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f4da6b2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_483b79.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_57e840d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d6fad4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6b455b8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_15b7944.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d2b3efc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.BVelocityCamera.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9e17f0a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8f82b03.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_777445b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ca6f9df.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ee8e3a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e45f065.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerFogVolumeData struct {
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType        DT_UINT
	DwPad         DT_UINT
	TInstanceData FogVolumeInstanceData
}

func (t *MarkerFogVolumeData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TInstanceData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SkillTag_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*SkillTag]
}

func (t *SkillTag_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WeatherStateParams struct {
	Unk_d6ca49a DT_TAGMAP[*DT_ENUM]
}

func (t *WeatherStateParams) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d6ca49a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AffixSyncComponents struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *AffixSyncComponents) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_8b736c4 struct {
	RgbaOuterFalloff DT_RGBACOLOR
	RgbaOuter        DT_RGBACOLOR
	RgbaInner        DT_RGBACOLOR
	Unk_d9d4850      DT_FLOAT
}

func (t *Type_8b736c4) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaOuterFalloff.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaOuter.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaInner.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9d4850.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionIsShapeshiftForm struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType          DT_UINT
	BInverse        DT_INT
	DwPad           DT_UINT
	EShapeshiftForm DT_ENUM
	ESubject        DT_ENUM
}

func (t *PowerConditionIsShapeshiftForm) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EShapeshiftForm.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerEmblemResponseMessage struct {
	THeader     Type_72bd65f8
	Unk_dce541c DT_UINT
	SnoEmblem   DT_SNO
}

func (t *PlayerEmblemResponseMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEmblem.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 121,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_9153bc3 struct {
	FlProgressMin DT_FLOAT
	FlProgressMax DT_FLOAT
	BVertical     DT_INT
	Unk_e69457b   Type_6b1c5d9c
	Unk_2eb0960   Type_6b1c5d9c
	Unk_9df1c6f   Type_6b1c5d9c
	BReversed     DT_INT
	FlThickness   DT_FLOAT
}

func (t *Type_9153bc3) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlProgressMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlProgressMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.BVertical.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e69457b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2eb0960.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9df1c6f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.BReversed.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlThickness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIParagonBoardStyle struct {
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
}

func (t *UIParagonBoardStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameTestingPvpSamplingStartMessage struct {
	THeader    RequiredMessageHeader
	SzTestName DT_CHARARRAY
}

func (t *GameTestingPvpSamplingStartMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzTestName.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TrySalvageAllMessage struct {
	THeader      RequiredMessageHeader
	ESalvageType DT_ENUM
}

func (t *TrySalvageAllMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESalvageType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_9d7affe struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	BTriggersOnce         DT_INT
	Unk_74544d1           DT_INT
	FIsHFists             DT_INT
	ArThresholds          DT_VARIABLEARRAY[*DT_FLOAT]
}

func (t *Type_9d7affe) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.BTriggersOnce.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_74544d1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FIsHFists.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArThresholds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_9de9416 struct {
	BBlinkForever          DT_INT
	FlBlinkerMinAlpha      DT_FLOAT
	FlBlinkerRotationSpeed DT_FLOAT
	FlBlinkerAlphaSpeed    DT_FLOAT
}

func (t *Type_9de9416) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.BBlinkForever.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlBlinkerMinAlpha.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlBlinkerRotationSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlBlinkerAlphaSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UICheckBoxStyle struct {
	// Inherits UIButtonStyle
	// Inherits UITextStyle
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	TFont                     UIControlFont
	Unk_4741819               DT_TAGMAP[*DT_ENUM]
	TIcon                     UIControlIcon
	TClickSounds              Type_98c23c41
	Unk_10f81f0               DT_TAGMAP[*DT_ENUM]
	Unk_c12ea3b               DT_TAGMAP[*DT_ENUM]
}

func (t *UICheckBoxStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFont.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4741819.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.TIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.TClickSounds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_10f81f0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c12ea3b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BiomeDefinition struct {
	DwFlags              DT_UINT
	Unk_742ea83          DT_FLOAT
	ArBiomeClutters      DT_FIXEDARRAY[*BiomeClutter]
	ArMediumBiomeObjects DT_VARIABLEARRAY[*MediumBiomeObject]
	ArLargeBiomeObjects  DT_VARIABLEARRAY[*LargeBiomeObject]
}

func (t *BiomeDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_742ea83.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArBiomeClutters.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1040, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArMediumBiomeObjects.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1056, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArLargeBiomeObjects.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1072, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WorldDefinition struct {
	PtServerData       DT_VARIABLEARRAY[*WorldServerData]
	ELayoutType        DT_ENUM
	FlGridSize         DT_FLOAT
	TEnvironment       Environment
	FlDeformationScale DT_FLOAT
	UFlags             DT_UINT
	Unk_4194d72        DT_SNO
	SnoSubzoneDefault  DT_SNO
	ArDRLGLevelAreas   DT_VARIABLEARRAY[*DT_SNO]
	FHasZoneMap        DT_INT
	Unk_675bda3        DT_VARIABLEARRAY[*ScreenStaticCamps]
	DwAppearanceFlags  DT_UINT
	EDungeonFlavorType DT_ENUM
	TMatTexCloud       MaterialTexture
	TMatTexCloud2      MaterialTexture
	FlCloudScale       DT_FLOAT
	TZoneMapParams     ZoneMapParams
}

func (t *WorldDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtServerData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ELayoutType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGridSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEnvironment.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDeformationScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.UFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4194d72.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 26,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSubzoneDefault.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArDRLGLevelAreas.UnmarshalD4(r, &Options{Group: 22}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.FHasZoneMap.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_675bda3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwAppearanceFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDungeonFlavorType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMatTexCloud.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMatTexCloud2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlCloudScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	if err := t.TZoneMapParams.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+408, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimSyncGroup struct {
	ESyncGroupType DT_ENUM
}

func (t *AnimSyncGroup) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESyncGroupType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamRecipe struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
	SnoRecipe  DT_SNO
}

func (t *ScriptEventParamRecipe) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRecipe.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 49,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerHiddenCacheGizmoData struct {
	GbidHiddenCache DT_GBID
}

func (t *MarkerHiddenCacheGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidHiddenCache.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 28,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b0c47c9 struct{}

func (t *Type_b0c47c9) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+1, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BiomeClutter struct {
	// Inherits BiomeItem
	// Inherits PolymorphicBase
	DwType                 DT_UINT
	DwPad                  DT_UINT
	FlRadius               DT_FLOAT
	Unk_2fd1cdb            DT_FLOAT
	TAllowedScaleRange     DT_RANGE[*DT_FLOAT]
	Unk_87acb69            DT_RANGE[*DT_FLOAT]
	Unk_87acb6a            DT_RANGE[*DT_FLOAT]
	Unk_87acb6b            DT_RANGE[*DT_FLOAT]
	Unk_9854b6a            DT_RANGE[*DT_FLOAT]
	FlChance               DT_FLOAT
	DwFlags                DT_UINT
	Unk_2a8c4b6            DT_FLOAT
	AAzimuthAngle          DT_FLOAT
	AAltitudeAngle         DT_FLOAT
	Unk_6ead041            DT_RANGE[*DT_FLOAT]
	TParametricSettings    ParametricSettings
	ArProximityAdjustments DT_VARIABLEARRAY[*ProximityAdjustment]
	SnoClutter             DT_SNO
	SzLookName             DT_UINT
	DwShaderMapOverride    DT_UINT
}

func (t *BiomeClutter) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2fd1cdb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAllowedScaleRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87acb69.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87acb6a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87acb6b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9854b6a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlChance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2a8c4b6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.AAzimuthAngle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.AAltitudeAngle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6ead041.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TParametricSettings.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArProximityAdjustments.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoClutter.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 9,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+244, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLookName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwShaderMapOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b5002e1 struct {
	GbidSpawnLocType DT_GBID
	Unk_7a5b3f7      DT_FLOAT
}

func (t *Type_b5002e1) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidSpawnLocType.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 20,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7a5b3f7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ModifyCurrencyMessage struct {
	THeader       Type_72bd65f8
	ECurrencyType DT_ENUM
	NOpAmount     DT_INT64
}

func (t *ModifyCurrencyMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECurrencyType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NOpAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type JoinGameFailedMessage struct {
	THeader RequiredMessageHeader
	Reason  DT_UINT
}

func (t *JoinGameFailedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Reason.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_bef5a4a struct {
	NX          DT_INT
	NY          DT_INT
	Unk_2ec05dd DT_VARIABLEARRAY[*Type_ccd96a71]
}

func (t *Type_bef5a4a) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NX.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NY.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2ec05dd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerEncounterData struct {
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType                        DT_UINT
	DwPad                         DT_UINT
	ArActorGroups                 DT_VARIABLEARRAY[*DT_GBID]
	ArPrefabScopedActorGroups     DT_VARIABLEARRAY[*DT_GBID]
	SnoScript                     DT_VARIABLEARRAY[*DT_SNO]
	Unk_a497096                   DT_SNO
	Unk_7a5aecd                   DT_SNO
	Unk_8e70eff                   DT_ENUM
	Unk_c627b16                   DT_INT
	SnoPhasingVisibilityCondition DT_SNO
}

func (t *MarkerEncounterData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArActorGroups.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 24,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPrefabScopedActorGroups.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoScript.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 35,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a497096.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 3,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7a5aecd.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8e70eff.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c627b16.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPhasingVisibilityCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CriteriaModifier struct {
	ENecessaryCondition DT_ENUM
	EOperandType        DT_ENUM
	Snoname             DT_SNO_NAME
	EPowerCategory      DT_ENUM
	ESlot               DT_ENUM
	ECrafterType        DT_ENUM
	ECCType             DT_ENUM
	SzName              DT_UINT
	EIQL                DT_ENUM
	EMonsterRarity      DT_ENUM
	EDamageType         DT_ENUM
	EShapeshiftForm     DT_ENUM
	EDungeonFlavorType  DT_ENUM
	EDungeonTier        DT_ENUM
	EZone               DT_ENUM
	EWorldTier          DT_ENUM
	EParagonNodeRarity  DT_ENUM
	UVal                DT_UINT
	EBountyType         DT_ENUM
	ERogueImbueType     DT_ENUM
	GbidPetType         DT_GBID
	EGizmoType          DT_ENUM
	TDateTime           DT_INT64
	UOperand            DT_INT64
}

func (t *CriteriaModifier) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ENecessaryCondition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EOperandType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Snoname.UnmarshalD4(r, &Options{Flags: 513}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPowerCategory.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESlot.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECrafterType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECCType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.EIQL.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMonsterRarity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDamageType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.EShapeshiftForm.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDungeonFlavorType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDungeonTier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.EZone.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.EWorldTier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParagonNodeRarity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.UVal.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBountyType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.ERogueImbueType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidPetType.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 23,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.EGizmoType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDateTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.UOperand.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MailSendMessage struct {
	THeader    RequiredMessageHeader
	NToAccount DT_INT64
}

func (t *MailSendMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NToAccount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventFadeOtherPlayers struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
}

func (t *TriggerEventFadeOtherPlayers) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScrollbarStyle struct {
	TElements DT_FIXEDARRAY[*ScrollbarElementImages]
}

func (t *ScrollbarStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TElements.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayHotbarUIFlourishMessage struct {
	THeader     Type_b0f2a959
	Unk_dce541c DT_UINT
	SnoPower    DT_SNO
}

func (t *PlayHotbarUIFlourishMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIMinimapStyle struct {
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
}

func (t *UIMinimapStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_cbfce3e struct {
	// Inherits MarkerSplineData
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType             DT_UINT
	EInterpolationMode DT_ENUM
	Unk_a3f1699        DT_FLOAT
	Unk_4a4ab0e        DT_VARIABLEARRAY[*Type_cc5838a]
	FlTotalLength      DT_FLOAT
	EType              DT_ENUM
	ERoadType          DT_ENUM
	DwPad              DT_UINT
}

func (t *Type_cbfce3e) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EInterpolationMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a3f1699.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4a4ab0e.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTotalLength.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.ERoadType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_cc5838a struct {
	SzName      DT_UINT
	Transform   PRTransform
	Unk_644027a DT_FLOAT
	Unk_83cc220 DT_RANGE[*DT_INT]
	Unk_81a5ef8 DT_FLOAT
	Unk_2e8bbc0 DT_RANGE[*DT_INT]
	Unk_2cc466b DT_FLOAT
	Unk_375223b DT_INT
}

func (t *Type_cc5838a) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Transform.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_644027a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_83cc220.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_81a5ef8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2e8bbc0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2cc466b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_375223b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AddSocketResultMessage struct {
	THeader  RequiredMessageHeader
	BSuccess DT_INT
	AnnItem  DT_ACD_NETWORK_NAME
}

func (t *AddSocketResultMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BSuccess.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnItem.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionIsPower struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
	SnoPower DT_SNO
}

func (t *PowerConditionIsPower) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AffixDefinition struct {
	DwFlags                     DT_UINT
	EMagicType                  DT_ENUM
	ECategory                   DT_ENUM
	NItemPowerMin               DT_INT
	NItemPowerMax               DT_INT
	TCost                       DT_STRING_FORMULA
	SnoRareNamePrefixStringList DT_SNO
	SnoRareNameSuffixStringList DT_SNO
	GbidAffixFamily             DT_GBID
	Unk_d1d9b8                  DT_FIXEDARRAY[*DT_INT]
	ArAllowedItemLabels         DT_VARIABLEARRAY[*DT_ENUM]
	DwAllowedQualityLevels      DT_UINT
	EAffixType                  DT_ENUM
	PtItemAffixAttributes       DT_VARIABLEARRAY[*ItemAffixAttribute]
	ArStaticValues              DT_VARIABLEARRAY[*DT_FLOAT]
	SnoPassivePower             DT_SNO
	SnoClassRequirement         DT_SNO
	ArAffixSkillTags            DT_VARIABLEARRAY[*DT_GBID]
	Unk_f5936eb                 DT_VARIABLEARRAY[*DT_SNO]
	Unk_cc55a2d                 DT_VARIABLEARRAY[*DT_GBID]
	Unk_bd86972                 DT_VARIABLEARRAY[*DT_GBID]
}

func (t *AffixDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMagicType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECategory.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NItemPowerMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NItemPowerMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCost.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRareNamePrefixStringList.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 42,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRareNameSuffixStringList.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 42,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidAffixFamily.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 18,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d1d9b8.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArAllowedItemLabels.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwAllowedQualityLevels.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAffixType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtItemAffixAttributes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArStaticValues.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPassivePower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoClassRequirement.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 74,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArAffixSkillTags.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 56,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f5936eb.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cc55a2d.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 56,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bd86972.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 56,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ExperienceLevel struct {
	NDeltaXP              DT_INT64
	Unk_66201eb           DT_INT
	FlLifeStealMultiplier DT_FLOAT
}

func (t *ExperienceLevel) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NDeltaXP.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_66201eb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLifeStealMultiplier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OutroPortalEffectMessage struct {
	THeader      RequiredMessageHeader
	DwPortalType DT_UINT
}

func (t *OutroPortalEffectMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPortalType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIEffect struct {
	SnoEffectGroup DT_SNO
	Unk_25f3563    DT_CSTRING[*DT_BYTE]
	EScaleMethod   DT_ENUM
	VecScale       DT_VECTOR2D
}

func (t *UIEffect) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25f3563.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EScaleMethod.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TryImbueAffixMessage struct {
	THeader       RequiredMessageHeader
	AnnTargetItem DT_ACD_NETWORK_NAME
	BFromItem     DT_INT
	AnnAspectItem DT_ACD_NETWORK_NAME
	SnoAspect     DT_SNO
}

func (t *TryImbueAffixMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnTargetItem.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.BFromItem.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnAspectItem.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAspect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 128,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SetItemBonusDefinition struct {
	PtTiers DT_VARIABLEARRAY[*SetBonusTier]
}

func (t *SetItemBonusDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtTiers.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GBHandle struct {
	EType DT_ENUM
	Gbid  DT_GBID
}

func (t *GBHandle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Gbid.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerCastingEffectOverride struct {
	Unk_aa3fdee               DT_SNO
	SnoCastingEffectGroup     DT_SNO
	SnoAutoCastingEffectGroup DT_SNO
}

func (t *PowerCastingEffectOverride) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aa3fdee.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 104,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCastingEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAutoCastingEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamString struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType       DT_UINT
	EParamType   DT_ENUM
	DwPad        DT_UINT
	DwStringHash DT_UINT
	SzString     DT_CSTRING[*DT_BYTE]
}

func (t *ScriptEventParamString) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwStringHash.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzString.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NPCComponentHardpointOverride struct {
	THardpointOverride HardpointLink
	PositionOffset     DT_VECTOR3D
	EComponentType     DT_ENUM
	SzComponent        DT_UINT
}

func (t *NPCComponentHardpointOverride) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PositionOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComponentType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzComponent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_e04c1a6 struct {
	FlTime    DT_FLOAT
	VPosition DT_VECTOR3D
}

func (t *Type_e04c1a6) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.VPosition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIControlStyle struct {
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
}

func (t *UIControlStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnAssistBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnAssistBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SharedServerWorldPlace struct {
	Wp       DT_VECTOR3D
	IdSWorld DT_SHARED_SERVER_DATA_ID
}

func (t *SharedServerWorldPlace) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSWorld.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConditionDefinition struct {
	PtRootCondition DT_POLYMORPHIC_VARIABLEARRAY[*Subcondition]
}

func (t *ConditionDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtRootCondition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WwiseName struct {
	UID DT_UINT
}

func (t *WwiseName) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.UID.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupScaleYKeyData struct {
	// Inherits EffectGroupKeyData
	// Inherits PolymorphicBase
	DwType     DT_UINT
	DwPad      DT_UINT
	ArKeyItems DT_VARIABLEARRAY[*EffectGroupKey]
}

func (t *EffectGroupScaleYKeyData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArKeyItems.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RitualTetherEffectMessage struct {
	THeader    RequiredMessageHeader
	AnnFrom    DT_ACD_NETWORK_NAME
	TPlaceDest SharedServerWorldPlace
}

func (t *RitualTetherEffectMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnFrom.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPlaceDest.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnPetDeathBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnPetDeathBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConsoleAwardDefinition struct {
	// Inherits PolymorphicBase
	DwType          DT_UINT
	UProfileAwardId DT_UINT
	DwPad           DT_UINT
}

func (t *ConsoleAwardDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.UProfileAwardId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_fe0bd4d struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
}

func (t *Type_fe0bd4d) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Capsule struct {
	Wp1      DT_VECTOR3D
	Wp2      DT_VECTOR3D
	FlRadius DT_FLOAT
}

func (t *Capsule) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wp1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wp2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CardArt struct {
	HCardImage      DT_UINT
	HCardHoverImage DT_UINT
}

func (t *CardArt) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.HCardImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.HCardHoverImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerWaypointGizmoData struct {
	ArWaypointEffects DT_FIXEDARRAY[*WaypointEffectInfo]
	Unk_92edf50       DT_SNO
	HZoneLabel        DT_UINT
	UEntranceGUID     DT_STARTLOC_NAME
}

func (t *MarkerWaypointGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArWaypointEffects.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+864, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_92edf50.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+868, io.SeekStart); err != nil {
		return err
	}
	if err := t.HZoneLabel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+872, io.SeekStart); err != nil {
		return err
	}
	if err := t.UEntranceGUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+876, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type FatVertex struct {
	WpPos      DT_VECTOR3D
	WvNormal   DT_VECTOR3D
	RgbaColor  DT_FIXEDARRAY[*DT_RGBACOLOR]
	VUVSet     DT_FIXEDARRAY[*DT_VECTOR2D]
	VecTangent DT_VECTOR4D
}

func (t *FatVertex) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpPos.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.WvNormal.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaColor.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.VUVSet.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecTangent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ParagonGlyphExperience struct {
	NDeltaXP DT_UINT
}

func (t *ParagonGlyphExperience) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NDeltaXP.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PrefetchWorldDataMessage struct {
	THeader    RequiredMessageHeader
	SnoWorld   DT_SNO
	SnoSubzone DT_SNO
}

func (t *PrefetchWorldDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSubzone.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LogoutContextMessage struct {
	THeader        RequiredMessageHeader
	ELogoutContext DT_ENUM
}

func (t *LogoutContextMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ELogoutContext.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ACDEnterKnownMessage struct {
	THeader                        RequiredMessageHeader
	Ann                            DT_ACD_NETWORK_NAME
	SnoActor                       DT_SNO
	DwFlags                        DT_UINT
	ELocationType                  DT_ENUM
	TWorldLocationData             DT_OPTIONAL[*WorldLocationMessageData]
	TInvLocationData               DT_OPTIONAL[*InventoryLocationMessageData]
	Unk_aa2bbb9                    DT_SNO_NAME
	NMonsterRarity                 DT_OPTIONAL[*DT_INT]
	NItemQuality                   DT_OPTIONAL[*DT_INT]
	NItemQualityModifier           DT_OPTIONAL[*DT_INT]
	DwLookHash                     DT_UINT
	DwShaderMapOverride            DT_UINT
	SnoMarkerSet                   DT_OPTIONAL[*DT_SNO]
	NMarkerId                      DT_OPTIONAL[*DT_INT]
	SnoRootMarkerSet               DT_OPTIONAL[*DT_SNO]
	Unk_7a55b3f                    DT_OPTIONAL[*DT_UINT]
	Unk_7d23397                    DT_OPTIONAL[*DT_SNO]
	Unk_3125d0e                    DT_OPTIONAL[*DT_UINT]
	SnoAmbientOcclusionOverrideTex DT_OPTIONAL[*DT_SNO]
	DwTimeActorCreated             DT_OPTIONAL[*DT_UINT]
	TEnterKnownLookOverrides       DT_OPTIONAL[*EnterKnownLookOverrides]
	TEnterKnownShaderMapOverrides  DT_OPTIONAL[*EnterKnownShaderMapOverrides]
	UGizmoHash                     DT_OPTIONAL[*DT_UINT]
	Unk_9e938b5                    DT_OPTIONAL[*DT_INT64]
	AnnSummonedBy                  DT_OPTIONAL[*DT_ACD_NETWORK_NAME]
	Unk_b192047                    DT_OPTIONAL[*DT_SNO]
	DwAttachedHardpoint            DT_OPTIONAL[*DT_UINT]
	DwAttachHardpoint              DT_OPTIONAL[*DT_UINT]
	Unk_3929c26                    DT_OPTIONAL[*DT_ACD_NETWORK_NAME]
	Unk_f5f15cc                    DT_FIXEDARRAY[*Type_a9417475]
	Unk_310a730                    DT_FIXEDARRAY[*Type_a9417475]
}

func (t *ACDEnterKnownMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ELocationType.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.TWorldLocationData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.TInvLocationData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aa2bbb9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMonsterRarity.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.NItemQuality.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.NItemQualityModifier.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwLookHash.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwShaderMapOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMarkerSet.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMarkerId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRootMarkerSet.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7a55b3f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7d23397.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3125d0e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAmbientOcclusionOverrideTex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTimeActorCreated.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEnterKnownLookOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEnterKnownShaderMapOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	if err := t.UGizmoHash.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9e938b5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+320, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnSummonedBy.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+332, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b192047.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+340, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwAttachedHardpoint.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+348, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwAttachHardpoint.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+356, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3929c26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+368, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f5f15cc.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+432, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_310a730.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+496, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SavedCameraStates struct {
	ArCameraStates DT_VARIABLEARRAY[*SavedWorldCameraState]
}

func (t *SavedCameraStates) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCameraStates.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_1109bb04 struct {
	TComponentId     DT_UINT
	ArLegComponents  DT_VARIABLEARRAY[*DT_UINT]
	ArHelmComponents DT_VARIABLEARRAY[*DT_UINT]
}

func (t *Type_1109bb04) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TComponentId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArLegComponents.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArHelmComponents.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerChestGizmoData struct {
	SnoTreasureClass DT_SNO
	Unk_2a0e071      DT_INT
	Unk_e86679d      DT_FLOAT
}

func (t *MarkerChestGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTreasureClass.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2a0e071.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e86679d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIStackPanelStyle struct {
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	Unk_8e594da               DT_TAGMAP[*DT_ENUM]
}

func (t *UIStackPanelStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8e594da.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type JoinExistingGameMessage struct {
	THeader       RequiredMessageHeader
	IdSGame       DT_INT
	EXLocale      DT_ENUM
	FlAspectRatio DT_FLOAT
	UProtocolHash DT_UINT
	AtPlayers     DT_FIXEDARRAY[*Type_74952762]
	TTrace        TraceMessage
}

func (t *JoinExistingGameMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSGame.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.EXLocale.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAspectRatio.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.UProtocolHash.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.AtPlayers.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+344, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTrace.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+424, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerHeightFieldData struct {
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType                         DT_UINT
	DwPad                          DT_UINT
	Unk_d8d2509                    DT_INT
	Unk_b677151                    DT_INT
	SnoBaseMaterial                DT_SNO
	FlSystemDuration               DT_FLOAT
	TWaveSettings                  HeightFieldWaveSettings
	ArAtlasTextures                DT_VARIABLEARRAY[*MarkerHeightFieldTexture]
	ArIndices                      DT_VARIABLEARRAY[*DT_WORD]
	IbidIndices                    DT_INT
	Unk_f481a51                    DT_INT
	ArLookVariantMaterialMap       DT_VARIABLEARRAY[*LookVariantMaterialMap]
	ArConditionalMaterialOverrides DT_VARIABLEARRAY[*ConditionalMaterialOverride]
	ArLines                        DT_VARIABLEARRAY[*MarkerHeightFieldLine]
}

func (t *MarkerHeightFieldData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d8d2509.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b677151.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoBaseMaterial.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 57,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSystemDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.TWaveSettings.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArAtlasTextures.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArIndices.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.IbidIndices.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f481a51.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArLookVariantMaterialMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditionalMaterialOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArLines.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerHeightFieldLine struct {
	ArSections DT_VARIABLEARRAY[*MarkerHeightFieldSection]
}

func (t *MarkerHeightFieldLine) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSections.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_11a18e87 struct {
	NLeft                            DT_INT
	NTop                             DT_INT
	NWidth                           DT_INT
	NHeight                          DT_INT
	NRight                           DT_INT
	NBottom                          DT_INT
	NMaxWidth                        DT_INT
	NMaxHeight                       DT_INT
	NMinWidth                        DT_INT
	NMinHeight                       DT_INT
	HTooltipText                     StringLabelHandleEx
	ETooltipTextJustify              DT_ENUM
	NTooltip                         DT_CSTRING[*DT_BYTE]
	NTooltipOffsetX                  DT_INT
	NTooltipOffsetY                  DT_INT
	ETooltipAlignHorizontal          DT_ENUM
	ETooltipAlignVertical            DT_ENUM
	NTooltipWidth                    DT_INT
	Unk_bffade6                      DT_FLOAT
	DwAlpha                          DT_BYTE
	EAlphaInheritanceType            DT_ENUM
	SnoShader                        DT_SNO
	Unk_b25bd2f                      UIEffect
	Unk_9cf9482                      UIEffect
	Unk_53346c4                      UIEffect
	Unk_4c24000                      DT_INT
	HImageFrame                      Type_6b1c5d9c
	HMaskImage                       Type_6b1c5d9c
	Unk_ca5933c                      Type_6b1c5d9c
	Unk_902601b                      DT_INT
	Unk_878e49e                      Type_6b1c5d9c
	SnoChildHoverTiledStyle          DT_SNO
	Unk_7cf5f9e                      DT_SNO
	BWinDraggable                    DT_INT
	Unk_849b3d9                      DT_INT
	Unk_f9614a9                      DT_INT
	EClipBehavior                    DT_ENUM
	BRolledUp                        DT_INT
	BEncloseChildren                 DT_INT
	Unk_b0ab75a                      DT_INT
	Unk_f6e00c8                      DT_INT
	Unk_ab7c81f                      DT_INT
	Unk_90fbd84                      DT_INT
	Unk_28714d                       DT_INT
	BWindowIsInputFocusGroup         DT_INT
	NInputFocusOrder                 DT_INT
	EVisibilityCondition             DT_ENUM
	SnoTiledStyle                    DT_SNO
	SnoControllerHighlightTiledStyle DT_SNO
	Unk_3dc9f06                      DT_INT
	Unk_3dc9f07                      DT_INT
	Unk_438e5c1                      DT_INT
	EWindowEatsClicks                DT_ENUM
	Unk_bdc3d9e                      DT_INT
	SzOnClick                        DT_CSTRING[*DT_BYTE]
	Unk_f19b822                      DT_CSTRING[*DT_BYTE]
	Unk_c6ae8ed                      DT_INT
	SzOnDoubleClick                  DT_CSTRING[*DT_BYTE]
	SzOnRightClick                   DT_CSTRING[*DT_BYTE]
	Unk_cf724a8                      DT_CSTRING[*DT_BYTE]
	Unk_1894e73                      DT_INT
	SzOnMiddleClick                  DT_CSTRING[*DT_BYTE]
	SzOnDragStart                    DT_CSTRING[*DT_BYTE]
	SzOnDrag                         DT_CSTRING[*DT_BYTE]
	SzOnDragStop                     DT_CSTRING[*DT_BYTE]
	BIsDragTarget                    DT_INT
	Unk_4530f50                      DT_CSTRING[*DT_BYTE]
	SzOnContextMenu                  DT_CSTRING[*DT_BYTE]
	Unk_d31cd22                      DT_INT
	Unk_37f7289                      DT_INT
	Unk_354e749                      DT_INT
	SzChangedArsenal                 DT_CSTRING[*DT_BYTE]
	FlRotation                       DT_FLOAT
	VecPivot                         DT_VECTOR2D
	BMirrorX                         DT_INT
	BMirrorY                         DT_INT
	BNoSnap                          DT_INT
	Unk_93cbaa8                      DT_ENUM
	Unk_3d55658                      DT_ENUM
	RgbaTint                         DT_RGBACOLOR
	RgbaForeground                   DT_RGBACOLOR
	RgbaForegroundDisabled           DT_RGBACOLOR
	RgbaDropShadow                   DT_RGBACOLOR
	RgbaChildHoverForeground         DT_RGBACOLOR
	RgbaChildHoverForegroundDisabled DT_RGBACOLOR
}

func (t *Type_11a18e87) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLeft.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NTop.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NWidth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.NHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NRight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NBottom.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMaxWidth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMaxHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMinWidth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMinHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.HTooltipText.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETooltipTextJustify.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.NTooltip.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.NTooltipOffsetX.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.NTooltipOffsetY.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETooltipAlignHorizontal.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETooltipAlignVertical.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.NTooltipWidth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bffade6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwAlpha.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAlphaInheritanceType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoShader.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b25bd2f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9cf9482.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_53346c4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4c24000.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+236, io.SeekStart); err != nil {
		return err
	}
	if err := t.HImageFrame.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.HMaskImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+244, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ca5933c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_902601b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+252, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_878e49e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChildHoverTiledStyle.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 103,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7cf5f9e.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 7,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.BWinDraggable.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_849b3d9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f9614a9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	if err := t.EClipBehavior.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.BRolledUp.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+284, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEncloseChildren.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b0ab75a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+292, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6e00c8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab7c81f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+300, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_90fbd84.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_28714d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+308, io.SeekStart); err != nil {
		return err
	}
	if err := t.BWindowIsInputFocusGroup.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+312, io.SeekStart); err != nil {
		return err
	}
	if err := t.NInputFocusOrder.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+316, io.SeekStart); err != nil {
		return err
	}
	if err := t.EVisibilityCondition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+320, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTiledStyle.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 103,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+324, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoControllerHighlightTiledStyle.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 103,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+328, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3dc9f06.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+332, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3dc9f07.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+336, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_438e5c1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+340, io.SeekStart); err != nil {
		return err
	}
	if err := t.EWindowEatsClicks.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+344, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bdc3d9e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+352, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnClick.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+368, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f19b822.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+384, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c6ae8ed.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+392, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnDoubleClick.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+408, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnRightClick.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+424, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cf724a8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+440, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1894e73.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+448, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnMiddleClick.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+464, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnDragStart.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+480, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnDrag.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+496, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnDragStop.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+512, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsDragTarget.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+520, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4530f50.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+536, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnContextMenu.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+552, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d31cd22.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+556, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_37f7289.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+560, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_354e749.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+568, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzChangedArsenal.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+584, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRotation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+588, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecPivot.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+596, io.SeekStart); err != nil {
		return err
	}
	if err := t.BMirrorX.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+600, io.SeekStart); err != nil {
		return err
	}
	if err := t.BMirrorY.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+604, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNoSnap.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+608, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_93cbaa8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+612, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3d55658.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+616, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaTint.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+620, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaForeground.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+624, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaForegroundDisabled.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+628, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaDropShadow.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+632, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaChildHoverForeground.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+636, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaChildHoverForegroundDisabled.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+640, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerUnpossessActorMessage struct {
	THeader     RequiredMessageHeader
	Unk_dce541c DT_UINT
}

func (t *PlayerUnpossessActorMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DataIDDataMessage struct {
	THeader RequiredMessageHeader
	Id      DT_INT
}

func (t *DataIDDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Id.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestObjectiveSet struct {
	DwUID               DT_UINT
	PtLink              DT_VARIABLEARRAY[*QuestObjectiveSetLink]
	ArCallbacks         DT_VARIABLEARRAY[*QuestCallback]
	Unk_a845fa9         DT_INT
	Unk_89d02b1         DT_SNO
	Unk_68d4eb0         QuestReward
	TReward             QuestReward
	TKeyedDungeonReward QuestReward
	Unk_8c63f3c         DT_INT
	Unk_e903c4e         DT_SNO
	Unk_8f432f8         DT_VARIABLEARRAY[*DT_SNO]
}

func (t *QuestObjectiveSet) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCallbacks.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a845fa9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_89d02b1.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_68d4eb0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.TReward.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.TKeyedDungeonReward.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8c63f3c.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e903c4e.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 12,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8f432f8.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_11c81cb7 struct {
	THeader      RequiredMessageHeader
	Ann          DT_ACD_NETWORK_NAME
	NKey         DT_INT64
	NIntValue    DT_INT
	FlFloatValue DT_FLOAT
}

func (t *Type_11c81cb7) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NKey.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.NIntValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFloatValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AudioMonsterCategory struct {
	SzName      DT_UINT
	NScore      DT_INT
	Unk_8105d80 Type_cbfdd2ea
	Unk_bb98fd8 DT_CSTRING[*DT_BYTE]
}

func (t *AudioMonsterCategory) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NScore.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8105d80.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bb98fd8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventAttachSpawnedActor struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType         DT_UINT
	DwPad          DT_UINT
	TConditions    TriggerConditions
	FGenerated     DT_INT
	Unk_6cba752    DT_INT
	Unk_e560b0b    DT_UINT
	DwID           DT_UINT
	THardpointLink HardpointLink
}

func (t *TriggerEventAttachSpawnedActor) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DestroyOnProximityGizmoData struct {
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
	PtProxData                   DT_POLYMORPHIC_VARIABLEARRAY[*ProximityDataBase]
	SnoDeathPower                DT_SNO
}

func (t *DestroyOnProximityGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtProxData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDeathPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_1259dca8 struct {
	SnoWorld         DT_SNO
	SnoPortraitWorld DT_SNO
	SnoActor         DT_SNO
}

func (t *Type_1259dca8) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPortraitWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type StoryboardGenericTrack struct {
	// Inherits StoryboardTrack
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
}

func (t *StoryboardGenericTrack) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type FogVolumeDefinition struct {
	TInstanceData FogVolumeInstanceData
	VecScale      DT_VECTOR3D
}

func (t *FogVolumeDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TInstanceData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TexAnimTranslationCurve struct {
	// Inherits TexAnim
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	FlUScale    DT_FLOAT
	FlVScale    DT_FLOAT
	PathU       Type_cbfdd2ea
	PathV       Type_cbfdd2ea
	DwAnimFlags DT_UINT
}

func (t *TexAnimTranslationCurve) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlUScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlVScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathU.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathV.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwAnimFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type FoliageSettings struct {
	FlExplosionFactor DT_FLOAT
	FlFrequency       DT_FLOAT
	FlDampingRatio    DT_FLOAT
	FlMaxOffsetFactor DT_FLOAT
	FlRadiusRatio     DT_FLOAT
	Unk_77adebf       DT_SNO
	SnoSoundImpact    DT_SNO
	SnoAmbientSound   DT_SNO
	Unk_620b5c3       DT_FLOAT
	Unk_bf229f9       DT_FLOAT
}

func (t *FoliageSettings) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlExplosionFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFrequency.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDampingRatio.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMaxOffsetFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRadiusRatio.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77adebf.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSoundImpact.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAmbientSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 5,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_620b5c3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bf229f9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionIsSpecificActor struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
	ESubject DT_ENUM
	SnoActor DT_SNO
}

func (t *PowerConditionIsSpecificActor) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BoxProximityData struct {
	// Inherits ProximityDataBase
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
	WvOBB  DT_VECTOR3D
}

func (t *BoxProximityData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.WvOBB.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SceneSpecification struct {
	DwFlags           DT_UINT
	SnoLevelArea      DT_SNO
	Unk_74a9537       DT_STARTLOC_NAME
	SnoPrevWorld      DT_SNO
	UPrevEntranceGUID DT_STARTLOC_NAME
	SnoPrevLevelArea  DT_SNO
	SnoAudioContext   DT_SNO
	SnoWeather        DT_SNO
	SnoPresetWorld    DT_SNO
	NSceneChunk       DT_INT
	ArSubzones        DT_VARIABLEARRAY[*StartingAllowedWeather]
}

func (t *SceneSpecification) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelArea.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_74a9537.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPrevWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.UPrevEntranceGUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPrevLevelArea.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAudioContext.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 93,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWeather.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 47,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPresetWorld.UnmarshalD4(r, &Options{
		Flags: 512,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSceneChunk.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSubzones.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventRelaxCloth struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
	Unk_85269a4 DT_INT
	DwActorID   DT_UINT
	Unk_54489ef DT_INT
}

func (t *TriggerEventRelaxCloth) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_85269a4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwActorID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54489ef.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnDotReceivedBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnDotReceivedBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PVPGizmoMessage struct {
	THeader           RequiredMessageHeader
	SnoGizmo          DT_SNO
	WpLocation        DT_VECTOR3D
	DwCooldownEndTime DT_UINT
}

func (t *PVPGizmoMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoGizmo.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpLocation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwCooldownEndTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnPetAddBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnPetAddBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameVariableIsSetSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType               DT_UINT
	BNegate              DT_INT
	DwPad                DT_UINT
	GbidDesignerVariable DT_GBID
}

func (t *GameVariableIsSetSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidDesignerVariable.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 45,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TutorialScreen struct {
	DwID     DT_UINT
	HImage   DT_UINT
	SnoMovie DT_SNO
}

func (t *TutorialScreen) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.HImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMovie.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 102,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameTestingMonsterSkillSamplingStartMessage struct {
	THeader     RequiredMessageHeader
	SzGroupType DT_CHARARRAY
	SnoMonster  DT_SNO
	SnoSkill    DT_SNO
	UCount      DT_UINT
}

func (t *GameTestingMonsterSkillSamplingStartMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzGroupType.UnmarshalD4(r, &Options{
		ArrayLength: 16,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMonster.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSkill.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.UCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type StoreDisclaimerData struct {
	HLabel StringLabelHandleEx
}

func (t *StoreDisclaimerData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.HLabel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIBlinkerStyle struct {
	// Inherits UITextStyle
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	TFont                     UIControlFont
	Unk_4741819               DT_TAGMAP[*DT_ENUM]
	Unk_16582db               DT_TAGMAP[*DT_ENUM]
}

func (t *UIBlinkerStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFont.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4741819.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_16582db.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NpcLookTemplate struct {
	SzRegionName     DT_CSTRING[*DT_BYTE]
	EZone            DT_ENUM
	SzToolTip        DT_CSTRING[*DT_BYTE]
	ArNpcLookEntries DT_VARIABLEARRAY[*NpcLookEntry]
}

func (t *NpcLookTemplate) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzRegionName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EZone.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzToolTip.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArNpcLookEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerCrowdControlInfo struct {
	Unk_b7c1372 DT_STRING_FORMULA
	Unk_5143c1f DT_STRING_FORMULA
	Unk_982fe71 DT_STRING_FORMULA
}

func (t *PowerCrowdControlInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b7c1372.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5143c1f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_982fe71.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_14a42c17 struct {
	Unk_6942446 DT_FLOAT
	Unk_11ed90c DT_FLOAT
	Unk_b9b72f0 DT_FLOAT
	Unk_9cca79f DT_FLOAT
	Unk_ae42774 DT_FLOAT
	Unk_5342bdc DT_FLOAT
	Unk_f2e6be7 DT_FLOAT
}

func (t *Type_14a42c17) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6942446.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_11ed90c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b9b72f0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9cca79f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ae42774.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5342bdc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f2e6be7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerDefinition struct {
	SzInternalName               DT_CHARARRAY
	BDefensive                   DT_INT
	Unk_bd561bf                  DT_INT
	TPrimaryTag                  SkillTagStruct
	ArSkillTags                  DT_VARIABLEARRAY[*SkillTagStruct]
	ESkillCat                    DT_ENUM
	EType                        DT_ENUM
	ECategory                    DT_ENUM
	Unk_2b4eb99                  DT_ENUM
	Unk_9a3836e                  DT_ENUM
	EPowerAnimMovement           DT_ENUM
	Unk_1450715                  DT_INT
	BChannelled                  DT_INT
	BChannelledMovement          DT_INT
	BAutoChannelled              DT_INT
	Unk_3837f2a                  DT_INT
	Unk_6c6eb6b                  DT_INT
	Unk_c19db61                  DT_STRING_FORMULA
	Unk_9aad0d1                  DT_INT
	BIsBasicAttack               DT_INT
	BIsPassive                   DT_INT
	Unk_30531f7                  DT_INT
	BAimedPower                  DT_INT
	Unk_1f1fcc                   DT_INT
	EPowerFallback               DT_ENUM
	Unk_49572b0                  DT_ENUM
	EPowerTargetingType          DT_ENUM
	Unk_d8567e5                  DT_VARIABLEARRAY[*DT_SNO]
	SnoEnchantmentPower          DT_SNO
	SnoMountedRiderPower         DT_SNO
	BUsesWeaponExpertise         DT_INT
	Unk_fca3b69                  DT_INT
	BIgnoreSkillRanks            DT_INT
	SnoPowerAnimationOverride    DT_SNO
	BPreplayAnimation            DT_INT
	Unk_99e0ced                  DT_INT
	EAnimationLayer              DT_ENUM
	Unk_3616d3                   DT_ENUM
	Unk_41a3d22                  DT_INT
	Unk_2df4181                  DT_INT
	BSetLookAtTarget             DT_INT
	BForceSheath                 DT_INT
	Unk_48531b6                  DT_INT
	ArEndingPreplayed            DT_POLYMORPHIC_VARIABLEARRAY[*PowerPhasePreplay]
	PtPhaseInitialization        DT_POLYMORPHIC_VARIABLEARRAY[*PowerPhaseInitialization]
	ArPhases                     DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	Unk_92fea1c                  DT_INT
	Unk_8cdde38                  DT_INT
	ArFacingWindows              DT_VARIABLEARRAY[*PowerFacingWindow]
	Unk_4bf03ff                  DT_INT
	TAttackSpeed                 DT_STRING_FORMULA
	Unk_6deb090                  DT_INT
	Unk_ed2bdad                  DT_INT
	BOverkillStacked             DT_INT
	Unk_7a86b64                  DT_INT
	EDamageType                  DT_ENUM
	Unk_752edeb                  DT_INT
	TCombatEffectChance          DT_STRING_FORMULA
	Unk_7cfb7ba                  DT_STRING_FORMULA
	Unk_923b5fb                  DT_INT
	Unk_e517f6f                  DT_INT
	EHitSound                    DT_ENUM
	Unk_4d7691e                  Type_3940c0fe
	Unk_1a5392                   DT_INT
	Unk_97eadb8                  DT_UINT
	Unk_5e1a52d                  DT_INT
	BCaptionsInside              DT_INT
	EShapeshiftForm              DT_ENUM
	ArResourceCosts              DT_VARIABLEARRAY[*PowerResourceCost]
	THealthCost                  DT_STRING_FORMULA
	TChargeCost                  DT_STRING_FORMULA
	TMaxCharges                  DT_STRING_FORMULA
	TRechargeTime                DT_STRING_FORMULA
	TCooldownTime                DT_STRING_FORMULA
	Unk_b26a921                  DT_STRING_FORMULA
	Unk_86a6e05                  DT_STRING_FORMULA
	BTargetGroundOnly            DT_INT
	Unk_fc01065                  DT_ENUM
	BWalksCloserIfOutOfRange     DT_INT
	BCanSteer                    DT_INT
	Unk_67b65e9                  DT_INT
	BAutoTargetingEnabled        DT_INT
	Unk_42057f3                  DT_INT
	Unk_fbccf7                   DT_INT
	Unk_7cdc8cb                  DT_INT
	Unk_37d51de                  DT_SNO
	Unk_be5487b                  DT_SNO
	Unk_66bbae7                  DT_INT
	Unk_5efc45c                  DT_INT
	Unk_b9ffd91                  DT_INT
	Unk_4d9cc58                  DT_INT
	Unk_950971c                  DT_FLOAT
	Unk_79e716a                  DT_FLOAT
	Unk_ead9008                  DT_FLOAT
	Unk_767809                   DT_FLOAT
	BCastTargetAllies            DT_INT
	BCastTargetEnemies           DT_INT
	Unk_7095076                  DT_INT
	TCastTargetNecroCorpsesOnly  DT_STRING_FORMULA
	Unk_b9b985                   DT_STRING_FORMULA
	Unk_bcdb405                  DT_INT
	Unk_6e40571                  DT_INT
	Unk_807540f                  DT_STRING_FORMULA
	VAttributesResistFireValue   DT_STRING_FORMULA
	Unk_e96cf25                  DT_INT
	Unk_d8f7885                  DT_INT
	Unk_8d0166c                  DT_INT
	Unk_1539714                  DT_FLOAT
	Unk_e9ac57a                  DT_INT
	Unk_61e06df                  DT_INT
	Unk_787b722                  DT_FLOAT
	Unk_b2d506d                  DT_FLOAT
	Unk_8b4e7a                   DT_ENUM
	Unk_44bbb8e                  DT_INT
	TAttackRadius                DT_STRING_FORMULA
	Unk_3587b29                  DT_INT
	BIsApproachPower             DT_INT
	SnoPowerApproach             DT_SNO
	Unk_f70b0d                   DT_ENUM
	Unk_e65d245                  DT_GBID
	Unk_17dddfd                  DT_INT
	Unk_d897ba6                  ActorMovementPowerData
	EMovementStyleOverride       DT_ENUM
	EFacingStyleOverride         DT_ENUM
	Unk_6714077                  DT_INT
	BRequiresActorTarget         DT_INT
	Unk_805ebfc                  DT_INT
	Unk_b4ad6e7                  DT_INT
	ELOSCheck                    DT_ENUM
	Unk_ea58c49                  DT_FLOAT
	Unk_692752d                  DT_FLOAT
	Unk_eb84fbe                  DT_INT
	BInvisibleDuring             DT_INT
	BInvulnerableDuring          DT_INT
	BUntargetableDuring          DT_INT
	BCannotDieDuring             DT_INT
	Unk_636a66b                  DT_INT
	Unk_160bc26                  DT_INT
	BIgnoreGravityDuring         DT_INT
	Unk_7a416a6                  DT_INT
	ArCCInfo                     DT_FIXEDARRAY[*PowerCrowdControlInfo]
	Unk_6afae78                  DT_INT
	SnoClassRequirement          DT_SNO
	SnoSkillRequirement          DT_SNO
	SnoItemRequirement           DT_SNO
	SnoHeroConditionRequirement  DT_SNO
	BUsableInTown                DT_INT
	BUsableInCombat              DT_INT
	BIsCraftItemName             DT_INT
	Unk_744a4fd                  DT_INT
	Unk_a8611dd                  DT_INT
	Unk_365e3c2                  DT_INT
	Unk_83d96df                  DT_INT
	Unk_9aaab79                  DT_INT
	Unk_b15bf7f                  DT_INT
	Unk_8fe39cf                  DT_UINT
	BPassabilityDuringEnabled    DT_INT
	BPassabilityDestEnabled      DT_INT
	ArCollisionSettings          DT_FIXEDARRAY[*CollisionSettings]
	FCannotLMBAssign             DT_INT
	FMouseAssignable             DT_INT
	FHotbarAssignable            DT_INT
	Unk_a75e08a                  DT_INT
	Unk_89134c5                  DT_INT
	HIconNormal                  DT_UINT
	HIconMouseover               DT_UINT
	HIconPushed                  DT_UINT
	HIconInactive                DT_UINT
	HIconInactiveMouseover       DT_UINT
	HIconRound                   DT_UINT
	Unk_ca85a0a                  DT_GBID
	Unk_159fc50                  DT_UINT
	Unk_cecdfc8                  DT_INT
	Unk_210b5d5                  DT_INT
	Unk_1c331c3                  DT_INT
	Unk_3f7ac9c                  DT_INT
	Unk_36a68ce                  DT_INT
	ArHitReactionOverrides       DT_VARIABLEARRAY[*HitReactionOverride]
	ArBuffs                      DT_VARIABLEARRAY[*PowerBuffDefinition]
	PtScriptFormulas             DT_VARIABLEARRAY[*ScriptFormulaInfo]
	NFormulaCount                DT_INT
	ArPayloads                   DT_VARIABLEARRAY[*PowerPayloadDefinition]
	ArMods                       DT_VARIABLEARRAY[*PowerMod]
	SnoCastingEffectGroup        DT_SNO
	SnoAutoCastingEffectGroup    DT_SNO
	Unk_c5a8e20                  HardpointLink
	FlCastingEffectGroupDuration DT_FLOAT
	ArCastingEffectOverrides     DT_VARIABLEARRAY[*PowerCastingEffectOverride]
	ArPetSpawns                  DT_VARIABLEARRAY[*PowerPetSpawn]
}

func (t *PowerDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzInternalName.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.BDefensive.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bd561bf.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPrimaryTag.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSkillTags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESkillCat.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECategory.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2b4eb99.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a3836e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPowerAnimMovement.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1450715.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.BChannelled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.BChannelledMovement.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.BAutoChannelled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3837f2a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6c6eb6b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c19db61.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9aad0d1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsBasicAttack.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsPassive.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_30531f7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.BAimedPower.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1f1fcc.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPowerFallback.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49572b0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPowerTargetingType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d8567e5.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEnchantmentPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+244, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMountedRiderPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.BUsesWeaponExpertise.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+252, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fca3b69.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIgnoreSkillRanks.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerAnimationOverride.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.BPreplayAnimation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_99e0ced.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAnimationLayer.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3616d3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_41a3d22.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+284, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2df4181.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.BSetLookAtTarget.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+292, io.SeekStart); err != nil {
		return err
	}
	if err := t.BForceSheath.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_48531b6.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArEndingPreplayed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+328, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPhaseInitialization.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+352, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPhases.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+376, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_92fea1c.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+380, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8cdde38.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+384, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArFacingWindows.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+400, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4bf03ff.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+408, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAttackSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+440, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6deb090.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+444, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ed2bdad.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+448, io.SeekStart); err != nil {
		return err
	}
	if err := t.BOverkillStacked.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+452, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7a86b64.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+456, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDamageType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+460, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_752edeb.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+464, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCombatEffectChance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+496, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7cfb7ba.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+528, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_923b5fb.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+532, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e517f6f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+536, io.SeekStart); err != nil {
		return err
	}
	if err := t.EHitSound.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+540, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4d7691e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+552, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1a5392.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+556, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_97eadb8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+560, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5e1a52d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+564, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCaptionsInside.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+568, io.SeekStart); err != nil {
		return err
	}
	if err := t.EShapeshiftForm.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+576, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArResourceCosts.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+592, io.SeekStart); err != nil {
		return err
	}
	if err := t.THealthCost.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+624, io.SeekStart); err != nil {
		return err
	}
	if err := t.TChargeCost.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+656, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMaxCharges.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+688, io.SeekStart); err != nil {
		return err
	}
	if err := t.TRechargeTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+720, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCooldownTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+752, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b26a921.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+784, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_86a6e05.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+816, io.SeekStart); err != nil {
		return err
	}
	if err := t.BTargetGroundOnly.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+820, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fc01065.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+824, io.SeekStart); err != nil {
		return err
	}
	if err := t.BWalksCloserIfOutOfRange.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+828, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCanSteer.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+832, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_67b65e9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+836, io.SeekStart); err != nil {
		return err
	}
	if err := t.BAutoTargetingEnabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+840, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_42057f3.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+844, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fbccf7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+848, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7cdc8cb.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+852, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_37d51de.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+856, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_be5487b.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+860, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_66bbae7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+864, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5efc45c.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+868, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b9ffd91.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+872, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4d9cc58.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+876, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_950971c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+880, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_79e716a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+884, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ead9008.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+888, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_767809.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+892, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCastTargetAllies.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+896, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCastTargetEnemies.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+900, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7095076.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+904, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCastTargetNecroCorpsesOnly.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+936, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b9b985.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+968, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bcdb405.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+972, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6e40571.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+976, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_807540f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1008, io.SeekStart); err != nil {
		return err
	}
	if err := t.VAttributesResistFireValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1040, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e96cf25.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1044, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d8f7885.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1048, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8d0166c.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1052, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1539714.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1056, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e9ac57a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1060, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_61e06df.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1064, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_787b722.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1068, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b2d506d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1072, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8b4e7a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1076, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_44bbb8e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1080, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAttackRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3587b29.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1116, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsApproachPower.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1120, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerApproach.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f70b0d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e65d245.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 34,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_17dddfd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d897ba6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1256, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMovementStyleOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1260, io.SeekStart); err != nil {
		return err
	}
	if err := t.EFacingStyleOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1264, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6714077.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1268, io.SeekStart); err != nil {
		return err
	}
	if err := t.BRequiresActorTarget.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1272, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_805ebfc.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1276, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4ad6e7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1280, io.SeekStart); err != nil {
		return err
	}
	if err := t.ELOSCheck.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1284, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ea58c49.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1288, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_692752d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1292, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eb84fbe.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1296, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInvisibleDuring.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1300, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInvulnerableDuring.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1304, io.SeekStart); err != nil {
		return err
	}
	if err := t.BUntargetableDuring.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1308, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCannotDieDuring.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1312, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_636a66b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1316, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_160bc26.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1320, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIgnoreGravityDuring.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1324, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7a416a6.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1328, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCCInfo.UnmarshalD4(r, &Options{
		ArrayLength: 14,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2672, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6afae78.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2676, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoClassRequirement.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 74,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2680, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSkillRequirement.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 116,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2684, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItemRequirement.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2688, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoHeroConditionRequirement.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2692, io.SeekStart); err != nil {
		return err
	}
	if err := t.BUsableInTown.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2696, io.SeekStart); err != nil {
		return err
	}
	if err := t.BUsableInCombat.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2700, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsCraftItemName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2704, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_744a4fd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2708, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a8611dd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2712, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_365e3c2.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2716, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_83d96df.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2720, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9aaab79.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2724, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b15bf7f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2728, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8fe39cf.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2732, io.SeekStart); err != nil {
		return err
	}
	if err := t.BPassabilityDuringEnabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2736, io.SeekStart); err != nil {
		return err
	}
	if err := t.BPassabilityDestEnabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2740, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCollisionSettings.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2780, io.SeekStart); err != nil {
		return err
	}
	if err := t.FCannotLMBAssign.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2784, io.SeekStart); err != nil {
		return err
	}
	if err := t.FMouseAssignable.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2788, io.SeekStart); err != nil {
		return err
	}
	if err := t.FHotbarAssignable.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2792, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a75e08a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2796, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_89134c5.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2800, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIconNormal.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2804, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIconMouseover.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2808, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIconPushed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2812, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIconInactive.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2816, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIconInactiveMouseover.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2820, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIconRound.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2824, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ca85a0a.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 23,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2828, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_159fc50.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2832, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cecdfc8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2836, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_210b5d5.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2840, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1c331c3.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2844, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3f7ac9c.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2848, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_36a68ce.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2856, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArHitReactionOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2872, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArBuffs.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2888, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtScriptFormulas.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2904, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFormulaCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2912, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPayloads.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2928, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArMods.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2944, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCastingEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2948, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAutoCastingEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2952, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c5a8e20.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2960, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlCastingEffectGroupDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2968, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCastingEffectOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2984, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPetSpawns.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3000, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnAttackBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnAttackBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ACDInventoryUpdateActorSNO struct {
	THeader  RequiredMessageHeader
	Ann      DT_ACD_NETWORK_NAME
	SnoActor DT_SNO
}

func (t *ACDInventoryUpdateActorSNO) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NamedGizmoData struct {
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
}

func (t *NamedGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionIsPet struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType      DT_UINT
	BInverse    DT_INT
	DwPad       DT_UINT
	ESubject    DT_ENUM
	Unk_d8caf57 DT_INT
	ArPetType   DT_VARIABLEARRAY[*DT_GBID]
}

func (t *PowerConditionIsPet) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d8caf57.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPetType.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 23,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UILayoutEntries struct {
	SnoUI              DT_SNO
	SzCutoffWrite      DT_CHARARRAY
	SzScreenName       DT_CHARARRAY
	EGroup             DT_ENUM
	ELayer             DT_ENUM
	EPlatform          DT_ENUM
	SnoWorld           DT_SNO
	SzCameraMarkerName DT_CHARARRAY
	EBanner            DT_ENUM
	DwAttributeFlags   DT_UINT
}

func (t *UILayoutEntries) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoUI.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 46,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzCutoffWrite.UnmarshalD4(r, &Options{
		ArrayLength: 256,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzScreenName.UnmarshalD4(r, &Options{
		ArrayLength: 256,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+516, io.SeekStart); err != nil {
		return err
	}
	if err := t.EGroup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+520, io.SeekStart); err != nil {
		return err
	}
	if err := t.ELayer.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+524, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPlatform.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+528, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+532, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzCameraMarkerName.UnmarshalD4(r, &Options{
		ArrayLength: 128,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+660, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBanner.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+664, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwAttributeFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+668, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerAmbientSoundData struct {
	// Inherits MarkerSplineData
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType                         DT_UINT
	DwPad                          DT_UINT
	EInterpolationMode             DT_ENUM
	Unk_a3f1699                    DT_FLOAT
	Unk_ecc987f                    DT_ENUM
	FlCapsuleLength                DT_FLOAT
	FClosedSpline                  DT_INT
	SnoCampaignVisibilityCondition DT_SNO
	Unk_4a4ab0e                    DT_VARIABLEARRAY[*DT_VECTOR3D]
}

func (t *MarkerAmbientSoundData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EInterpolationMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a3f1699.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ecc987f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlCapsuleLength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FClosedSpline.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCampaignVisibilityCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4a4ab0e.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PathLink struct {
	SzLinkName  DT_UINT
	TPathHandle MarkerHandle
	EFollowMode DT_ENUM
	DwFlags     DT_UINT
}

func (t *PathLink) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLinkName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPathHandle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.EFollowMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MapRevealWorldMessage struct {
	THeader  RequiredMessageHeader
	IdSWorld DT_SHARED_SERVER_DATA_ID
}

func (t *MapRevealWorldMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSWorld.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_159502df struct {
	// Inherits Type_7e418ba8
	// Inherits PolymorphicBase
	DwType       DT_UINT
	Unk_2de4987  DT_UINT
	ArConditions DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	BEnd         DT_INT
	DwPad        DT_UINT
}

func (t *Type_159502df) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2de4987.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEnd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Currency struct {
	ECurrencyType   DT_ENUM
	NCurrencyAmount DT_INT64
}

func (t *Currency) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECurrencyType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCurrencyAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalBase struct {
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
}

func (t *GlobalBase) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalData struct {
	// Inherits GlobalBase
	// Inherits PolymorphicBase
	DwType                                  DT_UINT
	DwPad                                   DT_UINT
	ArLookVariants                          DT_VARIABLEARRAY[*LookVariant]
	ArShaderMapOverrides                    DT_VARIABLEARRAY[*ShaderMapOverride]
	Unk_156a14c                             DT_VARIABLEARRAY[*DT_INT]
	Unk_6759f02                             DT_VARIABLEARRAY[*DT_INT]
	Unk_e2e2917                             DT_FLOAT
	Unk_e2fe2ea                             DT_FLOAT
	Unk_95f203b                             DT_FLOAT
	Unk_db1c22b                             DT_FLOAT
	Unk_b5ebbb2                             DT_FLOAT
	Unk_5ccf7cc                             DT_FLOAT
	Unk_e7d727                              DT_FLOAT
	Unk_51c96d6                             DT_FLOAT
	Unk_ecd99ed                             DT_FLOAT
	Unk_51c95d8                             DT_FLOAT
	Unk_ec03fd                              DT_FLOAT
	Unk_6032a24                             DT_FLOAT
	Unk_d247cf8                             DT_INT
	Unk_eea9f7c                             DT_INT
	Unk_8472630                             DT_FLOAT
	Unk_8f17798                             DT_FLOAT
	Unk_7954efd                             DT_FLOAT
	Unk_1a40d94                             DT_FLOAT
	Unk_7954dff                             DT_FLOAT
	Unk_76813f3                             DT_FLOAT
	Unk_60b79b9                             DT_INT
	Unk_eec6296                             DT_FLOAT
	Unk_917777c                             DT_INT
	Unk_318127b                             DT_FLOAT
	Unk_f143013                             DT_FLOAT
	Unk_33296c0                             DT_FLOAT
	Unk_9ca3dcb                             DT_FLOAT
	Unk_18a668d                             DT_FLOAT
	Unk_b0ffbbf                             DT_FLOAT
	Unk_f54712c                             DT_FLOAT
	Unk_d6395ff                             DT_FLOAT
	Unk_854ceeb                             DT_FLOAT
	Unk_bb4f409                             DT_FLOAT
	Unk_ee3875c                             DT_FLOAT
	Unk_8b202cb                             DT_INT
	Unk_b704b85                             DT_INT
	Unk_f2db3a4                             DT_FIXEDARRAY[*DT_FLOAT]
	Unk_ebfec0b                             DT_FLOAT
	Unk_3fe50bb                             DT_INT
	Unk_5d77ea6                             DT_UINT
	Unk_5e4581e                             DT_UINT
	SnoStartingSubzone                      DT_SNO
	Unk_7499899                             DT_SNO
	ArStartLocationNames                    DT_VARIABLEARRAY[*StartLocationName]
	Unk_8aac9ef                             DT_STRING_FORMULA
	FlSellPricePercent                      DT_FLOAT
	FlPlayerPowerCacheTimeoutNormal         DT_FLOAT
	FlPlayerPowerCacheTimeoutInterrupt      DT_FLOAT
	Unk_d38759a                             DT_FLOAT
	Unk_dfccabc                             DT_FLOAT
	Unk_e9ca4ed                             DT_FLOAT
	Unk_e03c38a                             DT_FLOAT
	Unk_5b6dc2d                             DT_FLOAT
	Unk_f3679e3                             DT_FLOAT
	Unk_4f5a9e3                             DT_FLOAT
	Unk_44ba742                             DT_INT
	Unk_1636dfe                             DT_FLOAT
	Unk_8835be2                             DT_FLOAT
	Unk_a70ae94                             DT_FLOAT
	Unk_43addd1                             DT_FLOAT
	Unk_6a55fc4                             DT_UINT
	Unk_f1891b9                             DT_UINT
	NUIBusyTime                             DT_UINT
	NTrialVersionLevelCap                   DT_INT
	Unk_579747d                             DT_FLOAT
	Unk_17db22a                             DT_FLOAT
	Unk_b740dfc                             DT_FLOAT
	Unk_8aec133                             DT_FLOAT
	FlHirelingDiminishedBonusRatio          DT_FLOAT
	Unk_882ccc8                             DT_FLOAT
	FlMonsterCritDamageScalar               DT_FLOAT
	FlPlayerCritDamageScalar                DT_FLOAT
	FlPvPMaxCritDamagePercent               DT_FLOAT
	Unk_66251ff                             DT_FLOAT
	Unk_251341c                             DT_FLOAT
	Unk_352d6bc                             DT_FLOAT
	Unk_e248d9d                             DT_FLOAT
	Unk_51a7ab2                             DT_FLOAT
	Unk_ed83bad                             DT_FLOAT
	Unk_d37d3d4                             DT_FLOAT
	NStashSlotsCost                         DT_INT
	NStashTabCost                           DT_FIXEDARRAY[*DT_INT]
	NClanBankTabCost                        DT_FIXEDARRAY[*DT_INT]
	Unk_a9e9f16                             DT_STRING_FORMULA
	Unk_ea4532f                             DT_STRING_FORMULA
	NItemPowerOffset                        DT_INT
	Unk_62802da                             DT_INT
	Unk_3c98a40                             DT_INT
	Unk_21a6a21                             DT_INT
	Unk_60132bb                             DT_INT
	ArStartingParagonGlyphs                 DT_VARIABLEARRAY[*DT_SNO]
	ArParagonPowerBudgetMultiplier          DT_FIXEDARRAY[*DT_FLOAT]
	Unk_4b766ae                             DT_FLOAT
	Unk_5a673c4                             DT_FLOAT
	Unk_4a89716                             DT_FLOAT
	Unk_b491be3                             DT_FLOAT
	Unk_e762b56                             DT_FLOAT
	Unk_2e11fb8                             DT_FLOAT
	Unk_9a0ad1d                             DT_FLOAT
	Unk_6e8cb51                             DT_FLOAT
	Unk_4d68111                             DT_FLOAT
	Unk_d2ab6e9                             DT_FLOAT
	Unk_7c75a6b                             DT_FIXEDARRAY[*DT_INT]
	Unk_6b670be                             DT_FLOAT
	Unk_13c636                              DT_FLOAT
	Unk_fa7eefd                             DT_UINT
	Unk_7176abf                             DT_INT
	Unk_e2e6a87                             DT_FIXEDARRAY[*Type_7de8fcbd]
	Unk_f78b3b9                             Type_7de8fcbd
	Unk_3761f84                             Type_7de8fcbd
	Unk_7452a15                             DT_INT
	Unk_4b7eea0                             DT_INT
	Unk_3890cf4                             DT_FLOAT
	FlLegendaryAffixTwoHandBonus            DT_FLOAT
	FlLegendaryAffixAmuletBonus             DT_FLOAT
	FlSacredAffixScalarOffense              DT_FLOAT
	FlSacredAffixScalarDefense              DT_FLOAT
	FlAncestralAffixScalarOffense           DT_FLOAT
	FlAncestralAffixScalarDefense           DT_FLOAT
	Unk_4f066d9                             DT_INT
	Unk_7393144                             DT_INT
	Unk_74a1c7                              DT_INT
	Unk_7f687df                             DT_INT
	Unk_f484748                             DT_INT
	Unk_1db2e99                             DT_INT
	Unk_4c46cf0                             DT_INT
	Unk_a3a3543                             DT_FIXEDARRAY[*DT_INT]
	Unk_598e0c                              DT_FIXEDARRAY[*DT_INT]
	Unk_c23d2e4                             DT_FIXEDARRAY[*DT_INT]
	Unk_2a720cb                             DT_INT
	Unk_487fe77                             DT_INT
	Unk_57661a3                             DT_RANGE[*DT_FLOAT]
	Unk_6affe04                             DT_FLOAT
	Unk_a96b1a9                             DT_FIXEDARRAY[*Type_dff70e83]
	Unk_ea22f36                             DT_FIXEDARRAY[*DT_SNO]
	FlHealthBase                            DT_FLOAT
	Unk_1e39848                             DT_FLOAT
	Unk_f00d070                             DT_FLOAT
	Unk_7298101                             Type_14a42c17
	Unk_6bc634b                             Type_14a42c17
	Unk_a7e753e                             Type_14a42c17
	Unk_fcfc4af                             Type_14a42c17
	Unk_23a17b                              Type_14a42c17
	Unk_57c5927                             DT_FLOAT
	Unk_54fe8b                              DT_FLOAT
	Unk_ce51b5a                             DT_FLOAT
	Unk_3f05457                             DT_FLOAT
	Unk_5b6bd4f                             DT_FLOAT
	Unk_bfde6a2                             DT_FLOAT
	Unk_fc1e7ff                             DT_FLOAT
	Unk_551056e                             DT_FLOAT
	Unk_d616ce9                             DT_FLOAT
	Unk_28a2990                             DT_FLOAT
	Unk_d20a438                             DT_FLOAT
	Unk_a50d36c                             DT_FLOAT
	Unk_475b452                             DT_FLOAT
	Unk_b982fbb                             DT_FLOAT
	Unk_867f53b                             DT_FLOAT
	Unk_c02087d                             DT_FLOAT
	Unk_fa5d56b                             DT_FLOAT
	Unk_1e91b8e                             DT_FLOAT
	Unk_468a2dc                             DT_FLOAT
	Unk_3debe95                             DT_FLOAT
	Unk_e8e5c04                             DT_FLOAT
	FlVulnerableDamageBonus                 DT_FLOAT
	Unk_2c3c144                             DT_FLOAT
	Unk_e82db97                             DT_FLOAT
	Unk_c097750                             DT_FLOAT
	Unk_90f2fe1                             DT_FLOAT
	Unk_ad10637                             DT_FLOAT
	Unk_6e4eda1                             DT_FLOAT
	Unk_f345457                             DT_FLOAT
	Unk_ad76909                             DT_FLOAT
	Unk_685b23e                             DT_FLOAT
	FlPlayerErrorCooldownTime               DT_FLOAT
	Unk_71fe9f5                             DT_INT
	Unk_8a3b54b                             DT_FLOAT
	Unk_c6c6501                             DT_FLOAT
	Unk_be2dc46                             DT_FLOAT
	Unk_1a3078b                             DT_INT
	Unk_8c182bc                             DT_FLOAT
	Unk_28e5246                             DT_FLOAT
	Unk_9f1d1ec                             DT_FLOAT
	NCorpseResurrectionMaxCharges           DT_INT
	NCorpseResurrectionChargeRegenTime      DT_INT
	Unk_745ffba                             DT_FLOAT
	Unk_9021966                             DT_FLOAT
	FlRestXPBonusPercent                    DT_FLOAT
	Unk_db4052a                             DT_FLOAT
	Unk_278b9d4                             DT_FLOAT
	Unk_9813a63                             DT_FLOAT
	Unk_ebe84a2                             DT_FLOAT
	Unk_9175934                             DT_FLOAT
	Unk_25263a2                             DT_FLOAT
	Unk_de04b4c                             DT_FLOAT
	Unk_a118f6a                             DT_VARIABLEARRAY[*DT_RGBACOLOR]
	TAssetLists                             DT_FIXEDARRAY[*AssetList]
	FlVoteKickAttemptDelay                  DT_FLOAT
	FlVoteKickSuccessfulDelay               DT_FLOAT
	Unk_e9980af                             DT_FLOAT
	Unk_d658d4f                             DT_FLOAT
	FlCombatRadius                          DT_FLOAT
	Unk_a04a7d5                             DT_FLOAT
	FlTargetAbandonTime                     DT_FLOAT
	Unk_e24f012                             DT_FLOAT
	Unk_a26a857                             DT_FLOAT
	Unk_9a3861e                             DT_UINT
	Unk_27a4780                             DT_FLOAT
	Unk_d25790                              DT_FLOAT
	Unk_828940a                             DT_FLOAT
	Unk_626a640                             DT_FLOAT
	Unk_b05e753                             DT_FLOAT
	Unk_df8e743                             DT_FLOAT
	Unk_d3fa9ff                             DT_FLOAT
	Unk_948a837                             DT_FLOAT
	Unk_92fe267                             DT_FLOAT
	Unk_d6fd7a3                             DT_FLOAT
	Unk_eb11826                             DT_FLOAT
	Unk_195fb76                             DT_FLOAT
	Unk_caaf312                             DT_FLOAT
	Unk_a993b17                             DT_FLOAT
	Unk_4811560                             DT_FLOAT
	FlControllerAutoTargetingCloseRange     DT_FLOAT
	Unk_87d174a                             DT_FLOAT
	Unk_c37e6c9                             DT_FLOAT
	Unk_8891df5                             DT_FLOAT
	Unk_d552313                             DT_FLOAT
	Unk_ff1d407                             DT_FLOAT
	Unk_70ec1                               DT_INT
	Unk_3686ba1                             DT_FLOAT
	Unk_e8448d                              DT_FLOAT
	Unk_4f238e9                             DT_FLOAT
	Unk_d6be782                             DT_FLOAT
	Unk_98c772                              DT_FLOAT
	Unk_26c4feb                             DT_FLOAT
	Unk_9badb6d                             DT_FLOAT
	Unk_87209a6                             DT_FLOAT
	Unk_c8e8eaa                             DT_FLOAT
	Unk_5c72c6c                             DT_FLOAT
	Unk_273be4d                             DT_FLOAT
	Unk_911c30a                             DT_FLOAT
	Unk_e34a591                             DT_FLOAT
	FlControllerMoveFacingZone              DT_FLOAT
	Unk_2b6ca3                              DT_FLOAT
	Unk_7b71733                             DT_FLOAT
	FlControllerMaxMoveThreshold            DT_FLOAT
	FlControllerEvadeZone                   DT_FLOAT
	FlControllerReboundDetectionZone        DT_FLOAT
	Unk_bd6dd59                             DT_FLOAT
	Unk_ee4e38c                             DT_FLOAT
	Unk_b01ac6a                             DT_FLOAT
	Unk_e0fb29d                             DT_FLOAT
	NControllerReboundDuration              DT_INT
	FlFacingMult                            DT_FLOAT
	Unk_eb3e3e1                             DT_FLOAT
	Unk_724e40                              DT_FLOAT
	FlControllerNormalTurnSpeed             DT_FLOAT
	Unk_867800f                             DT_FLOAT
	Unk_bce77fe                             DT_FLOAT
	Unk_f14295                              DT_FLOAT
	Unk_4639a17                             DT_FLOAT
	Unk_7d8ae03                             DT_FLOAT
	Unk_13e7c92                             DT_FLOAT
	Unk_c8eb270                             DT_FLOAT
	Unk_dac13bc                             DT_FLOAT
	Unk_73807f8                             DT_FLOAT
	Unk_a87e6d8                             DT_FLOAT
	FlLocalCoopDropsPerAdditionalPlayer     DT_FLOAT
	FlLocalCoopMagicFindBonusPerPlayer      DT_FLOAT
	Unk_8b7c556                             DT_FLOAT
	Unk_7c557f                              DT_FLOAT
	Unk_2d378f1                             DT_FLOAT
	Unk_d65b306                             DT_FLOAT
	Unk_6330331                             DT_FLOAT
	Unk_590a656                             DT_FLOAT
	Unk_4e80a81                             DT_FLOAT
	Unk_ec5016f                             DT_FLOAT
	Unk_91f0fa5                             DT_FLOAT
	Unk_2870b2a                             DT_FLOAT
	Unk_90af455                             DT_FLOAT
	Unk_698cc10                             DT_FLOAT
	Unk_89086bb                             DT_FLOAT
	Unk_13f115e                             DT_FLOAT
	Unk_5dd5789                             DT_FLOAT
	Unk_52d64ee                             DT_FLOAT
	Unk_8a3122b                             DT_FLOAT
	Unk_644bf96                             DT_FLOAT
	Unk_6a602d7                             DT_FLOAT
	Unk_c68b42                              DT_FLOAT
	Unk_77f6d53                             DT_FLOAT
	Unk_da484be                             DT_FLOAT
	Unk_1b9aeed                             DT_FLOAT
	FlRetreatSpeed                          DT_FLOAT
	Unk_6f5cf67                             DT_FLOAT
	Unk_90ec4a9                             DT_FLOAT
	Unk_41e36fe                             DT_FLOAT
	FlRetreatRadius                         DT_FLOAT
	Unk_f9dbb21                             DT_FLOAT
	Unk_aca15d2                             DT_FLOAT
	Unk_dfa10f0                             DT_FLOAT
	Unk_54c9bdd                             DT_FLOAT
	Unk_1495643                             DT_FLOAT
	Unk_b905edc                             DT_FLOAT
	Unk_85c8520                             DT_FLOAT
	Unk_9f06f92                             DT_FLOAT
	Unk_e99eb94                             DT_FLOAT
	Unk_6b2748d                             DT_FLOAT
	Unk_30be3a9                             DT_FLOAT
	SnoChampionEffectGroup                  DT_SNO
	Unk_89a383a                             DT_FLOAT
	Unk_c31c69e                             DT_FLOAT
	Unk_d3c532d                             DT_FLOAT
	Unk_8c04671                             DT_FLOAT
	Unk_25d5380                             DT_FLOAT
	Unk_359472b                             DT_FLOAT
	Unk_6691247                             DT_FLOAT
	Unk_b8b775b                             DT_FLOAT
	Unk_344205b                             DT_FLOAT
	Unk_86f4d6                              DT_FIXEDARRAY[*DT_SNO]
	Unk_6446242                             DT_FIXEDARRAY[*DT_UINT]
	Unk_e8cf406                             DT_FLOAT
	Unk_f5138b2                             DT_FLOAT
	Unk_3de44f8                             DT_FLOAT
	Unk_d8774f9                             DT_FLOAT
	Unk_e8d16cb                             DT_FLOAT
	Unk_c8658af                             DT_FLOAT
	Unk_379ded                              DT_FLOAT
	Unk_c8501c8                             DT_FLOAT
	Unk_dddf871                             DT_FLOAT
	Unk_f07a0ad                             DT_FLOAT
	Unk_7b3aa95                             DT_FLOAT
	Unk_e85b37f                             DT_FLOAT
	Unk_ace0d77                             DT_FLOAT
	Unk_2b5e2e3                             DT_FLOAT
	Unk_ace303c                             DT_FLOAT
	Unk_1f600c0                             DT_FLOAT
	Unk_49be57e                             DT_FLOAT
	Unk_500aee9                             DT_FLOAT
	Unk_ea9deea                             DT_FLOAT
	Unk_36be83e                             DT_FLOAT
	Unk_8a0e446                             DT_FLOAT
	Unk_ac6ccf0                             DT_FLOAT
	Unk_ea216af                             DT_FLOAT
	ArCrowdControlEffects                   DT_FIXEDARRAY[*CrowdControlEffects]
	Unk_c84a3db                             DT_FLOAT
	Unk_fc90e9d                             DT_FLOAT
	FlChillDuration                         DT_FLOAT
	FlFrozenDuration                        DT_FLOAT
	Unk_66303a6                             DT_FLOAT
	TConfuseRadius                          DT_RANGE[*DT_INT]
	Unk_421e1a                              DT_FLOAT
	Unk_fd978e4                             DT_FLOAT
	Unk_5e484f3                             DT_FLOAT
	Unk_4ad06fe                             DT_FLOAT
	Unk_95a2eb5                             DT_FLOAT
	Unk_194621f                             DT_FLOAT
	Unk_7796b0e                             DT_FLOAT
	Unk_dc51799                             DT_FLOAT
	Unk_c706a2a                             DT_FLOAT
	Unk_a6682f4                             DT_FLOAT
	Unk_97a5903                             DT_FLOAT
	Unk_db530e                              DT_FLOAT
	Unk_2a2e4fd                             DT_FIXEDARRAY[*DT_FLOAT]
	Unk_47ab791                             DT_FLOAT
	Unk_1152bf4                             DT_FLOAT
	Unk_fbf84b1                             DT_FLOAT
	Unk_47f08e2                             DT_FIXEDARRAY[*DT_FLOAT]
	Unk_74d0fea                             DT_INT
	Unk_2af2ec3                             DT_INT
	Unk_3a14364                             DT_INT
	Unk_c5cd637                             DT_INT
	Unk_d85b358                             DT_INT
	Unk_463f23c                             DT_FIXEDARRAY[*DT_INT]
	ArWorldTiers                            DT_FIXEDARRAY[*WorldTierData]
	ArFlippyHangTime                        DT_FIXEDARRAY[*DT_FLOAT]
	Unk_c9c1b78                             DT_FIXEDARRAY[*DT_SNO]
	Unk_765a638                             DT_FLOAT
	Unk_d12a366                             DT_FLOAT
	Unk_3ab153e                             DT_FLOAT
	Unk_bd7bb9e                             DT_FLOAT
	Unk_ab69427                             DT_FLOAT
	Unk_7ebfadb                             DT_FIXEDARRAY[*DT_SNO]
	Unk_4a7cb26                             DT_FLOAT
	Unk_a1f16f1                             DT_FLOAT
	Unk_efdb522                             DT_FLOAT
	Unk_42948c4                             DT_FLOAT
	Unk_60e5526                             DT_FLOAT
	Unk_29951b5                             DT_FLOAT
	Unk_5d34691                             DT_FLOAT
	Unk_237d1fa                             DT_FLOAT
	Unk_38a54aa                             DT_UINT
	NDRLGSeedType                           DT_UINT
	Unk_71d473f                             DT_FLOAT
	Unk_7a4dcca                             DT_FLOAT
	Unk_97bf60d                             DT_FLOAT
	Unk_73e7909                             DT_FLOAT
	Unk_d4101f7                             DT_FLOAT
	Unk_5593852                             DT_FLOAT
	Unk_92f1cc9                             DT_SNO
	SnoMountPaperdollWorld                  DT_SNO
	Unk_5af8b62                             DT_UINT
	Unk_eb1d100                             DT_FLOAT
	Unk_6bf80d8                             DT_FLOAT
	Unk_6396ebc                             DT_FLOAT
	Unk_fab7259                             DT_FLOAT
	Unk_4858565                             DT_FLOAT
	Unk_bd84137                             DT_FLOAT
	Unk_95c4279                             DT_FLOAT
	Unk_a42ecfd                             DT_FLOAT
	Unk_b7f7d87                             DT_FLOAT
	Unk_3af447e                             DT_FLOAT
	Unk_ba50d0f                             DT_FLOAT
	Unk_5c53403                             DT_FLOAT
	Unk_de13a01                             DT_FLOAT
	Unk_84adb3a                             DT_FLOAT
	Unk_f804cf9                             DT_FLOAT
	Unk_95cc949                             DT_FLOAT
	Unk_8d7337                              DT_FLOAT
	Unk_d714948                             DT_FLOAT
	Unk_4e0583b                             DT_FLOAT
	NTransmogSnapshotCosts                  DT_FIXEDARRAY[*DT_INT]
	Unk_fd42f01                             DT_VARIABLEARRAY[*DT_SNO]
	Unk_91356ce                             DT_FLOAT
	Unk_4ab0243                             DT_INT
	Unk_ab4a88e                             DT_INT
	Unk_a9e4262                             DT_INT
	Unk_bc34342                             DT_INT
	Unk_b11b51b                             DT_FLOAT
	Unk_43088a0                             DT_FIXEDARRAY[*Type_7535b2ad]
	Unk_3021a92                             DT_UINT
	Unk_496cffb                             DT_UINT
	Unk_56d4995                             DT_FLOAT
	ArCurrencyCaps                          DT_FIXEDARRAY[*DT_INT64]
	Unk_606852d                             Type_3b00e8b9
	Unk_bf59715                             DT_VARIABLEARRAY[*ActorEffectData]
	Unk_2bb7f27                             DT_FLOAT
	Unk_50c5dba                             DT_FLOAT
	Unk_a19cbf3                             DT_FLOAT
	FlPowerEffectIntensityPerSkillRank      DT_FLOAT
	FlMaxPowerEffectIntensityFromSkillRanks DT_FLOAT
	Unk_57c5af4                             DT_FLOAT
	Unk_7125533                             DT_VARIABLEARRAY[*ScalarFunctionFormula]
	Unk_5beabc1                             DT_FLOAT
	Unk_72ee1ae                             DT_FLOAT
	Unk_b59ed1                              DT_FLOAT
	Unk_38b5fed                             DT_FLOAT
	Unk_dbc6f0d                             DT_UINT
	Unk_9ea22ec                             DT_UINT
	Unk_9155d6b                             DT_INT
	Unk_b1d46f8                             DT_INT
	Unk_9f4060e                             DT_FLOAT
	Unk_2cbcb69                             DT_FLOAT
	Unk_603d082                             DT_FLOAT
	Unk_c20677a                             DT_SNO
	Unk_bad483c                             DT_FLOAT
	Unk_f883e95                             DT_FLOAT
	Unk_ae661d1                             DT_FLOAT
}

func (t *GlobalData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArLookVariants.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArShaderMapOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_156a14c.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6759f02.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e2e2917.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e2fe2ea.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_95f203b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_db1c22b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b5ebbb2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5ccf7cc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e7d727.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_51c96d6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ecd99ed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_51c95d8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ec03fd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6032a24.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d247cf8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eea9f7c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8472630.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8f17798.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7954efd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1a40d94.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7954dff.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_76813f3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_60b79b9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eec6296.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_917777c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_318127b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f143013.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_33296c0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9ca3dcb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_18a668d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b0ffbbf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f54712c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d6395ff.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_854ceeb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bb4f409.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ee3875c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8b202cb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b704b85.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f2db3a4.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+236, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ebfec0b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3fe50bb.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+244, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5d77ea6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5e4581e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+252, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoStartingSubzone.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7499899.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArStartLocationNames.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8aac9ef.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+312, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSellPricePercent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+316, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPlayerPowerCacheTimeoutNormal.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+320, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPlayerPowerCacheTimeoutInterrupt.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+324, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d38759a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+328, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dfccabc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+332, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e9ca4ed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+336, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e03c38a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+340, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5b6dc2d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+344, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f3679e3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+348, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4f5a9e3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+352, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_44ba742.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+356, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1636dfe.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+360, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8835be2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+364, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a70ae94.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+368, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_43addd1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+372, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6a55fc4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+376, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f1891b9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+380, io.SeekStart); err != nil {
		return err
	}
	if err := t.NUIBusyTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+384, io.SeekStart); err != nil {
		return err
	}
	if err := t.NTrialVersionLevelCap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+388, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_579747d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+392, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_17db22a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+396, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b740dfc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+400, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8aec133.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+404, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHirelingDiminishedBonusRatio.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+408, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_882ccc8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+412, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMonsterCritDamageScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+416, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPlayerCritDamageScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+420, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPvPMaxCritDamagePercent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+424, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_66251ff.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+428, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_251341c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+432, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_352d6bc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+436, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e248d9d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+440, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_51a7ab2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+444, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ed83bad.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+448, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d37d3d4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+452, io.SeekStart); err != nil {
		return err
	}
	if err := t.NStashSlotsCost.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+456, io.SeekStart); err != nil {
		return err
	}
	if err := t.NStashTabCost.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+472, io.SeekStart); err != nil {
		return err
	}
	if err := t.NClanBankTabCost.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+496, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a9e9f16.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+528, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ea4532f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+560, io.SeekStart); err != nil {
		return err
	}
	if err := t.NItemPowerOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+564, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_62802da.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+568, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3c98a40.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+572, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_21a6a21.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+576, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_60132bb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+584, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArStartingParagonGlyphs.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 111,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+600, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArParagonPowerBudgetMultiplier.UnmarshalD4(r, &Options{
		ArrayLength: 11,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+644, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4b766ae.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+648, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5a673c4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+652, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4a89716.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+656, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b491be3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+660, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e762b56.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+664, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2e11fb8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+668, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a0ad1d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+672, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6e8cb51.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+676, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4d68111.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+680, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d2ab6e9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+684, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7c75a6b.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+696, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6b670be.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+700, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_13c636.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+704, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fa7eefd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+708, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7176abf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+712, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e2e6a87.UnmarshalD4(r, &Options{
		ArrayLength: 8,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1000, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f78b3b9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1036, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3761f84.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1072, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7452a15.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1076, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4b7eea0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1080, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3890cf4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1084, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLegendaryAffixTwoHandBonus.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1088, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLegendaryAffixAmuletBonus.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1092, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSacredAffixScalarOffense.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1096, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSacredAffixScalarDefense.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1100, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAncestralAffixScalarOffense.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1104, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAncestralAffixScalarDefense.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1108, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4f066d9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7393144.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_74a1c7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7f687df.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f484748.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1db2e99.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4c46cf0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a3a3543.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_598e0c.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c23d2e4.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1196, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2a720cb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1200, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487fe77.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1204, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_57661a3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6affe04.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1216, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a96b1a9.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1288, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ea22f36.UnmarshalD4(r, &Options{
		ArrayLength: 8,
		Flags:       1,
		Group:       73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1320, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHealthBase.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1324, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1e39848.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1328, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f00d070.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1332, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7298101.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1360, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6bc634b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1388, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a7e753e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1416, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fcfc4af.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1444, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_23a17b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1472, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_57c5927.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1476, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54fe8b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1480, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ce51b5a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1484, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3f05457.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1488, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5b6bd4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1492, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bfde6a2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1496, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fc1e7ff.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1500, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_551056e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1504, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d616ce9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1508, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_28a2990.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1512, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d20a438.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1516, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a50d36c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1520, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_475b452.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1524, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b982fbb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1528, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_867f53b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1532, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c02087d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1536, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fa5d56b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1540, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1e91b8e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1544, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_468a2dc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1548, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3debe95.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1552, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e8e5c04.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1556, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlVulnerableDamageBonus.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1560, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2c3c144.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1564, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e82db97.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1568, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c097750.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1572, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_90f2fe1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1576, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ad10637.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1580, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6e4eda1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1584, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f345457.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1588, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ad76909.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1592, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_685b23e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1596, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPlayerErrorCooldownTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1600, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_71fe9f5.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1604, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8a3b54b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1608, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c6c6501.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1612, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_be2dc46.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1616, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1a3078b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1620, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8c182bc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1624, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_28e5246.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1628, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9f1d1ec.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1632, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCorpseResurrectionMaxCharges.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1636, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCorpseResurrectionChargeRegenTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1640, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_745ffba.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1644, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9021966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1648, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRestXPBonusPercent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1652, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_db4052a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1656, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_278b9d4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1660, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9813a63.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1664, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ebe84a2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1668, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9175934.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1672, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25263a2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1676, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_de04b4c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1680, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a118f6a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1696, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAssetLists.UnmarshalD4(r, &Options{
		ArrayLength: 9,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1840, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlVoteKickAttemptDelay.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1844, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlVoteKickSuccessfulDelay.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1848, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e9980af.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1852, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d658d4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1856, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlCombatRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1860, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a04a7d5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1864, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTargetAbandonTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1868, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e24f012.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1872, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a26a857.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1876, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a3861e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1880, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_27a4780.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1884, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d25790.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1888, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_828940a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1892, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_626a640.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1896, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b05e753.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1900, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_df8e743.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1904, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d3fa9ff.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1908, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_948a837.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1912, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_92fe267.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1916, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d6fd7a3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1920, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eb11826.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1924, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_195fb76.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1928, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_caaf312.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1932, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a993b17.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1936, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4811560.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1940, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlControllerAutoTargetingCloseRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1944, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87d174a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1948, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c37e6c9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1952, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8891df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1956, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d552313.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1960, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ff1d407.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1964, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_70ec1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1968, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3686ba1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1972, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e8448d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1976, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4f238e9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1980, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d6be782.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1984, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_98c772.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1988, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_26c4feb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1992, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9badb6d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1996, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87209a6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2000, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c8e8eaa.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2004, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5c72c6c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2008, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_273be4d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2012, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_911c30a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2016, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e34a591.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2020, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlControllerMoveFacingZone.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2024, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2b6ca3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2028, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7b71733.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2032, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlControllerMaxMoveThreshold.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2036, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlControllerEvadeZone.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2040, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlControllerReboundDetectionZone.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2044, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bd6dd59.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2048, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ee4e38c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2052, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b01ac6a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2056, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e0fb29d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2060, io.SeekStart); err != nil {
		return err
	}
	if err := t.NControllerReboundDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2064, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFacingMult.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2068, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eb3e3e1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2072, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_724e40.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2076, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlControllerNormalTurnSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2080, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_867800f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2084, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bce77fe.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2088, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f14295.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2092, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4639a17.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2096, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7d8ae03.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_13e7c92.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c8eb270.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2108, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dac13bc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_73807f8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a87e6d8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2120, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLocalCoopDropsPerAdditionalPlayer.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2124, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLocalCoopMagicFindBonusPerPlayer.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8b7c556.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7c557f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2d378f1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d65b306.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6330331.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_590a656.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4e80a81.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ec5016f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91f0fa5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2870b2a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_90af455.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2172, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_698cc10.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_89086bb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2180, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_13f115e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5dd5789.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2188, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_52d64ee.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2192, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8a3122b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2196, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_644bf96.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2200, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6a602d7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2204, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c68b42.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2208, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77f6d53.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_da484be.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2216, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1b9aeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2220, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRetreatSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2224, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6f5cf67.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2228, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_90ec4a9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2232, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_41e36fe.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2236, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRetreatRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2240, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f9dbb21.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2244, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aca15d2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2248, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dfa10f0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2252, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54c9bdd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2256, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1495643.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2260, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b905edc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2264, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_85c8520.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2268, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9f06f92.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2272, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e99eb94.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2276, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6b2748d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2280, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_30be3a9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2284, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChampionEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2288, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_89a383a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2292, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c31c69e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2296, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d3c532d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2300, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8c04671.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2304, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25d5380.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2308, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359472b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2312, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6691247.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2316, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b8b775b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2320, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_344205b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2324, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_86f4d6.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       1,
		Group:       14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2348, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6446242.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2372, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e8cf406.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2376, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f5138b2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2380, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3de44f8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2384, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d8774f9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2388, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e8d16cb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2392, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c8658af.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2396, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_379ded.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2400, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c8501c8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2404, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dddf871.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2408, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f07a0ad.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2412, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7b3aa95.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2416, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e85b37f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2420, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ace0d77.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2424, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2b5e2e3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2428, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ace303c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2432, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1f600c0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2436, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49be57e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2440, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_500aee9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2444, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ea9deea.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2448, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_36be83e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2452, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8a0e446.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2456, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ac6ccf0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2460, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ea216af.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2464, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCrowdControlEffects.UnmarshalD4(r, &Options{
		ArrayLength: 14,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2632, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c84a3db.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2636, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fc90e9d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2640, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlChillDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2644, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFrozenDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2648, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_66303a6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2652, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConfuseRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2660, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_421e1a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2664, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd978e4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2668, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5e484f3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2672, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4ad06fe.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2676, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_95a2eb5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2680, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_194621f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2684, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7796b0e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2688, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dc51799.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2692, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c706a2a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2696, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a6682f4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2700, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_97a5903.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2704, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_db530e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2708, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2a2e4fd.UnmarshalD4(r, &Options{
		ArrayLength: 14,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2764, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_47ab791.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2768, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1152bf4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2772, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fbf84b1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2776, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_47f08e2.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2788, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_74d0fea.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2792, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2af2ec3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2796, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3a14364.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2800, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c5cd637.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2804, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d85b358.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2808, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_463f23c.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2824, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArWorldTiers.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3688, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArFlippyHangTime.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3708, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c9c1b78.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
		Group:       27,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3728, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_765a638.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3732, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d12a366.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3736, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3ab153e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3740, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bd7bb9e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3744, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab69427.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3748, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7ebfadb.UnmarshalD4(r, &Options{
		ArrayLength: 8,
		Flags:       513,
		Group:       48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3780, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4a7cb26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3784, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a1f16f1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3788, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_efdb522.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3792, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_42948c4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3796, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_60e5526.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3800, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_29951b5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3804, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5d34691.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3808, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_237d1fa.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3812, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_38a54aa.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3816, io.SeekStart); err != nil {
		return err
	}
	if err := t.NDRLGSeedType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3820, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_71d473f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3824, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7a4dcca.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3828, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_97bf60d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3832, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_73e7909.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3836, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d4101f7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3840, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5593852.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3844, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_92f1cc9.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3848, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMountPaperdollWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3852, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5af8b62.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3856, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eb1d100.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3860, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6bf80d8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3864, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6396ebc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3868, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fab7259.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3872, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4858565.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3876, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bd84137.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3880, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_95c4279.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3884, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a42ecfd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3888, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b7f7d87.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3892, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3af447e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3896, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ba50d0f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3900, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5c53403.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3904, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_de13a01.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3908, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_84adb3a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3912, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f804cf9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3916, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_95cc949.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3920, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8d7337.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3924, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d714948.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3928, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4e0583b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3932, io.SeekStart); err != nil {
		return err
	}
	if err := t.NTransmogSnapshotCosts.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3952, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd42f01.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3968, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91356ce.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3972, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4ab0243.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3976, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab4a88e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3980, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a9e4262.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3984, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bc34342.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3988, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b11b51b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3992, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_43088a0.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4016, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3021a92.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4020, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_496cffb.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4024, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_56d4995.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4032, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCurrencyCaps.UnmarshalD4(r, &Options{
		ArrayLength: 28,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4256, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_606852d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4280, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bf59715.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4296, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2bb7f27.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4300, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_50c5dba.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4304, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a19cbf3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4308, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPowerEffectIntensityPerSkillRank.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4312, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMaxPowerEffectIntensityFromSkillRanks.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4316, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_57c5af4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4320, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7125533.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4336, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5beabc1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4340, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_72ee1ae.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4344, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b59ed1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4348, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_38b5fed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4352, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dbc6f0d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4356, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9ea22ec.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4360, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9155d6b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4364, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b1d46f8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4368, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9f4060e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4372, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2cbcb69.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4376, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_603d082.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4380, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c20677a.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4384, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bad483c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4388, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f883e95.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4392, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ae661d1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4400, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TutorialDefinition struct {
	DwNextID             DT_UINT
	EType                DT_ENUM
	DwFlags              DT_UINT
	ArSlides             DT_VARIABLEARRAY[*TutorialScreen]
	EVisibilityCondition DT_ENUM
	FlTimeBeforeFading   DT_FLOAT
	EAlignHorizontal     DT_ENUM
	EAlignVertical       DT_ENUM
	VecOffset            DT_BCVEC2I
	SzAnchorControl      DT_CSTRING[*DT_BYTE]
}

func (t *TutorialDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNextID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSlides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.EVisibilityCondition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTimeBeforeFading.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAlignHorizontal.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAlignVertical.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzAnchorControl.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EventCallbackSubcondition struct {
	// Inherits QuestSubconditionBase
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType       DT_UINT
	BNegate      DT_INT
	SnoQuest     DT_SNO
	DwPad        DT_UINT
	NStepUID     DT_INT
	NCallbackUID DT_UINT
	EComp        DT_ENUM
	NCount       DT_UINT
}

func (t *EventCallbackSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.NStepUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCallbackUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameTestingTakeScreenshotMessage struct {
	THeader     RequiredMessageHeader
	Unk_870804d DT_INT
	SzName      DT_CHARARRAY
}

func (t *GameTestingTakeScreenshotMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_870804d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{
		ArrayLength: 128,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UberMaterial struct {
	SnoShaderMap                DT_SNO
	SnoMaterialValueSetOverride DT_SNO
	Mat                         Material
	PtMatTexList                DT_VARIABLEARRAY[*MaterialTextureEntry]
	PtRunTimeMaterialValues     DT_VARIABLEARRAY[*RunTimeMaterialValues]
	NTexAnimStateCount          DT_INT
	FHasGraph                   DT_INT
}

func (t *UberMaterial) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoShaderMap.UnmarshalD4(r, &Options{
		Flags: 257,
		Group: 36,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMaterialValueSetOverride.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 85,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Mat.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtMatTexList.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtRunTimeMaterialValues.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.NTexAnimStateCount.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.FHasGraph.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type StartLocationName struct {
	UGUID  DT_UINT
	SzName DT_CHARARRAY
}

func (t *StartLocationName) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.UGUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CampaignData struct {
	ArCampaignArcs DT_VARIABLEARRAY[*CampaignArc]
}

func (t *CampaignData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCampaignArcs.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerOwnsAMountSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType  DT_UINT
	BNegate DT_INT
	DwPad   DT_UINT
}

func (t *PlayerOwnsAMountSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SurveyMessage struct {
	THeader        RequiredMessageHeader
	TSNOName       DT_SNO_NAME
	GbidSurveyType DT_GBID
}

func (t *SurveyMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSNOName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidSurveyType.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 57,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HelpCode_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*HelpCode]
}

func (t *HelpCode_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type FogMask struct {
	DwWidth  DT_UINT
	DwHeight DT_UINT
	ArMask   DT_VARIABLEARRAY[*DT_BYTE]
}

func (t *FogMask) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwWidth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArMask.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_16e3cafe struct {
	// Inherits Type_d4213c9b
	DwType      DT_UINT
	Unk_9b2bc26 Type_80554fed
	Unk_77ed19a DT_ENUM
	DwPad       DT_UINT
}

func (t *Type_16e3cafe) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b2bc26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77ed19a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DebugProjectileMovementUpdateMessage struct {
	THeader            RequiredMessageHeader
	Ann                DT_ACD_NETWORK_NAME
	IdSWorld           DT_SHARED_SERVER_DATA_ID
	WpStart            DT_VECTOR3D
	VVelocity          DT_VECTOR3D
	Unk_5aa0d1f        DT_VECTOR3D
	Unk_be8c5f6        DT_INT
	FlProjectileRadius DT_FLOAT
	Unk_dab04b2        DT_FLOAT
	TDetPathData       DT_OPTIONAL[*Type_665f557c]
	ArCollisionChecks  DT_FIXEDARRAY[*DebugProjectileCollisionCheck]
	Unk_81f3430        DT_INT
}

func (t *DebugProjectileMovementUpdateMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSWorld.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpStart.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.VVelocity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5aa0d1f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_be8c5f6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlProjectileRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dab04b2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDetPathData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCollisionChecks.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+336, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_81f3430.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+340, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_171c4e7d struct {
	THeader RequiredMessageHeader
}

func (t *Type_171c4e7d) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NpcFollowerArchetype struct {
	SzName        DT_CSTRING[*DT_BYTE]
	SzToolTip     DT_CSTRING[*DT_BYTE]
	SnoAIBehavior DT_SNO
	Unk_cbd4b2c   DT_VARIABLEARRAY[*DT_ENUM]
}

func (t *NpcFollowerArchetype) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzToolTip.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAIBehavior.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 3,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cbd4b2c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalClanData struct {
	// Inherits GlobalBase
	// Inherits PolymorphicBase
	DwType             DT_UINT
	DwPad              DT_UINT
	ArLabels           DT_VARIABLEARRAY[*ClanLabel]
	ArBannerShapes     DT_VARIABLEARRAY[*BannerMaskOnly]
	ArTextilePatterns  DT_VARIABLEARRAY[*BannerMaskOnly]
	ArTextileTextures  DT_VARIABLEARRAY[*BannerTextileTexture]
	ArEmbroideries     DT_VARIABLEARRAY[*BannerMaskOnly]
	ArTrims            DT_VARIABLEARRAY[*BannerTrim]
	ArIcons            DT_VARIABLEARRAY[*BannerIcon]
	ArColors           DT_VARIABLEARRAY[*BannerColor]
	ArIconAnchorPoints DT_VARIABLEARRAY[*IconAnchorPoint]
	ArIconLayouts      DT_VARIABLEARRAY[*IconLayout]
	ArDefaultBanners   DT_VARIABLEARRAY[*PresetBannerData]
	Unk_38a6145        Type_aa55cd98
	Unk_109949c        Type_1259dca8
	TIconScale         IconScale
}

func (t *GlobalClanData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArLabels.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArBannerShapes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArTextilePatterns.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArTextileTextures.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArEmbroideries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArTrims.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArIcons.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArColors.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArIconAnchorPoints.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArIconLayouts.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArDefaultBanners.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_38a6145.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_109949c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.TIconScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DetachCarryableFromPlayerMessage struct {
	THeader      RequiredMessageHeader
	AnnPlayer    DT_ACD_NETWORK_NAME
	SnoCarryable DT_SNO
	Unk_fa1aeb2  DT_OPTIONAL[*DT_INT]
}

func (t *DetachCarryableFromPlayerMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnPlayer.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCarryable.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fa1aeb2.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_1786e9fa struct {
	NRadioButtonValue                    DT_INT
	Unk_d6b1ed2                          DT_INT
	Unk_b264c41                          Type_6b1c5d9c
	Unk_b93f506                          Type_6b1c5d9c
	Unk_ffcb54c                          Type_6b1c5d9c
	SnoTiledStyleSoundsRetreatTiledStyle DT_SNO
	Unk_a781ae5                          DT_SNO
	Unk_966c056                          DT_SNO
	Unk_7310a9                           DT_RGBACOLOR
	Unk_807b009                          DT_RGBACOLOR
	SzChosenHex                          DT_CSTRING[*DT_BYTE]
	ArSrcPath                            Type_6b1c5d9c
	Unk_608378d                          Type_6b1c5d9c
	Unk_ac65a3e                          Type_6b1c5d9c
	Unk_69f59f                           DT_SNO
}

func (t *Type_1786e9fa) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NRadioButtonValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d6b1ed2.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b264c41.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b93f506.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ffcb54c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTiledStyleSoundsRetreatTiledStyle.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 103,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a781ae5.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 103,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_966c056.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 103,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7310a9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_807b009.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzChosenHex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSrcPath.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_608378d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ac65a3e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_69f59f.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_17bd50db struct {
	Unk_20b45d7 DT_UINT
	EType       DT_ENUM
	FlRadius    DT_FLOAT
	FlLength    DT_FLOAT
	APitch      DT_FLOAT
	AYaw        DT_FLOAT
	Unk_711980c DT_VECTOR3D
}

func (t *Type_17bd50db) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_20b45d7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.APitch.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.AYaw.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_711980c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_18173024 struct {
	DwSeed                 DT_UINT
	DwSeedInitial          DT_UINT
	SnoPrimaryDungeonQuest DT_SNO
	ArTiles                DT_FIXEDARRAY[*Type_8462796a]
	ArDRLGEvents           DT_FIXEDARRAY[*Type_e83323fe]
	Unk_5999f73            Type_57fcadb
}

func (t *Type_18173024) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwSeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwSeedInitial.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPrimaryDungeonQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArTiles.UnmarshalD4(r, &Options{
		ArrayLength: 128,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+14864, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArDRLGEvents.UnmarshalD4(r, &Options{
		ArrayLength: 16,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+15892, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5999f73.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16432, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventSetAudioState struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
	TAudioState WwiseSwitchValue
}

func (t *TriggerEventSetAudioState) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAudioState.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConvLocaleDisplayTimes struct {
	FlDisplayTime DT_FIXEDARRAY[*DT_FLOAT]
}

func (t *ConvLocaleDisplayTimes) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDisplayTime.UnmarshalD4(r, &Options{
		ArrayLength: 10,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerFadeVolumeData struct {
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	Unk_f86aafe DT_ENUM
	EBehavior   DT_ENUM
	Unk_d014f8b DT_INT
	Unk_81c0263 DT_INT
	NFadeGroup  DT_INT
}

func (t *MarkerFadeVolumeData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f86aafe.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBehavior.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d014f8b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_81c0263.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFadeGroup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_18ca0295 struct {
	BReverseOrder   DT_INT
	BHorizontal     DT_INT
	Unk_f89660f     DT_INT
	Unk_3385ab6     DT_INT
	Unk_3a57c53     DT_INT
	NStackSpacing   DT_INT
	ELayoutBehavior DT_ENUM
	TMargins        UIMargins
}

func (t *Type_18ca0295) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.BReverseOrder.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.BHorizontal.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f89660f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3385ab6.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3a57c53.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NStackSpacing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ELayoutBehavior.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMargins.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_18e49fff struct {
	CountX    DT_INT
	CountY    DT_INT
	CellWidth DT_FLOAT
	ASamples  DT_INT64
	Center    DT_FLOAT
	Scale     DT_FLOAT
}

func (t *Type_18e49fff) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.CountX.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.CountY.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.CellWidth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ASamples.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Center.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Scale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AIPropType_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*AIPropType]
}

func (t *AIPropType_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HeroStateRewardsMessage struct {
	THeader            RequiredMessageHeader
	Unk_dce541c        DT_UINT
	ArZoneProgressData DT_FIXEDARRAY[*Type_f0f63f3d]
}

func (t *HeroStateRewardsMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArZoneProgressData.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_18fbc228 struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
	DwObjectID  DT_UINT
	DwTargetID  DT_UINT
	AThreshold  DT_FLOAT
	Unk_d74c75c DT_FLOAT
	Unk_77ca12a DT_INT
	Unk_23237e1 DT_INT
	Unk_f1b6afc DT_FLOAT
}

func (t *Type_18fbc228) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwObjectID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTargetID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.AThreshold.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d74c75c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77ca12a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_23237e1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f1b6afc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestTimerUpdatedMessage struct {
	THeader     RequiredMessageHeader
	IdQuest     DT_ENUM
	NTimeChange DT_INT
}

func (t *QuestTimerUpdatedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdQuest.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NTimeChange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIRadioButtonStyle struct {
	// Inherits UIButtonStyle
	// Inherits UITextStyle
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	TFont                     UIControlFont
	Unk_4741819               DT_TAGMAP[*DT_ENUM]
	TIcon                     UIControlIcon
	TClickSounds              Type_98c23c41
	Unk_10f81f0               DT_TAGMAP[*DT_ENUM]
	Unk_d3a1ebf               DT_TAGMAP[*DT_ENUM]
}

func (t *UIRadioButtonStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFont.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4741819.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.TIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.TClickSounds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_10f81f0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d3a1ebf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_197fc9d9 struct {
	SnoSkill DT_SNO
}

func (t *Type_197fc9d9) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSkill.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UpgradedItemLabelSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType     DT_UINT
	BNegate    DT_INT
	DwPad      DT_UINT
	EItemLabel DT_ENUM
}

func (t *UpgradedItemLabelSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EItemLabel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_19c611ca struct {
	Unk_59cd8cf DT_FLOAT
	Unk_59cd7d1 DT_FLOAT
}

func (t *Type_19c611ca) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_59cd8cf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_59cd7d1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalServiceNPCData struct {
	// Inherits GlobalBase
	// Inherits PolymorphicBase
	DwType                  DT_UINT
	DwPad                   DT_UINT
	ArVendors               DT_FIXEDARRAY[*GlobalVendorEvents]
	ArCrafters              DT_FIXEDARRAY[*GlobalCrafterEvents]
	ArCrafterLockConditions DT_FIXEDARRAY[*CrafterConditions]
	Unk_13e0ecf             DT_FLOAT
	THealerEvents           GlobalHealerEvents
	Unk_24fcd3d             DT_SNO
	Unk_6ac8078             DT_FLOAT
	Unk_2a2b3f7             DT_FLOAT
}

func (t *GlobalServiceNPCData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArVendors.UnmarshalD4(r, &Options{
		ArrayLength: 12,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCrafters.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+400, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCrafterLockConditions.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+480, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_13e0ecf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+484, io.SeekStart); err != nil {
		return err
	}
	if err := t.THealerEvents.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+488, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_24fcd3d.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+492, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6ac8078.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+496, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2a2b3f7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+504, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ParagonGlyphAffixDefinition struct {
	Unk_3bfd2fb          DT_VARIABLEARRAY[*ParagonGlyphAffixAttribute]
	Unk_a16a4d8          DT_ENUM
	Unk_e53c570          DT_ENUM
	ArThresholdSelector  DT_VARIABLEARRAY[*DT_SNO]
	EBonusOperation      DT_ENUM
	Unk_e80c332          DT_VARIABLEARRAY[*Type_3f44d2ec]
	Unk_2506574          DT_GBID
	Unk_680001b          DT_FLOAT
	Unk_1135a20          DT_FLOAT
	Unk_12a5abd          DT_FLOAT
	SnoBonusPassivePower DT_SNO
	ArBonusAttributes    DT_VARIABLEARRAY[*ParagonGlyphAffixAttribute]
	ArAffixSkillTags     DT_VARIABLEARRAY[*DT_GBID]
}

func (t *ParagonGlyphAffixDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3bfd2fb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a16a4d8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e53c570.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArThresholdSelector.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 124,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBonusOperation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e80c332.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2506574.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_680001b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1135a20.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_12a5abd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoBonusPassivePower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArBonusAttributes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArAffixSkillTags.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 56,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PVPShrineEventUpdateMessage struct {
	THeader      RequiredMessageHeader
	WpLocation   DT_VECTOR3D
	DwEnd        DT_UINT
	SnoLevelArea DT_SNO
}

func (t *PVPShrineEventUpdateMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpLocation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwEnd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelArea.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerItemData struct {
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType          DT_UINT
	DwPad           DT_UINT
	ECurrencyType   DT_ENUM
	NCurrencyAmount DT_INT
}

func (t *MarkerItemData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECurrencyType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCurrencyAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIMenuItemStyle struct {
	// Inherits UIButtonStyle
	// Inherits UITextStyle
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	TFont                     UIControlFont
	Unk_4741819               DT_TAGMAP[*DT_ENUM]
	TIcon                     UIControlIcon
	TClickSounds              Type_98c23c41
	Unk_10f81f0               DT_TAGMAP[*DT_ENUM]
}

func (t *UIMenuItemStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFont.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4741819.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.TIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.TClickSounds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_10f81f0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SpawnerGizmoData struct {
	// Inherits NamedGizmoData
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                              DT_UINT
	DwPad                               DT_UINT
	FDisableNonFriendlyOperation        DT_INT
	FWalkToCenter                       DT_INT
	FGizmoStartsDisabled                DT_INT
	FUseStringListName                  DT_INT
	FForceMinimapIcon                   DT_INT
	FlOperationRadius                   DT_FLOAT
	Unk_d0b1df5                         DT_FLOAT
	FlGizmoUseTime                      DT_FLOAT
	SnoChannelingEffect                 DT_SNO
	Unk_2767229                         DT_INT
	FGizmoShowProgressBar               DT_INT
	Unk_6d9ebe1                         DT_INT
	Unk_5456245                         DT_INT
	Unk_af5815a                         DT_INT
	SnoOnClickEffect                    DT_SNO
	SnoPickedUpEffect                   DT_SNO
	SnoDropOnGroundEffect               DT_SNO
	TConditionData                      GizmoConditionData
	SnoPowerOperator                    DT_SNO
	SnoPowerOperate                     DT_SNO
	SnoPowerOperatorActive              DT_SNO
	SnoPowerOperateActive               DT_SNO
	Unk_359810e                         DT_INT
	NCooldown                           DT_UINT
	Unk_9c8478e                         DT_UINT
	Unk_d45ed2d                         DT_INT
	Unk_f6b20b7                         DT_INT
	Unk_54513b8                         DT_INT
	Unk_fd1f378                         DT_UINT
	Unk_487c14                          DT_UINT
	Unk_87f2609                         DT_UINT
	Unk_158eb4f                         DT_FLOAT
	Unk_ab58cd3                         DT_ENUM
	Unk_91a3966                         DT_UINT
	Unk_25312e5                         DT_UINT
	Unk_4be4371                         DT_INT
	FSpawnedMonstersInheritTargetList   DT_INT
	FSpawnedMonstersStartInSpecialState DT_INT
	FSpawnedMonstersGiveLoot            DT_INT
	FSpawnedMonstersGiveXP              DT_INT
	FSpawnItemRotateInGroup             DT_INT
	Unk_545c5ca                         DT_INT
	ESpawnType                          DT_ENUM
	SnoSpawnActor                       DT_SNO
	SnoSpawnEncounter                   DT_SNO
	SnoPopulation                       DT_SNO
	SnoSpawnEffect                      DT_SNO
	SnoSummonedEffect                   DT_SNO
	SnoSpawnEffectGroupActorToActor     DT_SNO
	Unk_50d7e54                         DT_SNO
	SnoSpawnItem                        DT_SNO
	NSpawnAdditionalAffixCount          DT_INT
	FSpawnLockRandomAffixesOnCreate     DT_INT
	ArrReloadedBits                     DT_FIXEDARRAY[*DT_SNO]
	TInstanceData                       SpawnerGizmoInstanceData
}

func (t *SpawnerGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.FSpawnedMonstersInheritTargetList.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.FSpawnedMonstersStartInSpecialState.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.FSpawnedMonstersGiveLoot.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.FSpawnedMonstersGiveXP.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.FSpawnItemRotateInGroup.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_545c5ca.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESpawnType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSpawnActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSpawnEncounter.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 15,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPopulation.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 84,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSpawnEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSummonedEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSpawnEffectGroupActorToActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_50d7e54.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSpawnItem.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSpawnAdditionalAffixCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.FSpawnLockRandomAffixesOnCreate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+228, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArrReloadedBits.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
		Group:       107,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.TInstanceData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+456, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_1af4235c struct {
	// Inherits Type_d3c3637f
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType        DT_UINT
	BNegate       DT_INT
	EComparisonOp DT_ENUM
	DwPad         DT_UINT
	FlValue       DT_FLOAT
	BUse2D        DT_INT
	Unk_c7b2b18   DT_ENUM
}

func (t *Type_1af4235c) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.BUse2D.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c7b2b18.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PrefabScopedActorGroupData_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*PrefabScopedActorGroupData]
}

func (t *PrefabScopedActorGroupData_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MakeupDefinition struct {
	FUsableByClass DT_FIXEDARRAY[*DT_INT]
	SnoMakeup      DT_SNO
	FlIntensity    DT_FLOAT
	FlRoughness    DT_FLOAT
	FlMetalness    DT_FLOAT
	HIconImage     DT_UINT
}

func (t *MakeupDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUsableByClass.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMakeup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlIntensity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRoughness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMetalness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIconImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameVariableStringSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType               DT_UINT
	BNegate              DT_INT
	DwPad                DT_UINT
	GbidDesignerVariable DT_GBID
	SzValue              DT_UINT
}

func (t *GameVariableStringSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidDesignerVariable.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 45,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WwiseSoundBankContentBase struct {
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
}

func (t *WwiseSoundBankContentBase) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlatformAccount struct {
	M_id       DT_INT64
	M_platform DT_ENUM
}

func (t *PlatformAccount) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_id.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_platform.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_1b652647 struct {
	TComponentId       DT_UINT
	TComponentFoleyTag FoleyMaterialTag
}

func (t *Type_1b652647) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TComponentId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TComponentFoleyTag.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamGizmoType struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
	EType      DT_ENUM
}

func (t *ScriptEventParamGizmoType) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerClassCoreStatBenefitData struct {
	Unk_8754bdb DT_VARIABLEARRAY[*PlayerClassCoreStatBenefitEntry]
}

func (t *PlayerClassCoreStatBenefitData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8754bdb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorProjectileData struct {
	FDestroyOnImpact              DT_INT
	Unk_fc86022                   DT_FLOAT
	FProjectileMatchYawToVelocity DT_INT
	Unk_a6a9aae                   DT_INT
	Unk_1db2e79                   DT_INT
	FProjectileCanBeReflected     DT_INT
	FProjectileCanBeSlowed        DT_INT
	Unk_bac5791                   DT_INT
	Unk_7c4ac65                   DT_INT
	THardpointLink                HardpointLink
	TAttachHardpointLink          HardpointLink
	FlGravityMultiplier           DT_FLOAT
	FHugsGround                   DT_INT
	FIgnoreSceneCollision         DT_INT
	BIgnoreActorCollision         DT_INT
	Unk_4673605                   DT_FLOAT
	Unk_cdf7878                   DT_FLOAT
	Unk_3168e93                   DT_INT
	Unk_1458258                   DT_INT
	Unk_6b95d1b                   DT_ENUM
	Unk_30866cd                   DT_INT
	Unk_57ae150                   DT_UINT
	Unk_c220883                   DT_FLOAT
	Unk_721bb83                   DT_FLOAT
	Unk_869456c                   DT_FLOAT
	Unk_bd02cf7                   DT_FLOAT
	Unk_17a6e83                   DT_SNO
	Unk_8815a78                   DT_INT
	Unk_57168be                   DT_INT
	Unk_9348542                   DT_INT
	DwCollidableFlags             DT_UINT
	Unk_6250c06                   DT_INT
}

func (t *ActorProjectileData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDestroyOnImpact.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fc86022.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FProjectileMatchYawToVelocity.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a6a9aae.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1db2e79.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FProjectileCanBeReflected.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FProjectileCanBeSlowed.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bac5791.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7c4ac65.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAttachHardpointLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGravityMultiplier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FHugsGround.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.FIgnoreSceneCollision.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIgnoreActorCollision.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4673605.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cdf7878.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3168e93.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1458258.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6b95d1b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_30866cd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_57ae150.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c220883.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_721bb83.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_869456c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bd02cf7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_17a6e83.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8815a78.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_57168be.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9348542.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwCollidableFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6250c06.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MonsterAffixDefinition struct {
	BShown          DT_INT
	SnoOnDeathPower DT_SNO
	SnoSpawnPower   DT_SNO
	HIcon           DT_UINT
}

func (t *MonsterAffixDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.BShown.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnDeathPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSpawnPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_1bfca377 struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType              DT_UINT
	TConditions         TriggerConditions
	FGenerated          DT_INT
	Unk_6cba752         DT_INT
	Unk_e560b0b         DT_UINT
	TDuration           DT_FLOAT
	DwTriggerFlags      DT_UINT
	DwTriggerFlagsEx    DT_UINT
	TCleanup            TriggerCleanup
	Unk_49e9257         DT_INT
	Unk_5490979         DT_INT
	DwPad               DT_UINT
	DwActorID           DT_UINT
	DwShaderMapOverride DT_UINT
	Unk_279aa5a         DT_INT
}

func (t *Type_1bfca377) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwActorID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwShaderMapOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_279aa5a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_1c1c99a7 struct {
	// Inherits Type_d4213c9b
	DwType      DT_UINT
	Unk_9b2bc26 Type_80554fed
	Unk_77ed19a DT_ENUM
	DwPad       DT_UINT
}

func (t *Type_1c1c99a7) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b2bc26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77ed19a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_1c5ecda5 struct {
	Unk_13ed858 DT_VARIABLEARRAY[*Type_ac1cf1ab]
}

func (t *Type_1c5ecda5) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_13ed858.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TimedSpawningData struct {
	GbidSpawnLocType DT_GBID
	ERestrictionType DT_ENUM
	NCountActive     DT_INT
	FlPercentActive  DT_FLOAT
	FlDuration       DT_FLOAT
}

func (t *TimedSpawningData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidSpawnLocType.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 20,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.ERestrictionType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCountActive.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPercentActive.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionStoredValueEquals struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType         DT_UINT
	BInverse       DT_INT
	DwPad          DT_UINT
	SzVariableName DT_UINT
	FlValue        DT_FLOAT
}

func (t *PowerConditionStoredValueEquals) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzVariableName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_1cf6b4f9 struct {
	Unk_281a24e              DT_INT
	Unk_db52f49              DT_INT
	FlWeatherDuration        DT_FLOAT
	PathWeatherIntensity     Type_cbfdd2ea
	Unk_6da77a8              Type_cbfdd2ea
	Unk_e71f9c               Type_cbfdd2ea
	Unk_e71f9d               Type_cbfdd2ea
	Unk_78feafe              DT_INT
	Unk_88e388e              Type_cbfdd2ea
	Unk_8a0510f              Type_cbfdd2ea
	Unk_78feaff              DT_INT
	Unk_88e388f              Type_cbfdd2ea
	Unk_8a05110              Type_cbfdd2ea
	PathCloudShadowIntensity Type_cbfdd2ea
	PathCloudShadowOffset    Type_cbfdd2ea
	Unk_27336d0              DT_FLOAT
	Unk_969434               DT_INT
	FlCloudScale             DT_FLOAT
	TMatTexCloud             MaterialTexture
	TMatTexCloud2            MaterialTexture
	Unk_635ca57              Type_cbfdd2ea
	EEffectType              DT_ENUM
	Unk_17e101e              DT_INT
	Unk_61412c1              DT_FLOAT
	FDryCharacters           DT_INT
	Unk_6a3ef4               DT_VARIABLEARRAY[*DT_SNO]
	SnoFogParticle           DT_SNO
	SnoSound                 DT_SNO
	SnoSkyboxActor           DT_SNO
	ASkyboxYaw               DT_FLOAT
	Unk_d76517b              DT_INT
	FlLightningAltitude      DT_RANGE[*DT_FLOAT]
	FlLightningAzimuth       DT_RANGE[*DT_FLOAT]
	PathLightningThreshold   Type_cbfdd2ea
	TLightningDelayRange     DT_RANGE[*DT_FLOAT]
	FlThunderDelayMax        DT_FLOAT
	SnoLightning             DT_SNO
	SnoLightningEffectGroup  DT_SNO
	SnoThunder               DT_SNO
	Unk_e62e0c5              DT_INT
	Unk_ef3334               Type_cbfdd2ea
	Unk_5ae444c              DT_RANGE[*DT_FLOAT]
	Unk_814d665              DT_FLOAT
	Unk_e4ce904              DT_FLOAT
	Unk_71a7d61              Type_cbfdd2ea
	Unk_c03585a              Type_cbfdd2ea
	Unk_ef9caa7              Type_cbfdd2ea
	Unk_e9c94fc              Type_cbfdd2ea
	Unk_acc170e              DT_FLOAT
	Unk_ec2c674              DT_FLOAT
	Unk_4c76230              DT_SNO
	Unk_afd6821              bcQuat
	FSunEnabled              DT_INT
	PathSunColor             Type_560ae4cf
	PathSunIntensity         Type_cbfdd2ea
	Unk_b9380cd              Type_cbfdd2ea
	Unk_d83665               DT_FLOAT
	Unk_8ff1cc9              DT_INT
	Unk_18f4472              Type_560ae4cf
	Unk_71643d4              DT_RGBACOLOR
	Unk_811fc11              DT_FLOAT
	FlSunAltitude            DT_FLOAT
	FlSunAzimuth             DT_FLOAT
	FlSunRadius              DT_FLOAT
	Unk_9e754d5              DT_FLOAT
	Unk_aa224d7              DT_INT
	FlSunShadowAltitude      DT_FLOAT
	FlSunShadowAzimuth       DT_FLOAT
	Unk_daea413              DT_FLOAT
	Unk_2935034              Type_cbfdd2ea
	Unk_83a1898              DT_FLOAT
	Unk_d9887a5              DT_FLOAT
	Unk_736ceb5              Type_560ae4cf
	Unk_e10a587              Type_560ae4cf
	Unk_dd8bdbd              Type_cbfdd2ea
	Unk_8f0758f              Type_cbfdd2ea
	Unk_f9636b7              DT_FLOAT
	Unk_b8314fd              DT_FLOAT
	Unk_25d0dc9              DT_FLOAT
	Unk_be5b4cf              DT_FLOAT
	Unk_8d2c2a4              Type_560ae4cf
	Unk_31b112c              Type_cbfdd2ea
	Unk_526a5cd              Type_cbfdd2ea
	Unk_d9f342f              DT_INT
	Unk_d4be541              DT_INT
	Unk_57c6d0f              Type_560ae4cf
	Unk_50a0f21              Type_560ae4cf
	Unk_819f917              Type_cbfdd2ea
	Unk_b591c29              Type_cbfdd2ea
	Unk_93f10b1              DT_FLOAT
	Unk_21b97b7              DT_FLOAT
	Unk_1212703              DT_FLOAT
	Unk_58e8ec9              DT_FLOAT
	Unk_65efd73              Type_cbfdd2ea
	Unk_23eac05              Type_cbfdd2ea
	Unk_6cf80a6              Type_cbfdd2ea
	Unk_bf9598               Type_cbfdd2ea
	Unk_902b160              Type_cbfdd2ea
	Unk_958dd92              Type_cbfdd2ea
	Unk_9733493              Type_cbfdd2ea
	Unk_7d9c725              Type_cbfdd2ea
	Unk_4e2cb52              Type_cbfdd2ea
	Unk_a0d23db              DT_INT
	FlBlendApproachSpeed     DT_FLOAT
	TWaveSettings            HeightFieldWaveSettings
	SnoOceanMaterial         DT_SNO
	SnoGroundFogMaterial     DT_SNO
	PathWaterBloodiness      Type_cbfdd2ea
	Unk_832195e              Type_cbfdd2ea
	Unk_d9ac5a8              Type_cbfdd2ea
	FlSSAOOcclusionRadius    DT_FLOAT
	FlSSAOOcclusionStrength  DT_FLOAT
	Unk_6356b81              DT_FLOAT
	Unk_c1c86a0              DT_FLOAT
	Unk_cc9331e              DT_FLOAT
	Unk_58f490               DT_FLOAT
	Unk_92befa               DT_FLOAT
	Unk_ff9df7d              DT_FLOAT
	Unk_eebbc0               DT_FLOAT
	Unk_826c03f              Type_cbfdd2ea
	Unk_31d22a7              DT_INT
	Unk_a16201               DT_FLOAT
	Unk_a55216b              Type_cbfdd2ea
	Unk_166e0e6              DT_FLOAT
	Unk_bd7f6de              DT_FLOAT
	Unk_f5b8782              Type_cbfdd2ea
	Unk_f8bf7fa              DT_FLOAT
	Unk_b6100e3              DT_FLOAT
	Unk_62ddb30              DT_INT
	Unk_202fc35              bcQuat
	Unk_4e6515c              DT_INT
	TShoreWaveSettings       ShoreWaveSettings
	Unk_ee76094              DT_RGBACOLOR
	Unk_403296d              DT_INT
}

func (t *Type_1cf6b4f9) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_281a24e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_db52f49.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlWeatherDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathWeatherIntensity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6da77a8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e71f9c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e71f9d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_78feafe.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_88e388e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8a0510f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+360, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_78feaff.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+368, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_88e388f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+424, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8a05110.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+480, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathCloudShadowIntensity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+536, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathCloudShadowOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+592, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_27336d0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+596, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_969434.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+600, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlCloudScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+608, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMatTexCloud.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+648, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMatTexCloud2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+688, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_635ca57.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+744, io.SeekStart); err != nil {
		return err
	}
	if err := t.EEffectType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+748, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_17e101e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+752, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_61412c1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+756, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDryCharacters.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+760, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6a3ef4.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+776, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFogParticle.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 27,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+780, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+784, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSkyboxActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+788, io.SeekStart); err != nil {
		return err
	}
	if err := t.ASkyboxYaw.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+792, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d76517b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+796, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLightningAltitude.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+804, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLightningAzimuth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+816, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathLightningThreshold.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+872, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLightningDelayRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+880, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlThunderDelayMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+884, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLightning.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 23,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+888, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLightningEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+892, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoThunder.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+896, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e62e0c5.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+904, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ef3334.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+960, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5ae444c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+968, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_814d665.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+972, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e4ce904.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+976, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_71a7d61.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1032, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c03585a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1088, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ef9caa7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e9c94fc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1200, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_acc170e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1204, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ec2c674.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1208, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4c76230.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_afd6821.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1228, io.SeekStart); err != nil {
		return err
	}
	if err := t.FSunEnabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1232, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathSunColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1288, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathSunIntensity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1344, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b9380cd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1400, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d83665.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1404, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8ff1cc9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1408, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_18f4472.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1464, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_71643d4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1468, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_811fc11.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1472, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSunAltitude.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1476, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSunAzimuth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1480, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSunRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1484, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9e754d5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1488, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aa224d7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1492, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSunShadowAltitude.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1496, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSunShadowAzimuth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1500, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_daea413.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1504, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2935034.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1560, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_83a1898.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1564, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9887a5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1568, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_736ceb5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1624, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e10a587.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1680, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dd8bdbd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1736, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8f0758f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1792, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f9636b7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1796, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b8314fd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1800, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25d0dc9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1804, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_be5b4cf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1808, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8d2c2a4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1864, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_31b112c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1920, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_526a5cd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1976, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9f342f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1980, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d4be541.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1984, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_57c6d0f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2040, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_50a0f21.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2096, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_819f917.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b591c29.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2208, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_93f10b1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_21b97b7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2216, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1212703.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2220, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_58e8ec9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2224, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_65efd73.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2280, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_23eac05.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2336, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cf80a6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2392, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bf9598.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2448, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_902b160.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2504, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_958dd92.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2560, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9733493.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2616, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7d9c725.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2672, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4e2cb52.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2728, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a0d23db.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2732, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlBlendApproachSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2736, io.SeekStart); err != nil {
		return err
	}
	if err := t.TWaveSettings.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2752, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOceanMaterial.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 57,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2756, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoGroundFogMaterial.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 57,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2760, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathWaterBloodiness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2816, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_832195e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2872, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9ac5a8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2928, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSSAOOcclusionRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2932, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSSAOOcclusionStrength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2936, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6356b81.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2940, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c1c86a0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2944, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cc9331e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2948, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_58f490.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2952, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_92befa.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2956, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ff9df7d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2960, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eebbc0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2968, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_826c03f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3024, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_31d22a7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3028, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a16201.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3032, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a55216b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3088, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_166e0e6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3092, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bd7f6de.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3096, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f5b8782.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f8bf7fa.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b6100e3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_62ddb30.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_202fc35.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3180, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4e6515c.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3184, io.SeekStart); err != nil {
		return err
	}
	if err := t.TShoreWaveSettings.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3216, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ee76094.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3220, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_403296d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3224, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_1d15fe71 struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *Type_1d15fe71) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ShoreWaveSettings struct {
	Unk_4d19a78       DT_FLOAT
	FlShoreSpeed      DT_FLOAT
	FlShoreMultiplier DT_FLOAT
	FlWaveSpeed       DT_FLOAT
	FlLineWidth       DT_FLOAT
	Unk_d8d6cc9       DT_FLOAT
	Unk_503df13       DT_RANGE[*DT_FLOAT]
}

func (t *ShoreWaveSettings) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4d19a78.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlShoreSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlShoreMultiplier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlWaveSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLineWidth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d8d6cc9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_503df13.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MailDeleteMessage struct {
	THeader RequiredMessageHeader
	IdMail  Type_f5ac91bb
}

func (t *MailDeleteMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdMail.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DebugForceSpawnMessage struct {
	THeader       RequiredMessageHeader
	IdLevelArea   DT_INT
	GbidType      DT_GBID
	IdSpawnMarker DT_INT
	NGroupIndex   DT_INT
	EGroupType    DT_INT
}

func (t *DebugForceSpawnMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdLevelArea.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidType.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 20,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSpawnMarker.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.NGroupIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.EGroupType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ClanBankDepositMessage struct {
	THeader         Type_72bd65f8
	AnnItem         DT_ACD_NETWORK_NAME
	NBankTab        DT_INT
	ECurrencyType   DT_ENUM
	NCurrencyAmount DT_INT64
}

func (t *ClanBankDepositMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnItem.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.NBankTab.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECurrencyType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCurrencyAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_1d7c3cec struct {
	SnoShader DT_SNO
}

func (t *Type_1d7c3cec) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoShader.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalFontColor struct {
	SzToken   DT_UINT
	RgbaColor DT_RGBACOLOR
}

func (t *GlobalFontColor) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzToken.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_1dd81463 struct {
	Unk_ef323d8        DT_CSTRING[*DT_BYTE]
	EHotkey            DT_ENUM
	Unk_8c498b5        DT_ENUM
	EFixedKey          DT_ENUM
	Unk_ccd9967        DT_CSTRING[*DT_BYTE]
	Unk_a2157e8        DT_CSTRING[*DT_BYTE]
	SzOnController     DT_CSTRING[*DT_BYTE]
	Unk_587374f        DT_CSTRING[*DT_BYTE]
	Unk_42b05a7        DT_CSTRING[*DT_BYTE]
	Unk_f887f54        DT_SNO
	BAllowsHeldRepeats DT_INT
	Unk_9a8825c        DT_FLOAT
}

func (t *Type_1dd81463) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ef323d8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EHotkey.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8c498b5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EFixedKey.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ccd9967.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a2157e8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnController.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_587374f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_42b05a7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f887f54.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.BAllowsHeldRepeats.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a8825c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIMargins struct {
	FlLeft   DT_FLOAT
	FlTop    DT_FLOAT
	FlRight  DT_FLOAT
	FlBottom DT_FLOAT
}

func (t *UIMargins) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLeft.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTop.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlBottom.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ItemAffixAttribute struct {
	BIgnoreLegendaryScaling DT_INT
	Unk_288eecd             DT_INT
	TAttribute              AttributeSpecifier
}

func (t *ItemAffixAttribute) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIgnoreLegendaryScaling.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_288eecd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAttribute.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayHitEffectMessage struct {
	THeader     RequiredMessageHeader
	Ann         DT_ACD_NETWORK_NAME
	AnnAttacker DT_ACD_NETWORK_NAME
	EDamageType DT_ENUM
}

func (t *PlayHitEffectMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnAttacker.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDamageType.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIWindowStyle struct {
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
}

func (t *UIWindowStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventShadow struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	DwPad            DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	BShadow          DT_INT
}

func (t *TriggerEventShadow) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.BShadow.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameTestingCharacterSamplingStartMessage struct {
	THeader    RequiredMessageHeader
	SzArmorSet DT_CHARARRAY
	SzHead     DT_CHARARRAY
	SzTorso    DT_CHARARRAY
	SzFeet     DT_CHARARRAY
	SzHands    DT_CHARARRAY
	SzLegs     DT_CHARARRAY
	SzBack     DT_CHARARRAY
	SnoClass   DT_SNO
	BFemale    DT_INT
}

func (t *GameTestingCharacterSamplingStartMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzArmorSet.UnmarshalD4(r, &Options{
		ArrayLength: 50,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+66, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzHead.UnmarshalD4(r, &Options{
		ArrayLength: 50,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzTorso.UnmarshalD4(r, &Options{
		ArrayLength: 50,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+166, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzFeet.UnmarshalD4(r, &Options{
		ArrayLength: 50,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzHands.UnmarshalD4(r, &Options{
		ArrayLength: 50,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+266, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLegs.UnmarshalD4(r, &Options{
		ArrayLength: 50,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+316, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzBack.UnmarshalD4(r, &Options{
		ArrayLength: 50,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+368, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoClass.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 74,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+372, io.SeekStart); err != nil {
		return err
	}
	if err := t.BFemale.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+376, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_1eb0f5e6 struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
}

func (t *Type_1eb0f5e6) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DynamicMovementData struct {
	THeader     GBIDHeader
	Unk_e726cf1 DT_RANGE[*DT_FLOAT]
	Unk_a1e03a6 DT_RANGE[*DT_FLOAT]
	Unk_2a8932  DT_RANGE[*DT_FLOAT]
	Unk_94d0477 DT_RANGE[*DT_FLOAT]
	Unk_e466a88 DT_FLOAT
	Unk_78d1051 DT_FLOAT
	Unk_761cd11 DT_FLOAT
	Unk_402fe97 DT_FLOAT
	Unk_30b0cd2 DT_FLOAT
}

func (t *DynamicMovementData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e726cf1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a1e03a6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2a8932.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+284, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_94d0477.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+292, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e466a88.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_78d1051.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+300, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_761cd11.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_402fe97.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+308, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_30b0cd2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+312, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AIStateDebugSetStateMessage struct {
	THeader  RequiredMessageHeader
	AnnActor DT_ACD_NETWORK_NAME
	BEnabled DT_INT
}

func (t *AIStateDebugSetStateMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnActor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEnabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_1f34a5e5 struct {
	TComponentId     DT_UINT
	ArHelmComponents DT_VARIABLEARRAY[*DT_UINT]
}

func (t *Type_1f34a5e5) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TComponentId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArHelmComponents.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SignGizmoData struct {
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
	ESignType                    DT_ENUM
	SnoInteractSound             DT_SNO
	TDestination                 MarkerHandle
	SnoDisembodiedVoice          DT_SNO
	ESignMaterial                DT_ENUM
	SnoLore                      DT_SNO
	Unk_13742cd                  Type_6b1c5d9c
}

func (t *SignGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESignType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoInteractSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDestination.UnmarshalD4(r, &Options{Flags: 513}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDisembodiedVoice.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 12,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESignMaterial.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLore.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 59,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_13742cd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_1f843277 struct {
	THardpointLink    HardpointLink
	Unk_2cbb1b0       DT_UINT
	ETargetType       DT_ENUM
	DwAttachedActorID DT_UINT
}

func (t *Type_1f843277) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2cbb1b0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETargetType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwAttachedActorID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameTestingRTCSamplingStartMessage struct {
	THeader        RequiredMessageHeader
	SnoEffectGroup DT_SNO
	SnoWorld       DT_SNO
	SnoSubzone     DT_SNO
	SnoScene       DT_SNO
	SnoQuest       DT_SNO
	SzTileSet      DT_CHARARRAY
	SzMarker       DT_CHARARRAY
}

func (t *GameTestingRTCSamplingStartMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSubzone.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoScene.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 33,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzTileSet.UnmarshalD4(r, &Options{
		ArrayLength: 128,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzMarker.UnmarshalD4(r, &Options{
		ArrayLength: 128,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+292, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EmitterPointData struct {
	// Inherits EmitterDataBase
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
}

func (t *EmitterPointData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type IKBoneChainBase struct {
	// Inherits PolymorphicBase
	DwType    DT_UINT
	DwPad     DT_UINT
	EIKLimb   DT_ENUM
	EIKTarget DT_ENUM
	PtIKBones DT_VARIABLEARRAY[*IKBone]
}

func (t *IKBoneChainBase) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EIKLimb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.EIKTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtIKBones.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CollisionShape struct {
	DwFlags           DT_UINT
	EType             DT_ENUM
	EMaterial         DT_ENUM
	NDegrade          DT_INT
	FlDensityFactor   DT_FLOAT
	FlExplosionFactor DT_FLOAT
	FlVelocityFactor  DT_FLOAT
	PPolytopeData     DT_VARIABLEARRAY[*PolytopeData]
	Wp1               DT_VECTOR3D
	Wp2               DT_VECTOR3D
	FlRadius          DT_FLOAT
}

func (t *CollisionShape) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMaterial.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.NDegrade.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDensityFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlExplosionFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlVelocityFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PPolytopeData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wp1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wp2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SharedChildFile struct {
	SzMD5 DT_CHARARRAY
}

func (t *SharedChildFile) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzMD5.UnmarshalD4(r, &Options{
		ArrayLength: 50,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+50, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamReputation struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType        DT_UINT
	EParamType    DT_ENUM
	DwPad         DT_UINT
	SnoReputation DT_SNO
}

func (t *ScriptEventParamReputation) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoReputation.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 105,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DebugDataRequestMessage struct {
	THeader          RequiredMessageHeader
	NType            DT_INT
	ArParams         DT_FIXEDARRAY[*DT_INT]
	ArOptionalParams DT_FIXEDARRAY[*Type_b780b821]
}

func (t *DebugDataRequestMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArParams.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArOptionalParams.UnmarshalD4(r, &Options{
		ArrayLength: 10,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1632, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_20a14f36 struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
}

func (t *Type_20a14f36) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventShadowDuration struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
	BShadow          DT_INT
	Unk_b34a8b4      DT_INT
}

func (t *TriggerEventShadowDuration) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.BShadow.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b34a8b4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptFormulaInfo struct {
	TFormula DT_STRING_FORMULA
}

func (t *ScriptFormulaInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFormula.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MaterialTextureEntry struct {
	EShaderTex DT_ENUM
	TMatTex    MaterialTexture
}

func (t *MaterialTextureEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EShaderTex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMatTex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WeaponExpertiseRank struct {
	Unk_5ec4d3d DT_UINT
}

func (t *WeaponExpertiseRank) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5ec4d3d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type StoryboardPlaySoundNode struct {
	// Inherits StoryboardTimePointNode
	// Inherits PolymorphicBase
	DwType   DT_UINT
	FlTime   DT_FLOAT
	DwPad    DT_UINT
	SnoSound DT_SNO
}

func (t *StoryboardPlaySoundNode) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_219037e7 struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
	FlNearPlane      DT_FLOAT
	FlFarPlane       DT_FLOAT
	EBlendEasing     DT_ENUM
}

func (t *Type_219037e7) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlNearPlane.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFarPlane.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_21df8be8 struct {
	THeader   RequiredMessageHeader
	BComplete DT_INT
}

func (t *Type_21df8be8) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BComplete.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventAddObject struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	TConditions               TriggerConditions
	FGenerated                DT_INT
	Unk_6cba752               DT_INT
	Unk_e560b0b               DT_UINT
	TDuration                 DT_FLOAT
	DwTriggerFlags            DT_UINT
	DwTriggerFlagsEx          DT_UINT
	TCleanup                  TriggerCleanup
	Unk_49e9257               DT_INT
	Unk_5490979               DT_INT
	DwPad                     DT_UINT
	Unk_85269a4               DT_INT
	DwActorID                 DT_UINT
	Snoname                   DT_SNO_NAME
	DwID                      DT_UINT
	THardpointLinks           DT_FIXEDARRAY[*HardpointLink]
	Unk_e7c25e0               DT_ENUM
	SnoPowerEffectParam       DT_SNO
	Unk_beaacd1               DT_ENUM
	Unk_af58166               DT_FLOAT
	Unk_3ed00d7               DT_FLOAT
	DwSeed                    DT_UINT
	FBillboard                DT_INT
	EAddType                  DT_ENUM
	Unk_fbdc534               DT_INT
	FKeepOriginal             DT_INT
	FEnableMovement           DT_INT
	Unk_773852b               DT_INT
	Unk_62ab747               DT_INT
	SnoSubtitles              DT_SNO
	SnoClosedCaptions         DT_SNO
	Unk_1426000               DT_FLOAT
	Unk_cb43646               DT_INT
	FRandomLook               DT_INT
	TLookLink                 LookLink
	Unk_48fd494               DT_INT
	Unk_6b8bffc               DT_ENUM
	SnoAnimSetOverride        DT_SNO
	SnoPlayerAnimSetOverrides DT_VARIABLEARRAY[*Type_a4f1387e]
	DwSegmentsStep            DT_UINT
	DwShaderMapOverride       DT_UINT
	NLocalPlayerIndex         DT_INT
	FlScale                   DT_FLOAT
	Unk_b0f4eeb               DT_UINT
	VecScalar                 DT_VECTOR2D
	Transform                 PRTransform
	TEffectGroupHardpointLink HardpointLink
	Unk_c7fa18a               DT_RANGE[*DT_FLOAT]
	IdRActorAttachment        DT_INT
	NPermIndex                DT_INT
	SnoCopyFromMarkerSet      DT_SNO
	Unk_33e4eec               DT_INT
	NMaxAttachments           DT_UINT
	Unk_a45e6bd               DT_FLOAT
	Unk_36bc3de               DT_FLOAT
	NPriority                 DT_INT
	TNPCComponentInstanceData NPCComponentInstanceData
	PtLightInstanceData       DT_VARIABLEARRAY[*LightInstanceData]
}

func (t *TriggerEventAddObject) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_85269a4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwActorID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Snoname.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLinks.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e7c25e0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerEffectParam.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_beaacd1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af58166.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3ed00d7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwSeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.FBillboard.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAddType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fbdc534.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.FKeepOriginal.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.FEnableMovement.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_773852b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_62ab747.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSubtitles.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 42,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoClosedCaptions.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 42,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1426000.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+228, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cb43646.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.FRandomLook.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+236, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLookLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_48fd494.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+244, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6b8bffc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAnimSetOverride.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPlayerAnimSetOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwSegmentsStep.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwShaderMapOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLocalPlayerIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+284, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b0f4eeb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+292, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+300, io.SeekStart); err != nil {
		return err
	}
	if err := t.Transform.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+328, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEffectGroupHardpointLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+336, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c7fa18a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+344, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdRActorAttachment.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+348, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPermIndex.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+352, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCopyFromMarkerSet.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 24,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+356, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_33e4eec.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+360, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMaxAttachments.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+364, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a45e6bd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+368, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_36bc3de.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+372, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPriority.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+376, io.SeekStart); err != nil {
		return err
	}
	if err := t.TNPCComponentInstanceData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+416, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtLightInstanceData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+432, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventDeleteObject struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
	Unk_2b94198 DT_INT
	DwActorID   DT_UINT
	DwID        DT_UINT
}

func (t *TriggerEventDeleteObject) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2b94198.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwActorID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_220eeabc struct {
	Unk_96bd281 DT_FLOAT
	Unk_96bd183 DT_FLOAT
	RgbaColors  DT_FIXEDARRAY[*DT_RGBACOLOR]
}

func (t *Type_220eeabc) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_96bd281.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_96bd183.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaColors.UnmarshalD4(r, &Options{
		ArrayLength: 7,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerPhaseOneShot struct {
	// Inherits PowerPhaseBase
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TPhaseName  DT_UINT
	Unk_fcb7313 DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	Unk_d0d932b DT_INT
	Unk_9a8200e DT_INT
	Unk_4d5c43f DT_INT
}

func (t *PowerPhaseOneShot) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPhaseName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fcb7313.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0d932b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a8200e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4d5c43f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_22d9402d struct {
	ActionType      DT_ENUM
	QuickActionType DT_ENUM
	SnoEmote        DT_SNO
	SnoConsumable   DT_SNO
}

func (t *Type_22d9402d) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ActionType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.QuickActionType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEmote.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 118,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoConsumable.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerClassDruidData struct {
	DwUnlockLevel  DT_UINT
	SnoUnlockQuest DT_SNO
	TPassiveData   Type_78a562aa
}

func (t *PlayerClassDruidData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwUnlockLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoUnlockQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPassiveData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupScaleXKeyData struct {
	// Inherits EffectGroupKeyData
	// Inherits PolymorphicBase
	DwType     DT_UINT
	DwPad      DT_UINT
	ArKeyItems DT_VARIABLEARRAY[*EffectGroupKey]
}

func (t *EffectGroupScaleXKeyData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArKeyItems.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TranslationCurve struct {
	PtKeysComp DT_VARIABLEARRAY[*DT_BYTE]
}

func (t *TranslationCurve) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtKeysComp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventActorMovement struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType               DT_UINT
	TConditions          TriggerConditions
	FGenerated           DT_INT
	Unk_6cba752          DT_INT
	Unk_e560b0b          DT_UINT
	TDuration            DT_FLOAT
	DwTriggerFlags       DT_UINT
	DwTriggerFlagsEx     DT_UINT
	TCleanup             TriggerCleanup
	Unk_49e9257          DT_INT
	Unk_5490979          DT_INT
	DwPad                DT_UINT
	SzLocatorName        DT_UINT
	DwActorID            DT_UINT
	Unk_7c25701          DT_ENUM
	EOrientationMode     DT_ENUM
	Unk_daebe18          DT_ENUM
	Unk_6101673          DT_UINT
	Unk_8470ffc          HardpointLink
	Unk_46c8459          DT_UINT
	EBlendEasing         DT_ENUM
	EMoveRate            DT_ENUM
	Unk_3c71266          DT_ENUM
	Unk_c751343          DT_INT
	Unk_17909b9          DT_INT
	THardpointLinkTarget HardpointLink
	DwTargetID           DT_UINT
	Unk_23237e1          DT_INT
	Unk_f1b6afc          DT_FLOAT
}

func (t *TriggerEventActorMovement) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLocatorName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwActorID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7c25701.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.EOrientationMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_daebe18.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6101673.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8470ffc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_46c8459.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMoveRate.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3c71266.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c751343.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_17909b9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLinkTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTargetID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_23237e1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f1b6afc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerBaseGizmoData struct {
	FQuestRestricted     DT_INT
	FGizmoStartsDisabled DT_INT
}

func (t *MarkerBaseGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FQuestRestricted.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DebugEventLogMessage struct {
	THeader       RequiredMessageHeader
	SzLogString   DT_CHARARRAY
	Unk_a23ac9b   DT_INT64
	NCommandFrame DT_INT
	AMetaData     DT_FIXEDARRAY[*DebugEventLogMetaData]
	Ann           DT_OPTIONAL[*DT_ACD_NETWORK_NAME]
}

func (t *DebugEventLogMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLogString.UnmarshalD4(r, &Options{
		ArrayLength: 1000,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1016, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a23ac9b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1024, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCommandFrame.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1028, io.SeekStart); err != nil {
		return err
	}
	if err := t.AMetaData.UnmarshalD4(r, &Options{
		ArrayLength: 128,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+13320, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+13336, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type StaticLoadingImages struct {
	ArExteriorImages DT_VARIABLEARRAY[*DT_SNO]
	ArDungeonImages  DT_VARIABLEARRAY[*DT_SNO]
}

func (t *StaticLoadingImages) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArExteriorImages.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArDungeonImages.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PrefetchSubzoneEntranceDataMessage struct {
	THeader       RequiredMessageHeader
	SnoSubzone    DT_SNO
	UEntranceGUID DT_UINT
}

func (t *PrefetchSubzoneEntranceDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSubzone.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.UEntranceGUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ABTestDefinition struct {
	ArVariantKeys DT_VARIABLEARRAY[*StringWrapper]
}

func (t *ABTestDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArVariantKeys.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DebugProjectileRaycastMessage struct {
	THeader     RequiredMessageHeader
	Ann         DT_ACD_NETWORK_NAME
	IdSWorld    DT_SHARED_SERVER_DATA_ID
	WpStart     DT_VECTOR3D
	WpEnd       DT_VECTOR3D
	Unk_e1ac6f5 DT_INT
	WpPosition  DT_VECTOR3D
	WpNormal    DT_VECTOR3D
	Unk_1c414e5 DT_SNO
}

func (t *DebugProjectileRaycastMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSWorld.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpStart.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpEnd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e1ac6f5.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpPosition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpNormal.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1c414e5.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 9,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_245740e6 struct {
	Unk_4c75a49       DT_RGBACOLOR
	Unk_7766bf8       DT_RGBACOLOR
	Unk_7e856a        DT_RGBACOLOR
	Unk_a12fb39       DT_RGBACOLOR
	Unk_27240d        DT_RGBACOLOR
	Unk_2ff5bcb       DT_RGBACOLOR
	FlSlopeAngleValue DT_FLOAT
	RgbaSlopeColor    DT_RGBACOLOR
}

func (t *Type_245740e6) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4c75a49.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7766bf8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7e856a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a12fb39.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_27240d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2ff5bcb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSlopeAngleValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaSlopeColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimTangent struct {
	Unk_2c6615d DT_VECTOR2D
	Unk_2d879de DT_VECTOR2D
	Unk_2ea925f DT_VECTOR2D
	Unk_90e5235 DT_VECTOR2D
	Unk_9206ab6 DT_VECTOR2D
	Unk_9328337 DT_VECTOR2D
}

func (t *AnimTangent) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2c6615d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2d879de.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2ea925f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_90e5235.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9206ab6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9328337.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_24a8a9be struct {
	SnoMinDefault                    DT_SNO
	SnoMedDefault                    DT_SNO
	SnoHighDefault                   DT_SNO
	SnoHighlight                     DT_SNO
	Unk_c1379cf                      DT_SNO
	Unk_eb1288f                      DT_SNO
	SnoLootOverlay                   DT_SNO
	SnoStencilLootSelectable         DT_SNO
	SnoTriangleOverlay               DT_SNO
	SnoDepthComplexity               DT_SNO
	SnoTexelDensity                  DT_SNO
	SnoOccluded                      DT_SNO
	SnoDepth                         DT_SNO
	SnoCookie                        DT_SNO
	SnoUIRActor                      DT_SNO
	SnoFaded                         DT_SNO
	SnoFur                           DT_SNO
	SnoPowerCenters                  DT_SNO
	Unk_a2d779a                      DT_SNO
	Unk_62b01b3                      DT_SNO
	Unk_fda1e28                      DT_SNO
	Unk_8857547                      DT_SNO
	Unk_57fb208                      DT_SNO
	Unk_279eec9                      DT_SNO
	Unk_f742b8a                      DT_SNO
	Unk_259e646                      DT_SNO
	Unk_a90ec3a                      DT_SNO
	Unk_78b28fb                      DT_SNO
	SnoShaderShowTranslateWalkShader DT_SNO
	SnoShaderShowTranslateWallShader DT_SNO
	Unk_65c301c                      DT_SNO
	Unk_edc70d0                      DT_SNO
	Unk_bd6ad91                      DT_SNO
	Unk_8d0ea52                      DT_SNO
	Unk_fcdf27b                      DT_SNO
	Unk_6867f0f                      DT_SNO
	Unk_380bbd0                      DT_SNO
	Unk_7af891                       DT_SNO
	SnoInfluenceSim                  DT_SNO
	Unk_8c6cbe4                      DT_SNO
	Unk_e9a8598                      DT_SNO
	Unk_b94c259                      DT_SNO
	Unk_88eff1a                      DT_SNO
	Unk_679d69f                      DT_SNO
	Unk_2aee7b3                      DT_SNO
	Unk_fa92474                      DT_SNO
	Unk_ca36135                      DT_SNO
	Unk_99d9df6                      DT_SNO
	Unk_abed88                       DT_SNO
	SnoClosureOuter                  DT_SNO
	Unk_1e187d                       DT_SNO
	Unk_d18553e                      DT_SNO
}

func (t *Type_24a8a9be) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMinDefault.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMedDefault.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoHighDefault.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoHighlight.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c1379cf.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eb1288f.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLootOverlay.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoStencilLootSelectable.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriangleOverlay.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDepthComplexity.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTexelDensity.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOccluded.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDepth.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCookie.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoUIRActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFaded.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFur.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerCenters.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a2d779a.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_62b01b3.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fda1e28.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8857547.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_57fb208.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_279eec9.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f742b8a.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_259e646.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a90ec3a.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_78b28fb.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoShaderShowTranslateWalkShader.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoShaderShowTranslateWallShader.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_65c301c.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_edc70d0.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bd6ad91.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8d0ea52.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fcdf27b.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6867f0f.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_380bbd0.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7af891.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoInfluenceSim.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8c6cbe4.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e9a8598.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b94c259.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_88eff1a.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_679d69f.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2aee7b3.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fa92474.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ca36135.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_99d9df6.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_abed88.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoClosureOuter.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1e187d.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d18553e.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EliteKilledMessage struct {
	THeader           RequiredMessageHeader
	Unk_dce541c       DT_UINT
	SnoActorMonster   DT_SNO
	EMonsterRarity    DT_ENUM
	BUseAlternateName DT_INT
	PRareNameGBIDs    DT_FIXEDARRAY[*DT_GBID]
}

func (t *EliteKilledMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActorMonster.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMonsterRarity.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.BUseAlternateName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PRareNameGBIDs.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
		Group:       7,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionHasAffixEquipped struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
	ESubject DT_ENUM
	SnoAffix DT_SNO
}

func (t *PowerConditionHasAffixEquipped) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAffix.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 104,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TrailDefinition struct {
	DwTrailDefFlags       DT_UINT
	FlBaseWidth           DT_FLOAT
	FTextureRepeatCount   DT_FLOAT
	Unk_faa043c           DT_INT
	NSegmentCount         DT_INT
	TTrailLengthRange     DT_RANGE[*DT_FLOAT]
	TTrailDurationRange   DT_RANGE[*DT_FLOAT]
	TSystemDurationRange  DT_RANGE[*DT_FLOAT]
	TSystemDurationScalar InterpolationScalar
	TTrailDurationScalar  InterpolationScalar
	TTrailLengthScalar    InterpolationScalar
	FlOutroDuration       DT_FLOAT
	PathColorOverTime     Type_560ae4cf
	PathColorOverLength   Type_560ae4cf
	PathAlpha             Type_cbfdd2ea
	PathAlphaOverLength   Type_cbfdd2ea
	Unk_ab00250           Type_cbfdd2ea
	Unk_3c8d383           Type_cbfdd2ea
	Unk_bf2b399           Type_cbfdd2ea
	Unk_abcab5e           Type_cbfdd2ea
	Unk_9a3f811           Type_cbfdd2ea
	Unk_3a6dc3c           Type_cbfdd2ea
	Unk_5ddd86f           Type_cbfdd2ea
	PathScaleOverTime     Type_cbfdd2ea
	PathScaleOverLength   Type_cbfdd2ea
	Unk_a14a82f           VectorPath
	Unk_eee6d22           VectorPath
	Unk_d957f72           VectorPath
	Unk_6022125           VectorPath
	Unk_e8edd27           Type_cbfdd2ea
	NTrailType            DT_ENUM
	ETrailSpawnType       DT_ENUM
	SnoMaterial           DT_SNO
	ENormalAxis           DT_ENUM
	Unk_c0b6075           DT_RANGE[*DT_FLOAT]
	Unk_a968362           DT_RANGE[*DT_FLOAT]
	Unk_293081            DT_RANGE[*DT_FLOAT]
	Unk_e5a86e1           Type_cbfdd2ea
	Unk_3e1462e           Type_cbfdd2ea
	DwMaxSystems          DT_UINT
}

func (t *TrailDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTrailDefFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlBaseWidth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FTextureRepeatCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_faa043c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSegmentCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTrailLengthRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTrailDurationRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSystemDurationRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSystemDurationScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTrailDurationScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTrailLengthScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOutroDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathColorOverTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathColorOverLength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathAlpha.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+320, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathAlphaOverLength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+376, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab00250.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+432, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3c8d383.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+488, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bf2b399.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+544, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_abcab5e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+600, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a3f811.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+656, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3a6dc3c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+712, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5ddd86f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+768, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathScaleOverTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+824, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathScaleOverLength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+880, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a14a82f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+936, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eee6d22.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+992, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d957f72.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1048, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6022125.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e8edd27.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1160, io.SeekStart); err != nil {
		return err
	}
	if err := t.NTrailType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1164, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETrailSpawnType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1168, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMaterial.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 57,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1172, io.SeekStart); err != nil {
		return err
	}
	if err := t.ENormalAxis.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c0b6075.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a968362.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1192, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_293081.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1200, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e5a86e1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1256, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3e1462e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1312, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMaxSystems.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1320, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_252cba6b struct {
	FlTime DT_FLOAT
	FlSpin DT_FLOAT
}

func (t *Type_252cba6b) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSpin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ErrorWithContextMessage struct {
	THeader   RequiredMessageHeader
	EType     DT_ENUM
	SnoAsset  DT_SNO_NAME
	ETeam     DT_ENUM
	UsMessage DT_CHARARRAY
	UsOwner   DT_CHARARRAY
}

func (t *ErrorWithContextMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAsset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETeam.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.UsMessage.UnmarshalD4(r, &Options{
		ArrayLength: 1024,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1056, io.SeekStart); err != nil {
		return err
	}
	if err := t.UsOwner.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1120, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_25b4545f struct {
	// Inherits PowerCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	BCouldHaveRagdolled   DT_INT
	TPhaseName            DT_UINT
	EContactFrame         DT_ENUM
	BOptional             DT_INT
}

func (t *Type_25b4545f) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCouldHaveRagdolled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPhaseName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.EContactFrame.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.BOptional.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DungeonSigilTierSubcondition struct {
	// Inherits Type_d3c3637f
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType        DT_UINT
	BNegate       DT_INT
	EComparisonOp DT_ENUM
	DwPad         DT_UINT
	NTier         DT_INT
}

func (t *DungeonSigilTierSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.NTier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIListItemStyle struct {
	// Inherits UITextStyle
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	TFont                     UIControlFont
	Unk_4741819               DT_TAGMAP[*DT_ENUM]
	Unk_82bd03f               DT_TAGMAP[*DT_ENUM]
}

func (t *UIListItemStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFont.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4741819.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_82bd03f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIControlTemplate struct {
	SzName        DT_CSTRING[*DT_BYTE]
	PtInlineStyle DT_POLYMORPHIC_VARIABLEARRAY[*UIControlStyle]
	ArChildren    DT_VARIABLEARRAY[*UIControlTemplate]
	Unk_1cb       DT_VARIABLEARRAY[*Type_1c5ecda5]
}

func (t *UIControlTemplate) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtInlineStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArChildren.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1cb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupACDToACDMessage struct {
	THeader        RequiredMessageHeader
	SnoEffectGroup DT_SNO
	AnnFrom        DT_ACD_NETWORK_NAME
	AnnTo          DT_ACD_NETWORK_NAME
	AnnOrigin      DT_ACD_NETWORK_NAME
	TLinkStart     HardpointInfo
	TLinkEnd       HardpointInfo
}

func (t *EffectGroupACDToACDMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnFrom.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnTo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnOrigin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLinkStart.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLinkEnd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayAnimationMessage struct {
	THeader             RequiredMessageHeader
	Ann                 DT_ACD_NETWORK_NAME
	EAnimReason         DT_ENUM
	FlUnitAnimStartTime DT_FLOAT
	TAnim               DT_FIXEDARRAY[*PlayAnimationMessageSpec]
	Unk_2875d89         DT_OPTIONAL[*SharedServerWorldPlace]
	FlSyncYaw           DT_OPTIONAL[*DT_FLOAT]
	BWasPreplayed       DT_OPTIONAL[*DT_INT]
}

func (t *PlayAnimationMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAnimReason.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlUnitAnimStartTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAnim.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+252, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2875d89.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSyncYaw.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+284, io.SeekStart); err != nil {
		return err
	}
	if err := t.BWasPreplayed.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+292, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CrafterConditions struct {
	ArConditionData DT_VARIABLEARRAY[*ConditionData]
}

func (t *CrafterConditions) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_27090ba7 struct {
	Unk_9fea26c DT_TAGMAP[*DT_ENUM]
}

func (t *Type_27090ba7) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9fea26c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WeatherDefinition struct {
	PtPostprocessed    DT_INT64
	SnoParentWeather   DT_SNO
	Unk_45703df        DT_INT
	Unk_5989069        DT_FIXEDARRAY[*Type_3f7811d2]
	TParamsNotRaining  WeatherStateParams
	TParamsWhenRaining WeatherStateParams
	TColorCorrection   ColorCorrectionParams
	TDomainEpoch       Type_27090ba7
	TStarsSettings     StarsSettings
	Unk_c68eb66        Type_3a9f0d72
	Unk_319c94         Type_ca1fcba0
	Unk_dc54395        DT_TAGMAP[*DT_ENUM]
}

func (t *WeatherDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPostprocessed.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoParentWeather.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 47,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_45703df.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5989069.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.TParamsNotRaining.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.TParamsWhenRaining.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.TColorCorrection.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDomainEpoch.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.TStarsSettings.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c68eb66.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_319c94.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dc54395.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_273a9eee struct {
	GbidSpawnLocType DT_GBID
	ERestrictionType DT_ENUM
	NCountActive     DT_INT
	FlPercentActive  DT_FLOAT
	Unk_74768a4      DT_FLOAT
}

func (t *Type_273a9eee) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidSpawnLocType.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 20,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.ERestrictionType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCountActive.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPercentActive.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_74768a4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LabelEntry struct {
	GbidLabel      DT_GBID
	UFlags         DT_UINT
	FlWeight       DT_FLOAT
	NApplyCountMin DT_INT
	Unk_9ac63e8    DT_FLOAT
	Unk_b171d47    DT_INT
}

func (t *LabelEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidLabel.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 4,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.UFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlWeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.NApplyCountMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9ac63e8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b171d47.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_27c7c537 struct {
	SnoPassivePower  DT_SNO
	TUnlockCondition ConditionWrapper
}

func (t *Type_27c7c537) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPassivePower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TUnlockCondition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConsoleProperty struct{}

func (t *ConsoleProperty) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+1, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerCustomizationMessage struct {
	THeader            RequiredMessageHeader
	TCustomizationData CustomizationData
	Unk_dce541c        DT_UINT
}

func (t *PlayerCustomizationMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCustomizationData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_28dc8b5b struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *Type_28dc8b5b) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EmitterBoxData struct {
	// Inherits EmitterDataBase
	// Inherits PolymorphicBase
	DwType            DT_UINT
	DwPad             DT_UINT
	FEvenDistribution DT_INT
	PathBoxExtents    VectorPath
}

func (t *EmitterBoxData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FEvenDistribution.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathBoxExtents.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorFacingData struct {
	FlTurnSpeed              DT_FLOAT
	FlRunTurnSpeed           DT_FLOAT
	FlDefaultAttackTurnSpeed DT_FLOAT
}

func (t *ActorFacingData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTurnSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRunTurnSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDefaultAttackTurnSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type FoleyOverridePreloadHelper struct {
	SnoActor    DT_SNO
	DwTag       DT_UINT
	Unk_c063965 SerialDataInfo
}

func (t *FoleyOverridePreloadHelper) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTag.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c063965.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ParagonNodeDefinition struct {
	HIcon               DT_UINT
	HIconMask           DT_UINT
	Unk_7714b98         DT_ENUM
	ERarityOverride     DT_ENUM
	SnoPassivePower     DT_SNO
	PtAttributes        DT_VARIABLEARRAY[*AttributeSpecifier]
	Unk_8ba8e1e         DT_VARIABLEARRAY[*DT_INT]
	ArThresholdSelector DT_VARIABLEARRAY[*DT_SNO]
	BHasSocket          DT_INT
	BIsGate             DT_INT
	ArSkillTags         DT_VARIABLEARRAY[*DT_GBID]
}

func (t *ParagonNodeDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIconMask.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7714b98.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.ERarityOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPassivePower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtAttributes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8ba8e1e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArThresholdSelector.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 124,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.BHasSocket.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsGate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSkillTags.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 56,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LookVariantMap struct {
	DwLookVariant          DT_UINT
	ArLookVariantOverrides DT_VARIABLEARRAY[*LookVariantOverride]
}

func (t *LookVariantMap) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwLookVariant.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArLookVariantOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PRTransformMessage struct {
	THeader    RequiredMessageHeader
	TTransform PRTransform
}

func (t *PRTransformMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTransform.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DRLGSpawningData struct {
	GbidSpawnLocType DT_GBID
	ArGroupTypeData  DT_FIXEDARRAY[*Type_e730cffb]
}

func (t *DRLGSpawningData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidSpawnLocType.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 20,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArGroupTypeData.UnmarshalD4(r, &Options{
		ArrayLength: 9,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DRLGSpawningPool struct {
	GbidSpawningPool DT_GBID
	BNegate          DT_INT
}

func (t *DRLGSpawningPool) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidSpawningPool.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WorldDeletedMessage struct {
	THeader  RequiredMessageHeader
	IdSWorld DT_SHARED_SERVER_DATA_ID
}

func (t *WorldDeletedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSWorld.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestPreloadHelper struct {
	SnoQuest    DT_SNO
	Unk_537b67f SerialDataInfo
	Unk_c67aacc SerialDataInfo
}

func (t *QuestPreloadHelper) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_537b67f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c67aacc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EnableRagdollParams struct {
	FlRagdollVelocityFactor DT_FLOAT
	FlRagdollMomentumFactor DT_FLOAT
	Unk_665d2e1             DT_FLOAT
}

func (t *EnableRagdollParams) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRagdollVelocityFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRagdollMomentumFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_665d2e1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnItemPickupBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnItemPickupBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DisplayMode struct {
	DwFlags       DT_UINT
	DwWindowMode  DT_ENUM
	NWinLeft      DT_INT
	NWinTop       DT_INT
	DwUIOptWidth  DT_UINT
	DwUIOptHeight DT_UINT
	DwWidth       DT_UINT
	DwHeight      DT_UINT
	NRefreshRate  DT_INT
	DwMonitor     DT_UINT
	EColorSpace   DT_ENUM
	DwMSAALevel   DT_UINT
}

func (t *DisplayMode) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwWindowMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NWinLeft.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.NWinTop.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwUIOptWidth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwUIOptHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwWidth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.NRefreshRate.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMonitor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.EColorSpace.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMSAALevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CurrentZoneSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType  DT_UINT
	BNegate DT_INT
	DwPad   DT_UINT
	EZone   DT_ENUM
}

func (t *CurrentZoneSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EZone.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ZoneProgressRewardInfoMessage struct {
	THeader     RequiredMessageHeader
	Unk_ae25fc7 DT_FIXEDARRAY[*DT_INT]
	Unk_cf0ad45 DT_FIXEDARRAY[*DT_INT]
}

func (t *ZoneProgressRewardInfoMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ae25fc7.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cf0ad45.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WwiseStandardSoundBank struct {
	// Inherits WwiseSoundBankContentBase
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	PtWWiseBank DT_VARIABLEARRAY[*DT_BYTE]
}

func (t *WwiseStandardSoundBank) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtWWiseBank.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConversationRandomChoiceNode struct {
	// Inherits ConversationScopeNode
	// Inherits ConversationTreeNode
	// Inherits PolymorphicBase
	DwType       DT_UINT
	DwPad        DT_UINT
	DwNodeID     DT_UINT
	DwNextNodeID DT_UINT
	Unk_3ef8e38  DT_UINT
	PtNextNode   DT_INT64
	DwFlags      DT_UINT
	SzComment    DT_CSTRING[*DT_BYTE]
	ArChildNodes DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	SnoCondition DT_SNO
	Unk_d8bf9e4  DT_INT
	SnoSpeaker   DT_SNO
}

func (t *ConversationRandomChoiceNode) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNodeID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNextNodeID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3ef8e38.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtNextNode.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzComment.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArChildNodes.UnmarshalD4(r, &Options{Flags: 262145}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d8bf9e4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSpeaker.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 72,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SerializeContainerData struct {
	DwOffset         DT_INT
	DwSizeAndFlags   DT_INT
	NCount           DT_INT
	DwContainerFlags DT_INT
}

func (t *SerializeContainerData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwSizeAndFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwContainerFlags.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type StringLabelHandleEx struct {
	SnoStringList DT_SNO
	SzLabel       DT_UINT
}

func (t *StringLabelHandleEx) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoStringList.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 42,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLabel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerClassBarbData struct {
	DwUnlockLevel           DT_UINT
	DwTechniqueUnlockLevel  DT_UINT
	SnoTechniqueUnlockQuest DT_SNO
	ArWeaponExpertiseData   DT_VARIABLEARRAY[*BarbWeaponExpertiseData]
}

func (t *PlayerClassBarbData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwUnlockLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTechniqueUnlockLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTechniqueUnlockQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArWeaponExpertiseData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EventRewardChestGizmoData struct {
	// Inherits ChestGizmoData
	// Inherits NamedGizmoData
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                            DT_UINT
	FDisableNonFriendlyOperation      DT_INT
	FWalkToCenter                     DT_INT
	FGizmoStartsDisabled              DT_INT
	FUseStringListName                DT_INT
	FForceMinimapIcon                 DT_INT
	FlOperationRadius                 DT_FLOAT
	Unk_d0b1df5                       DT_FLOAT
	FlGizmoUseTime                    DT_FLOAT
	SnoChannelingEffect               DT_SNO
	Unk_2767229                       DT_INT
	FGizmoShowProgressBar             DT_INT
	Unk_6d9ebe1                       DT_INT
	Unk_5456245                       DT_INT
	Unk_af5815a                       DT_INT
	SnoOnClickEffect                  DT_SNO
	SnoPickedUpEffect                 DT_SNO
	SnoDropOnGroundEffect             DT_SNO
	TConditionData                    GizmoConditionData
	SnoPowerOperator                  DT_SNO
	SnoPowerOperate                   DT_SNO
	SnoPowerOperatorActive            DT_SNO
	SnoPowerOperateActive             DT_SNO
	Unk_359810e                       DT_INT
	NCooldown                         DT_UINT
	Unk_9c8478e                       DT_UINT
	Unk_d45ed2d                       DT_INT
	Unk_f6b20b7                       DT_INT
	Unk_54513b8                       DT_INT
	Unk_fd1f378                       DT_UINT
	Unk_487c14                        DT_UINT
	Unk_87f2609                       DT_UINT
	Unk_158eb4f                       DT_FLOAT
	Unk_ab58cd3                       DT_ENUM
	Unk_91a3966                       DT_UINT
	Unk_25312e5                       DT_UINT
	Unk_4be4371                       DT_INT
	SnoTreasureClass                  DT_SNO
	TLockData                         LockingGizmoData
	FChestRemovesCollisionOnOperation DT_INT
	FChestOperatesOnProximity         DT_INT
	FChestLight                       DT_INT
	Unk_51b0c11                       DT_INT
	Unk_6b4a81d                       DT_FLOAT
	DwPad                             DT_UINT
	FlExpirationDelay                 DT_FLOAT
	Unk_8385e16                       DT_INT
	Unk_fd778e6                       DT_UINT
}

func (t *EventRewardChestGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTreasureClass.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLockData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.FChestRemovesCollisionOnOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.FChestOperatesOnProximity.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.FChestLight.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_51b0c11.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6b4a81d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlExpirationDelay.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+228, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8385e16.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd778e6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RareItemName struct {
	FItemNameIsPrefix     DT_INT
	SnoAffixStringList    DT_SNO
	NAffixStringListIndex DT_INT
	NItemStringListIndex  DT_INT
}

func (t *RareItemName) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FItemNameIsPrefix.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAffixStringList.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 42,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NAffixStringListIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.NItemStringListIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestObjectiveSetLink struct {
	DwDestinationPhaseUID DT_UINT
	ELinkType             DT_ENUM
}

func (t *QuestObjectiveSetLink) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwDestinationPhaseUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.ELinkType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SNODiskEntry struct {
	SnoGroup     DT_ENUM
	UGuid        DT_UINT
	DwNameOffset DT_UINT
}

func (t *SNODiskEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoGroup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.UGuid.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNameOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RogueSpecChangeMessage struct {
	THeader  RequiredMessageHeader
	EOldSpec DT_ENUM
	ENewSpec DT_ENUM
}

func (t *RogueSpecChangeMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EOldSpec.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.ENewSpec.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LinearAxisParams struct {
	Unk_9b43ddf DT_FLOAT
	Unk_a4ff40  DT_FLOAT
	FlMaxSpeed  DT_FLOAT
}

func (t *LinearAxisParams) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b43ddf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a4ff40.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMaxSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerNPCActorData struct {
	FRandom      DT_INT
	TColorSet    NPCColorSet
	TItems       NPCItems
	PtComponents DT_FIXEDARRAY[*ValidComponent]
	SLookName    DT_UINT
}

func (t *MarkerNPCActorData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FRandom.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TColorSet.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.TItems.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtComponents.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.SLookName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamEffectGroup struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType         DT_UINT
	EParamType     DT_ENUM
	DwPad          DT_UINT
	SnoEffectGroup DT_SNO
}

func (t *ScriptEventParamEffectGroup) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEffectGroup.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WaypointGizmoData struct {
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
}

func (t *WaypointGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_2cf6a209 struct {
	Unk_3ef8e38  DT_UINT
	SnoPowerAnim DT_SNO
}

func (t *Type_2cf6a209) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3ef8e38.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerAnim.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorMovingData struct {
	FGenerateFootstepParticles DT_INT
	Unk_56d76cc                DT_INT
	Unk_9d48ee2                DT_INT
}

func (t *ActorMovingData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerateFootstepParticles.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_56d76cc.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9d48ee2.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_2d02bd94 struct {
	Unk_7ccd73  DT_INT
	Unk_cab4517 DT_INT
}

func (t *Type_2d02bd94) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7ccd73.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cab4517.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_2d18fb5c struct {
	Unk_50f7690 DT_UINT
	Unk_29377d2 DT_UINT
	Unk_cd68eaf DT_UINT
	Unk_3696325 DT_UINT
}

func (t *Type_2d18fb5c) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_50f7690.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_29377d2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cd68eaf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3696325.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerHasUnlockedMountsSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType  DT_UINT
	BNegate DT_INT
	DwPad   DT_UINT
}

func (t *PlayerHasUnlockedMountsSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type POICameraInstanceData struct {
	PtProxData      DT_POLYMORPHIC_VARIABLEARRAY[*ProximityDataBase]
	SnoCameraEffect DT_SNO
	Unk_a183154     DT_INT
	Unk_6a602d7     DT_FLOAT
	Unk_c68b42      DT_FLOAT
	Unk_77f6d53     DT_FLOAT
	Unk_da484be     DT_FLOAT
}

func (t *POICameraInstanceData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtProxData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCameraEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a183154.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6a602d7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c68b42.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77f6d53.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_da484be.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UITreeStyle struct {
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	Unk_466d804               DT_TAGMAP[*DT_ENUM]
}

func (t *UITreeStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_466d804.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerBuffSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType       DT_UINT
	BNegate      DT_INT
	DwPad        DT_UINT
	SnoBuffPower DT_SNO
	SzBuffDataID DT_UINT
}

func (t *PlayerBuffSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoBuffPower.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzBuffDataID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DebugSetActorUpdateIntervalMessage struct {
	THeader        RequiredMessageHeader
	Ann            DT_ACD_NETWORK_NAME
	UpdateInterval DT_INT
}

func (t *DebugSetActorUpdateIntervalMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.UpdateInterval.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_2d9968c0 struct {
	SnoAffix    DT_SNO
	Unk_828ec72 DT_INT
}

func (t *Type_2d9968c0) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAffix.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 107,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_828ec72.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EssencePowerTierEntry_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*EssencePowerTierEntry]
}

func (t *EssencePowerTierEntry_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_2dd9d297 struct {
	THeader      RequiredMessageHeader
	DwItemAmount DT_INT64
}

func (t *Type_2dd9d297) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwItemAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PrefetchRunOnDisk struct {
	UCount DT_UINT
	UStart DT_UINT
}

func (t *PrefetchRunOnDisk) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.UCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.UStart.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WorldServerData struct {
	PtSceneChunks DT_VARIABLEARRAY[*SceneChunk]
	SnoScript     DT_SNO
	NSeed         DT_INT
	FlMinX        DT_FLOAT
	FlMinY        DT_FLOAT
	FlMaxX        DT_FLOAT
	FlMaxY        DT_FLOAT
	ArWeatherSNOs DT_VARIABLEARRAY[*DT_SNO]
	ArSubzones    DT_VARIABLEARRAY[*DT_SNO]
}

func (t *WorldServerData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtSceneChunks.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoScript.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 35,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMinX.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMinY.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMaxX.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMaxY.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArWeatherSNOs.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 47,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSubzones.UnmarshalD4(r, &Options{Group: 80}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SocketedEffects struct {
	ESocketTarget DT_ENUM
	PtAttributes  DT_VARIABLEARRAY[*AttributeSpecifier]
	TStringLabel  DT_UINT
}

func (t *SocketedEffects) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESocketTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtAttributes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TStringLabel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorAnimSetPreloadHelper struct {
	SnoActor DT_SNO
	TAnimSet SerialDataInfo
}

func (t *ActorAnimSetPreloadHelper) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAnimSet.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerSkillModPointsSubcondition struct {
	// Inherits Type_d3c3637f
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType          DT_UINT
	BNegate         DT_INT
	EComparisonOp   DT_ENUM
	DwPad           DT_UINT
	SnoSkillPower   DT_SNO
	SzModName       DT_UINT
	NSkillModPoints DT_INT
}

func (t *PlayerSkillModPointsSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSkillPower.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzModName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSkillModPoints.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ParagonUnequipBoardMessage struct {
	THeader  RequiredMessageHeader
	SnoBoard DT_SNO
}

func (t *ParagonUnequipBoardMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoBoard.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 108,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorMonsterData struct {
	EGender                       DT_ENUM
	FIsNPC                        DT_INT
	Unk_7c902e4                   DT_INT
	Unk_ac5481c                   DT_INT
	SnoNPCOperateSound            DT_SNO
	Unk_ac1cb2e                   DT_SNO
	Unk_765a638                   DT_FLOAT
	TNPCServiceData               NPCServiceData
	EHirelingClass                DT_ENUM
	FConvertsDamageToDamageStates DT_INT
	Unk_6bce993                   DT_VARIABLEARRAY[*Type_5c44ae48]
	Unk_6b4a81d                   DT_FLOAT
	SnoMonsterFamily              DT_SNO
	SzArchetype                   DT_UINT
	EBaseElement                  DT_ENUM
	SnoMainHand                   DT_SNO
	SnoOffHand                    DT_SNO
	TLevelScaling                 LevelScalingData
	NGoldGranted                  DT_INT
	SnoTreasureClass              DT_SNO
	SnoTreasureClassElite         DT_SNO
	SnoTreasureClassSuperElite    DT_SNO
	FlSummonLifetime              DT_FLOAT
	NSummonMaxConcurrent          DT_INT
	NSummonMaxTotal               DT_INT
	ArAIBehaviors                 DT_FIXEDARRAY[*DT_SNO]
	BKillSummonsOnDeath           DT_INT
	SnoSummonActor                DT_FIXEDARRAY[*DT_SNO]
	ArSummonActors                DT_VARIABLEARRAY[*SummonActorEntry]
	SnoAffixes                    DT_FIXEDARRAY[*DT_SNO]
	Unk_c8306c                    DT_FIXEDARRAY[*Type_2d9968c0]
	SnoDisallowedAffixes          DT_VARIABLEARRAY[*DT_SNO]
	EAITargetStyleNormal          DT_ENUM
	EAITargetStyleElite           DT_ENUM
	Unk_130279f                   DT_GBID
	Unk_4b9e5c9                   DT_GBID
	Unk_e7a2637                   DT_UINT
	SzInternalName                DT_CHARARRAY
	Unk_d3dddc4                   DT_INT
	Unk_50569ba                   DT_INT
	Unk_7a3dc4a                   DT_UINT
	SnoMount                      DT_SNO
	SnoPowerPossessed             DT_SNO
	Unk_87dbd3a                   DT_ENUM
	Unk_7859c5b                   DT_INT
	BIsWorldBoss                  DT_INT
	Unk_bc58cee                   DT_INT
	Unk_7fdab9c                   DT_INT
	Unk_e7ee8f1                   DT_INT
	Unk_e4c90d3                   DT_INT
	Unk_12ecd6a                   DT_INT
	FlHPScalarOverride            DT_FLOAT
	FlDamageScalarOverride        DT_FLOAT
	Unk_c2cc767                   DT_SNO
	SnoStaggerPower               DT_SNO
	SnoStaggerSettings            DT_SNO
	SnoBossObserver               DT_SNO
	Unk_1627b04                   DT_FLOAT
	Unk_401e0d6                   DT_FLOAT
	Unk_401dfd8                   DT_FLOAT
	Unk_f68cd00                   DT_FLOAT
	Unk_f68cc02                   DT_FLOAT
	Unk_16266ca                   DT_FLOAT
	Unk_5428a5e                   DT_FLOAT
	Unk_3b9132c                   DT_FLOAT
	Unk_c0cc954                   DT_FLOAT
	Unk_d5178b2                   DT_FLOAT
	Unk_e08f0df                   DT_FLOAT
}

func (t *ActorMonsterData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EGender.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FIsNPC.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7c902e4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ac5481c.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoNPCOperateSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ac1cb2e.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_765a638.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.TNPCServiceData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.EHirelingClass.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FConvertsDamageToDamageStates.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6bce993.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6b4a81d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMonsterFamily.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 82,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzArchetype.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBaseElement.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMainHand.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 98,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOffHand.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 98,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLevelScaling.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.NGoldGranted.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTreasureClass.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTreasureClassElite.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTreasureClassSuperElite.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSummonLifetime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSummonMaxConcurrent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSummonMaxTotal.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArAIBehaviors.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       1,
		Group:       3,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.BKillSummonsOnDeath.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSummonActor.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       1,
		Group:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSummonActors.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAffixes.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
		Group:       107,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c8306c.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDisallowedAffixes.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 107,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAITargetStyleNormal.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+292, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAITargetStyleElite.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_130279f.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 42,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+300, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4b9e5c9.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 42,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e7a2637.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+308, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzInternalName.UnmarshalD4(r, &Options{
		ArrayLength: 128,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+436, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d3dddc4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+440, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_50569ba.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+444, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7a3dc4a.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+448, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMount.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+452, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerPossessed.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+456, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87dbd3a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+460, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7859c5b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+464, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsWorldBoss.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+468, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bc58cee.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+472, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7fdab9c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+476, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e7ee8f1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+480, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e4c90d3.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+484, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_12ecd6a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+488, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHPScalarOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+492, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDamageScalarOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+496, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c2cc767.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+500, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoStaggerPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+504, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoStaggerSettings.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 130,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+508, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoBossObserver.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 26,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+512, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1627b04.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+516, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_401e0d6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+520, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_401dfd8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+524, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f68cd00.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+528, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f68cc02.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+532, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_16266ca.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+536, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5428a5e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+540, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3b9132c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+544, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c0cc954.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+548, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d5178b2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+552, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e08f0df.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+560, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MaterialEnumValueDefinition struct {
	// Inherits DefaultMaterialValueDefinition
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
	VValue DT_VECTOR4D
}

func (t *MaterialEnumValueDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.VValue.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_2f8b25ef struct {
	I1            DT_INT
	I2            DT_INT
	I3            DT_INT
	W1            DT_INT
	W2            DT_INT
	W3            DT_INT
	DwMaterialId  DT_WORD
	DwGameFlags   DT_WORD
	DwIncludeMask DT_WORD
}

func (t *Type_2f8b25ef) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.I1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.I2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.I3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.W1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.W2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.W3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMaterialId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+26, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwGameFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwIncludeMask.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Currencies_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*Currencies]
}

func (t *Currencies_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WorldTierUnlockedMessage struct {
	THeader    RequiredMessageHeader
	EWorldTier DT_INT
}

func (t *WorldTierUnlockedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EWorldTier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_2fce7154 struct{}

func (t *Type_2fce7154) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+1, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SpeedTreeWind8 struct {
	// Inherits SpeedTreeWindBase
	// Inherits PolymorphicBase
	DwType  DT_UINT
	DwPad   DT_UINT
	TParams SpeedTreeWind8Params
}

func (t *SpeedTreeWind8) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TParams.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1000, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BoneStructureInfo struct {
	TBoneName       AppBone
	TParentBoneName AppBone
	FSnapGround     DT_INT
}

func (t *BoneStructureInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TBoneName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TParentBoneName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FSnapGround.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerActorSetInitialMessage struct {
	THeader     RequiredMessageHeader
	Ann         DT_ACD_NETWORK_NAME
	Unk_dce541c DT_UINT
}

func (t *PlayerActorSetInitialMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_300a1e1b struct {
	// Inherits Type_7e418ba8
	// Inherits PolymorphicBase
	DwType       DT_UINT
	Unk_2de4987  DT_UINT
	ArConditions DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	BEnd         DT_INT
	DwPad        DT_UINT
	Unk_b8abd18  DT_FLOAT
}

func (t *Type_300a1e1b) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2de4987.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEnd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b8abd18.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_303dbf00 struct {
	DwType      DT_UINT
	Unk_9b2bc26 Type_340f2b52
	Unk_77ed19a DT_ENUM
	DwPad       DT_UINT
}

func (t *Type_303dbf00) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b2bc26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77ed19a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LoreDefinition struct {
	NXPTier         DT_INT
	SnoConversation DT_SNO
}

func (t *LoreDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NXPTier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoConversation.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 12,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_30511dbc struct {
	DwFormulaHash DT_UINT
	BEvaluateOnce DT_INT
}

func (t *Type_30511dbc) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFormulaHash.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEvaluateOnce.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnDotApplyBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnDotApplyBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerPayloadDefinition struct {
	Unk_84473c1                DT_SNO
	Unk_2c0d1b7                DT_SNO
	DwID                       DT_UINT
	EForcedDamageType          DT_ENUM
	TDamage                    HitpointSpecifier
	Unk_16bcce1                DT_INT
	TDamageVariance            DT_STRING_FORMULA
	Unk_c1c7b04                DT_INT
	Unk_907cc39                DT_STRING_FORMULA
	TFortifiedHealth           HitpointSpecifier
	TApplyFreeze               DT_STRING_FORMULA
	Unk_634341a                DT_STRING_FORMULA
	Unk_e659b0f                DT_ENUM
	THeal                      HitpointSpecifier
	EHealType                  DT_ENUM
	Unk_58227bf                DT_INT
	Unk_8bc45f2                DT_INT
	Unk_15c6c03                DT_INT
	Unk_e842c84                DT_INT
	Unk_b8f2b                  DT_ENUM
	Unk_79ce2e1                DT_INT
	TCombatEffectOverride      DT_STRING_FORMULA
	Unk_ddcd868                DT_ENUM
	SnoNormalHitEffectGroup    DT_SNO
	SnoTargetImpactEffectGroup DT_SNO
	Unk_b65cd61                DT_FLOAT
	IPowerNeedTarget           DT_INT
	Unk_b9a00d9                DT_INT
	Unk_969096b                DT_INT
	Unk_5885b8                 DT_ENUM
	Unk_f38eac9                DT_INT
	Unk_67260fc                Type_3940c0fe
}

func (t *PowerPayloadDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_84473c1.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 98,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2c0d1b7.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 98,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.EForcedDamageType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDamage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_16bcce1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDamageVariance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c1c7b04.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_907cc39.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFortifiedHealth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.TApplyFreeze.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_634341a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e659b0f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+312, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeal.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+384, io.SeekStart); err != nil {
		return err
	}
	if err := t.EHealType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+388, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_58227bf.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+392, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8bc45f2.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+396, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_15c6c03.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+400, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e842c84.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+404, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b8f2b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+408, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_79ce2e1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+416, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCombatEffectOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+448, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ddcd868.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+452, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoNormalHitEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+456, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTargetImpactEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+460, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b65cd61.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+464, io.SeekStart); err != nil {
		return err
	}
	if err := t.IPowerNeedTarget.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+468, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b9a00d9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+472, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_969096b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+476, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5885b8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+480, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f38eac9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+484, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_67260fc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+496, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AICellBytes struct {
	M_data DT_VARIABLEARRAY[*DT_BYTE]
}

func (t *AICellBytes) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_data.UnmarshalD4(r, &Options{Flags: 262144}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SurfaceGrid struct {
	Grid         DT_VARIABLEARRAY[*DT_WORD]
	ArPrimitives DT_VARIABLEARRAY[*SurfaceGridPrimitive]
	AabbBounds   AABB
	DwRows       DT_UINT
	DwColumns    DT_UINT
}

func (t *SurfaceGrid) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Grid.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPrimitives.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.AabbBounds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwRows.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwColumns.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ExperienceLevelAlt_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*ExperienceLevelAlt]
}

func (t *ExperienceLevelAlt_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SavedPlayerTitle struct {
	SnoPrefix DT_SNO
	SnoSuffix DT_SNO
}

func (t *SavedPlayerTitle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPrefix.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 120,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSuffix.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 120,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_31220ee1 struct {
	FlZoomScaleMin DT_FLOAT
	Unk_dee8d29    DT_FLOAT
	FlZoomScaleMax DT_FLOAT
	Unk_92c785e    DT_FLOAT
	Unk_1f05fd7    DT_FLOAT
	Unk_a465346    DT_FLOAT
	Unk_4548ccf    DT_FLOAT
	Unk_33bda99    DT_FLOAT
	Unk_1c550ca    DT_FLOAT
	Unk_6d6c5ac    DT_FLOAT
	Unk_1b2420c    DT_FLOAT
	Unk_7e4ef05    DT_FLOAT
	Unk_9814907    DT_FLOAT
	Unk_fde953b    DT_FLOAT
	Unk_cc72c59    DT_FLOAT
	Unk_a19ea25    DT_INT
	Unk_9c74994    DT_FLOAT
}

func (t *Type_31220ee1) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlZoomScaleMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dee8d29.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlZoomScaleMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_92c785e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1f05fd7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a465346.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4548ccf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_33bda99.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1c550ca.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d6c5ac.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1b2420c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7e4ef05.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9814907.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fde953b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cc72c59.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a19ea25.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c74994.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WwiseMetaDataSoundBank struct {
	// Inherits WwiseSoundBankContentBase
	// Inherits PolymorphicBase
	DwType          DT_UINT
	DwPad           DT_UINT
	Unk_ce10c35     DT_VARIABLEARRAY[*Type_d6dab54d]
	PtWWiseBank     DT_VARIABLEARRAY[*DT_BYTE]
	ArMusicSegments DT_VARIABLEARRAY[*Type_53844691]
}

func (t *WwiseMetaDataSoundBank) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ce10c35.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtWWiseBank.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArMusicSegments.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_31555106 struct {
	TDuration   DT_STRING_FORMULA
	Unk_bb865d0 DT_INT
}

func (t *Type_31555106) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bb865d0.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_31826a49 struct {
	ArSegmentIndices DT_VARIABLEARRAY[*DT_INT]
}

func (t *Type_31826a49) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSegmentIndices.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PortalTransferSetupMessage struct {
	THeader      RequiredMessageHeader
	DwPortalType DT_UINT
	Unk_1bf9922  DT_INT
	SnoLevelArea DT_SNO
	SnoSubzone   DT_SNO
	BDungeon     DT_INT
}

func (t *PortalTransferSetupMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPortalType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1bf9922.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelArea.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSubzone.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.BDungeon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_31c26ca2 struct {
	Value                   DT_VECTOR4D
	BIsDungeonRewardMessage DT_INT
	Unk_411da82             Type_41b30aab
}

func (t *Type_31c26ca2) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Value.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsDungeonRewardMessage.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_411da82.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Structure struct {
	PtCollisionMeshes   DT_VARIABLEARRAY[*CollisionMesh]
	PtCollisionCapsules DT_VARIABLEARRAY[*CollisionCapsule]
	PtChunks            DT_VARIABLEARRAY[*GeoChunk]
	PtSceneData         DT_VARIABLEARRAY[*SceneData]
	PtBoneData          DT_VARIABLEARRAY[*BoneData]
	DwFlags             DT_UINT
	Unk_6bd8898         DT_FLOAT
	WsBounds            Sphere
	AabbBounds          AABB
	Unk_d8c9b68         DT_INT
	PtPostprocessed     DT_INT64
}

func (t *Structure) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtCollisionMeshes.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtCollisionCapsules.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtChunks.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtSceneData.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtBoneData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6bd8898.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.WsBounds.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.AabbBounds.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d8c9b68.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPostprocessed.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RopeDefinition struct {
	DwRopeFlags                        DT_UINT
	NWidth                             DT_INT
	NTraversalWidth                    DT_INT
	Unk_5be6305                        DT_FLOAT
	FlLength                           DT_FLOAT
	FlMass                             DT_FLOAT
	FlMassTaperFactor                  DT_FLOAT
	FlMassEnd                          DT_FLOAT
	FTextureRepeatCount                DT_FLOAT
	NRopeType                          DT_ENUM
	Unk_faa043c                        DT_INT
	Unk_daaa964                        DT_FLOAT
	FlStiffness                        DT_FLOAT
	Unk_e590d3c                        Type_cbfdd2ea
	Unk_24547d4                        Type_cbfdd2ea
	SnoMaterial                        DT_SNO
	SnoPhysics                         DT_SNO
	FlWindFactor                       DT_FLOAT
	TSystemDurationRange               DT_RANGE[*DT_FLOAT]
	TSystemDurationScalar              InterpolationScalar
	FlOutroDuration                    DT_FLOAT
	PathColorOverTime                  Type_560ae4cf
	PathColorOverLength                Type_560ae4cf
	PathAlpha                          Type_cbfdd2ea
	PathAlphaOverLength                Type_cbfdd2ea
	Unk_ab00250                        Type_cbfdd2ea
	Unk_3c8d383                        Type_cbfdd2ea
	Unk_d96e4e6                        Type_cbfdd2ea
	Unk_bf2b399                        Type_cbfdd2ea
	Unk_abcab5e                        Type_cbfdd2ea
	Unk_9a3f811                        Type_cbfdd2ea
	Unk_3a6dc3c                        Type_cbfdd2ea
	Unk_5ddd86f                        Type_cbfdd2ea
	PathWidthOverTime                  Type_cbfdd2ea
	PathWidthOverLength                Type_cbfdd2ea
	PathSourcePointWorldUpMotion       Type_cbfdd2ea
	PathSourcePointAlongRopeMotion     Type_cbfdd2ea
	PathSourcePointPerpendicularMotion Type_cbfdd2ea
	Unk_fd2b7ac                        Type_cbfdd2ea
	PathDestPointWorldUpMotion         Type_cbfdd2ea
	PathDestPointAlongRopeMotion       Type_cbfdd2ea
	PathDestPointPerpendicularMotion   Type_cbfdd2ea
	PathSeparation                     Type_cbfdd2ea
	PathXAmpOverLength                 Type_cbfdd2ea
	PathYAmpOverLength                 Type_cbfdd2ea
	Unk_14d71e7                        Type_cbfdd2ea
	Unk_3e97148                        Type_cbfdd2ea
	PathFreqOverTime                   Type_cbfdd2ea
	PathPhaseSpeedOverTime             Type_cbfdd2ea
	Unk_e85eb5                         DT_RANGE[*DT_FLOAT]
	Unk_f7381a2                        DT_RANGE[*DT_FLOAT]
	Unk_bc10ec1                        DT_RANGE[*DT_FLOAT]
	Unk_6a3b8c1                        Type_cbfdd2ea
	Unk_a74800e                        Type_cbfdd2ea
	Unk_a85b95c                        DT_RANGE[*DT_FLOAT]
	Unk_910dc49                        DT_RANGE[*DT_FLOAT]
	Unk_fa52de8                        DT_RANGE[*DT_FLOAT]
	Unk_c44c7c8                        Type_cbfdd2ea
	Unk_4a82155                        Type_cbfdd2ea
	NNoiseFrequency                    DT_INT
	TNoiseRateRange                    DT_RANGE[*DT_FLOAT]
	PathNoiseRangeOverLength           Type_cbfdd2ea
	PathTangentSourceOverTime          VectorPath
	PathTangentDestinationOverTime     VectorPath
	PtMsgTriggeredEvents               DT_VARIABLEARRAY[*MsgTriggeredEvent]
	DwMaxSystems                       DT_UINT
}

func (t *RopeDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwRopeFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.NWidth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NTraversalWidth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5be6305.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMass.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMassTaperFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMassEnd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.FTextureRepeatCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.NRopeType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_faa043c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_daaa964.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlStiffness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e590d3c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_24547d4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMaterial.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 57,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPhysics.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 28,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlWindFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSystemDurationRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSystemDurationScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+228, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOutroDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathColorOverTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathColorOverLength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+344, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathAlpha.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+400, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathAlphaOverLength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+456, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab00250.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+512, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3c8d383.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+568, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d96e4e6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+624, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bf2b399.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+680, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_abcab5e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+736, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a3f811.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+792, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3a6dc3c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+848, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5ddd86f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+904, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathWidthOverTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+960, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathWidthOverLength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1016, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathSourcePointWorldUpMotion.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1072, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathSourcePointAlongRopeMotion.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1128, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathSourcePointPerpendicularMotion.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd2b7ac.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1240, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathDestPointWorldUpMotion.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1296, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathDestPointAlongRopeMotion.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1352, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathDestPointPerpendicularMotion.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1408, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathSeparation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1464, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathXAmpOverLength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1520, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathYAmpOverLength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1576, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_14d71e7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1632, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3e97148.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1688, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathFreqOverTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1744, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathPhaseSpeedOverTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1800, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e85eb5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1808, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f7381a2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1816, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bc10ec1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1824, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6a3b8c1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1880, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a74800e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1936, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a85b95c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1944, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_910dc49.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1952, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fa52de8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1960, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c44c7c8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2016, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4a82155.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2072, io.SeekStart); err != nil {
		return err
	}
	if err := t.NNoiseFrequency.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2076, io.SeekStart); err != nil {
		return err
	}
	if err := t.TNoiseRateRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2088, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathNoiseRangeOverLength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2144, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathTangentSourceOverTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2200, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathTangentDestinationOverTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2256, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtMsgTriggeredEvents.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2272, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMaxSystems.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2280, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WorldTierSubcondition struct {
	// Inherits Type_d3c3637f
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType        DT_UINT
	BNegate       DT_INT
	EComparisonOp DT_ENUM
	DwPad         DT_UINT
	EWorldTier    DT_ENUM
}

func (t *WorldTierSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.EWorldTier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type FogVolumeInstanceData struct {
	EShape            DT_ENUM
	FlDensity         DT_FLOAT
	FlHeightScale     DT_FLOAT
	FlNoiseScale      DT_FLOAT
	Unk_5050283       DT_FLOAT
	FlNoiseOffset     DT_FLOAT
	FlEmissive        DT_FLOAT
	Unk_9e04ce9       DT_FLOAT
	FlAbsorptionCoeff DT_FLOAT
	FlFlowSpeed       DT_FLOAT
	FlFlowPower       DT_FLOAT
	FlInnerScale      DT_FLOAT
	Unk_b345994       DT_FLOAT
	Unk_4d7c109       DT_FLOAT
	Unk_29ac45        DT_FLOAT
	DwFogFlags        DT_UINT
	Unk_56127ed       DT_ENUM
	FlWindSpeedFactor DT_FLOAT
	PathHeightColor   Type_560ae4cf
	BUseMask          DT_INT
}

func (t *FogVolumeInstanceData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EShape.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDensity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHeightScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlNoiseScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5050283.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlNoiseOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlEmissive.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9e04ce9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAbsorptionCoeff.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFlowSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFlowPower.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlInnerScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b345994.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4d7c109.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_29ac45.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFogFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_56127ed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlWindSpeedFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathHeightColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.BUseMask.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_3256e101 struct {
	SnoClickSound     DT_SNO
	SnoMouseOverSound DT_SNO
}

func (t *Type_3256e101) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoClickSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMouseOverSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ACDTranslateSyncMessage struct {
	THeader   RequiredMessageHeader
	Ann       DT_ACD_NETWORK_NAME
	VDestX    DT_OPTIONAL[*DT_INT]
	VDestY    DT_OPTIONAL[*DT_INT]
	VDestZ    DT_OPTIONAL[*DT_INT]
	BSnap     DT_OPTIONAL[*DT_INT]
	UAckValue DT_OPTIONAL[*DT_UINT]
}

func (t *ACDTranslateSyncMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.VDestX.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.VDestY.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.VDestZ.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.BSnap.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.UAckValue.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TryRepairAllMessage struct {
	THeader   RequiredMessageHeader
	BEquipped DT_INT
	BBackpack DT_INT
	BStash    DT_INT
}

func (t *TryRepairAllMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEquipped.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BBackpack.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.BStash.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerSoundData struct {
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
}

func (t *MarkerSoundData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ServerNotificationDataMessage struct {
	THeader RequiredMessageHeader
	USec    DT_UINT
	EType   DT_ENUM
}

func (t *ServerNotificationDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.USec.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnHealingReceivedBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnHealingReceivedBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ItemTier struct {
	SnoHead     DT_SNO
	SnoTorso    DT_SNO
	SnoFeet     DT_SNO
	SnoHands    DT_SNO
	SnoLegs     DT_SNO
	SnoMainHand DT_SNO
	SnoOffHand  DT_SNO
	Unk_10ef80a DT_SNO
	Unk_2424420 DT_SNO
	Unk_7757fd6 DT_SNO
	Unk_9e2632  DT_SNO
	Unk_6ce8668 DT_SNO
	SnoDye      DT_SNO
	SzName      DT_UINT
}

func (t *ItemTier) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoHead.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTorso.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFeet.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoHands.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLegs.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMainHand.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOffHand.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_10ef80a.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2424420.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7757fd6.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9e2632.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6ce8668.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDye.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 122,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ACDForceAddedMessage struct {
	THeader     RequiredMessageHeader
	Ann         DT_ACD_NETWORK_NAME
	Unk_1833d57 DT_VECTOR3D
	FlSecs      DT_FLOAT
}

func (t *ACDForceAddedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1833d57.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSecs.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActiveSkillEntry struct {
	SnoPower    DT_SNO
	Unk_cc81097 DT_INT
	NLevelReq   DT_INT
}

func (t *ActiveSkillEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cc81097.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLevelReq.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CollisionCapsule struct {
	FlRadiusA    DT_FLOAT
	FlRadiusB    DT_FLOAT
	FlLength     DT_FLOAT
	THardpoint   Hardpoint
	DwShapeFlags DT_UINT
	Unk_d094b9a  DT_ENUM
}

func (t *CollisionCapsule) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRadiusA.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRadiusB.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpoint.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwShapeFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d094b9a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_340f2b52 struct {
	ArNodes     DT_VARIABLEARRAY[*Type_41e68f26]
	Unk_36cc429 DT_VARIABLEARRAY[*DT_INT]
}

func (t *Type_340f2b52) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArNodes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_36cc429.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayLineParams struct {
	SnoConversation       DT_SNO
	SnoParentConversation DT_SNO
	Unk_d85ca94           DT_INT
	BFirstLine            DT_INT
	DwLineUID             DT_UINT
	Unk_3528310           DT_UINT
	ELineGender           DT_ENUM
	ELineClass            DT_ENUM
	Unk_1dc956e           DT_UINT
	EPlayerGender         DT_ENUM
	EPlayerClass          DT_ENUM
	SnoSpeaker            DT_SNO
	DwLineFlags           DT_UINT
	FlLineDisplayTime     DT_FLOAT
	NLineGUID             DT_INT
	SnoSoundOverride      DT_SNO
	Unk_8c9c6ba           Type_72ffea44
}

func (t *PlayLineParams) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoConversation.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 12,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoParentConversation.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 12,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d85ca94.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.BFirstLine.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwLineUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3528310.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ELineGender.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.ELineClass.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1dc956e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPlayerGender.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPlayerClass.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSpeaker.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 72,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwLineFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLineDisplayTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLineGUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSoundOverride.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8c9c6ba.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIDownloadImageStyle struct {
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
}

func (t *UIDownloadImageStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameTestingNPCSamplingStartMessage struct {
	THeader        RequiredMessageHeader
	SzLocationName DT_CHARARRAY
	SnoWorld       DT_SNO
	SnoActor       DT_SNO
	NActorCount    DT_INT
}

func (t *GameTestingNPCSamplingStartMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLocationName.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.NActorCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_343baac3 struct {
	Unk_1fa233b DT_ENUM
	Unk_76177c6 DT_VARIABLEARRAY[*Type_6a8a63e0]
}

func (t *Type_343baac3) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1fa233b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_76177c6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestSwitchGizmoData struct {
	// Inherits NamedGizmoData
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
	TLockData                    LockingGizmoData
}

func (t *QuestSwitchGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLockData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimationDefinition struct {
	DwNextID                 DT_UINT
	DwFlags                  DT_UINT
	EPlaybackMode            DT_ENUM
	Unk_38fab0d              DT_ENUM
	ESelectionOrder          DT_ENUM
	Unk_ba85a8e              DT_INT
	BAlternatesAnims         DT_INT
	SnoAppearance            DT_SNO
	PtPermutations           DT_VARIABLEARRAY[*AnimPermutation]
	ArPermutationIndices     DT_VARIABLEARRAY[*DT_INT]
	PtRepeatablePermutations DT_VARIABLEARRAY[*DT_BYTE]
	Unk_88ce6d6              DT_INT
	Unk_5316586              DT_INT
}

func (t *AnimationDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNextID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPlaybackMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_38fab0d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESelectionOrder.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ba85a8e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.BAlternatesAnims.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAppearance.UnmarshalD4(r, &Options{
		Flags: 769,
		Group: 9,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPermutations.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPermutationIndices.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtRepeatablePermutations.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_88ce6d6.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5316586.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerNoMountVolumeData struct {
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	Unk_75ac63e DT_ENUM
}

func (t *MarkerNoMountVolumeData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_75ac63e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_349ba61e struct {
	THeader     RequiredMessageHeader
	Unk_dce541c DT_UINT
	Unk_b88123b DT_CHARARRAY
	Unk_f1dc826 DT_CHARARRAY
}

func (t *Type_349ba61e) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b88123b.UnmarshalD4(r, &Options{
		ArrayLength: 49,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+69, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f1dc826.UnmarshalD4(r, &Options{
		ArrayLength: 49,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type VoiceActorEntry struct {
	THeader GBIDHeader
}

func (t *VoiceActorEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UpgradeItemMessage struct {
	THeader   RequiredMessageHeader
	AnnItem   DT_ACD_NETWORK_NAME
	AnnVendor DT_ACD_NETWORK_NAME
}

func (t *UpgradeItemMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnItem.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnVendor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerConditions struct {
	FlChance              DT_FLOAT
	BMute                 DT_INT
	BMuteExternal         DT_INT
	TDelay                DT_FLOAT
	TImpactVelocityRange  DT_RANGE[*DT_FLOAT]
	TImpactWeightRange    DT_RANGE[*DT_FLOAT]
	EMaterial             DT_ENUM
	DwConditionFlags      DT_UINT
	EPlayerCountCondition DT_ENUM
	Unk_b51df67           DT_ENUM
	DwPad                 DT_UINT
}

func (t *TriggerConditions) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlChance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.BMute.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.BMuteExternal.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDelay.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TImpactVelocityRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TImpactWeightRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMaterial.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwConditionFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPlayerCountCondition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b51df67.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_352f49ec struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType         DT_UINT
	BInverse       DT_INT
	DwPad          DT_UINT
	SzVariableName DT_UINT
	FlValue        DT_FLOAT
}

func (t *Type_352f49ec) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzVariableName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnKillBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnKillBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimDepthOfField struct {
	FlFStop         DT_FLOAT
	FlFocalDistance DT_FLOAT
}

func (t *AnimDepthOfField) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFStop.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFocalDistance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalZoneProgressData struct {
	// Inherits GlobalBase
	// Inherits PolymorphicBase
	DwType               DT_UINT
	DwPad                DT_UINT
	Unk_5a84245          DT_CSTRING[*DT_BYTE]
	ArPerZoneData        DT_FIXEDARRAY[*Type_b1cccfae]
	Unk_83a373           DT_FIXEDARRAY[*DT_INT]
	Unk_2d36569          DT_FIXEDARRAY[*DT_INT]
	ArRewardStringLabels DT_FIXEDARRAY[*DT_UINT]
	Unk_7f27ec0          DT_FIXEDARRAY[*DT_UINT]
	Unk_980ba0f          DT_VARIABLEARRAY[*Type_ba2327fc]
}

func (t *GlobalZoneProgressData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5a84245.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPerZoneData.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1712, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_83a373.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1736, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2d36569.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1756, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArRewardStringLabels.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1764, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7f27ec0.UnmarshalD4(r, &Options{
		ArrayLength: 7,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1792, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_980ba0f.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1808, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_357c091e struct {
	Unk_20a6d7a DT_VECTOR3D
	Unk_9fd3bed DT_VECTOR3D
}

func (t *Type_357c091e) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_20a6d7a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9fd3bed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_35a12884 struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *Type_35a12884) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorPlayerData struct {
	EGender                    DT_ENUM
	EPlayerClass               DT_ENUM
	Unk_b50cfcc                DT_FLOAT
	ArSkinColorChoices         DT_VARIABLEARRAY[*PersonaSkinColor]
	SnoPowerPassives           DT_VARIABLEARRAY[*DT_SNO]
	FlIrisSize                 DT_FLOAT
	ArWarningConversationLines DT_FIXEDARRAY[*ConversationNodeReference]
	ArConditionalAudioStates   DT_VARIABLEARRAY[*ConditionalAudioState]
}

func (t *ActorPlayerData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EGender.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPlayerClass.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b50cfcc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSkinColorChoices.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerPassives.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlIrisSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArWarningConversationLines.UnmarshalD4(r, &Options{
		ArrayLength: 26,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditionalAudioStates.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerLevelRangeSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType    DT_UINT
	BNegate   DT_INT
	DwPad     DT_UINT
	NMinLevel DT_INT
	NMaxLevel DT_INT
}

func (t *PlayerLevelRangeSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMinLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMaxLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_36030d2d struct {
	ArTracks DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *Type_36030d2d) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArTracks.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UniqueOperatorChestGizmoData struct {
	// Inherits ChestGizmoData
	// Inherits NamedGizmoData
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                            DT_UINT
	FDisableNonFriendlyOperation      DT_INT
	FWalkToCenter                     DT_INT
	FGizmoStartsDisabled              DT_INT
	FUseStringListName                DT_INT
	FForceMinimapIcon                 DT_INT
	FlOperationRadius                 DT_FLOAT
	Unk_d0b1df5                       DT_FLOAT
	FlGizmoUseTime                    DT_FLOAT
	SnoChannelingEffect               DT_SNO
	Unk_2767229                       DT_INT
	FGizmoShowProgressBar             DT_INT
	Unk_6d9ebe1                       DT_INT
	Unk_5456245                       DT_INT
	Unk_af5815a                       DT_INT
	SnoOnClickEffect                  DT_SNO
	SnoPickedUpEffect                 DT_SNO
	SnoDropOnGroundEffect             DT_SNO
	TConditionData                    GizmoConditionData
	SnoPowerOperator                  DT_SNO
	SnoPowerOperate                   DT_SNO
	SnoPowerOperatorActive            DT_SNO
	SnoPowerOperateActive             DT_SNO
	Unk_359810e                       DT_INT
	NCooldown                         DT_UINT
	Unk_9c8478e                       DT_UINT
	Unk_d45ed2d                       DT_INT
	Unk_f6b20b7                       DT_INT
	Unk_54513b8                       DT_INT
	Unk_fd1f378                       DT_UINT
	Unk_487c14                        DT_UINT
	Unk_87f2609                       DT_UINT
	Unk_158eb4f                       DT_FLOAT
	Unk_ab58cd3                       DT_ENUM
	Unk_91a3966                       DT_UINT
	Unk_25312e5                       DT_UINT
	Unk_4be4371                       DT_INT
	SnoTreasureClass                  DT_SNO
	TLockData                         LockingGizmoData
	FChestRemovesCollisionOnOperation DT_INT
	FChestOperatesOnProximity         DT_INT
	FChestLight                       DT_INT
	Unk_51b0c11                       DT_INT
	Unk_6b4a81d                       DT_FLOAT
	DwPad                             DT_UINT
}

func (t *UniqueOperatorChestGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTreasureClass.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLockData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.FChestRemovesCollisionOnOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.FChestOperatesOnProximity.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.FChestLight.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_51b0c11.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6b4a81d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SubzoneModifierStateMessage struct {
	THeader                RequiredMessageHeader
	GbidSubzoneModifierTag DT_GBID
	SnoSubzone             DT_SNO
	DwStartTime            DT_INT64
	DwEndTime              DT_INT64
	SnoQuest               DT_SNO
	WpLocation             DT_VECTOR3D
	NWorldStateValue       DT_INT
	BShouldNotify          DT_INT
}

func (t *SubzoneModifierStateMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidSubzoneModifierTag.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 60,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSubzone.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwStartTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwEndTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpLocation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.NWorldStateValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.BShouldNotify.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventFoley struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType             DT_UINT
	DwPad              DT_UINT
	TConditions        TriggerConditions
	FGenerated         DT_INT
	Unk_6cba752        DT_INT
	Unk_e560b0b        DT_UINT
	THardpointLink     HardpointLink
	SzFoleyTypeTag     DT_UINT
	SnoFoleySoundTable DT_SNO
	Unk_e6137fe        DT_UINT
	FMustAttach        DT_INT
	DwID               DT_UINT
	TCleanup           TriggerCleanup
}

func (t *TriggerEventFoley) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzFoleyTypeTag.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFoleySoundTable.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e6137fe.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.FMustAttach.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TexAnim struct {
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	FlUScale DT_FLOAT
	FlVScale DT_FLOAT
}

func (t *TexAnim) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlUScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlVScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionDungeonTier struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
	ETier    DT_ENUM
}

func (t *PowerConditionDungeonTier) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CommandFrameSynchronizeMessage struct {
	THeader       RequiredMessageHeader
	UCommandFrame DT_UINT
	Unk_b0fd968   DT_UINT
	UFlags        DT_BYTE
}

func (t *CommandFrameSynchronizeMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.UCommandFrame.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b0fd968.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.UFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ObjectiveRegionParams struct {
	TDefault           Type_8b736c4
	THover             Type_8b736c4
	TTracked           Type_8b736c4
	THoverTracked      Type_8b736c4
	FlFalloffThickness DT_FLOAT
	FlThickness        DT_FLOAT
	SnoPattern         DT_SNO
	FlPatternRepeats   DT_FLOAT
	FlPatternThickness DT_FLOAT
}

func (t *ObjectiveRegionParams) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDefault.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.THover.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTracked.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.THoverTracked.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFalloffThickness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlThickness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPattern.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPatternRepeats.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPatternThickness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventMusic struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
	SnoMusic    DT_SNO
}

func (t *TriggerEventMusic) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMusic.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 62,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ShaderDefinition struct {
	DwRenderLayers DT_UINT
	PtPasses       DT_VARIABLEARRAY[*RenderPass]
	Unk_860effa    DT_INT
	Unk_cee0ffd    DT_CHARARRAY
	PShaderData    DT_VARIABLEARRAY[*DT_BYTE]
}

func (t *ShaderDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwRenderLayers.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPasses.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_860effa.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cee0ffd.UnmarshalD4(r, &Options{ArrayLength: 256}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	if err := t.PShaderData.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+312, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BoolDataMessage struct {
	THeader RequiredMessageHeader
	BVal    DT_INT
}

func (t *BoolDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BVal.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventVoice struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType             DT_UINT
	DwPad              DT_UINT
	TConditions        TriggerConditions
	FGenerated         DT_INT
	Unk_6cba752        DT_INT
	Unk_e560b0b        DT_UINT
	THardpointLink     HardpointLink
	SzVoiceTypeTag     DT_UINT
	SnoVoiceSoundTable DT_SNO
	DwID               DT_UINT
	TCleanup           TriggerCleanup
}

func (t *TriggerEventVoice) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzVoiceTypeTag.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoVoiceSoundTable.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NpcLookEntry struct {
	GbidLookTag           DT_GBID
	SnoMaleComponentSet   DT_SNO
	SnoMaleAppearance     DT_SNO
	SnoFemaleComponentSet DT_SNO
	SnoFemaleAppearance   DT_SNO
	Unk_f54a1d            DT_SNO
	Unk_ca2e3e1           DT_SNO
	ArAnimSetOverrides    DT_VARIABLEARRAY[*AnimSetOverrideEntry]
	EActorVariantType     DT_ENUM
	SzToolTip             DT_CSTRING[*DT_BYTE]
	Unk_83f3d3e           DT_INT
	FHideIdles            DT_INT
	Unk_fd60c8f           DT_INT
	Unk_8711100           DT_INT
	Unk_d289db4           DT_INT
	Unk_c3784ea           DT_INT
}

func (t *NpcLookEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidLookTag.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMaleComponentSet.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 2,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMaleAppearance.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 9,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFemaleComponentSet.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 2,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFemaleAppearance.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 9,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f54a1d.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ca2e3e1.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 67,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArAnimSetOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.EActorVariantType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzToolTip.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_83f3d3e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.FHideIdles.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd60c8f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8711100.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d289db4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c3784ea.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIHotbarButtonStyle struct {
	// Inherits UIButtonStyle
	// Inherits UITextStyle
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	TFont                     UIControlFont
	Unk_4741819               DT_TAGMAP[*DT_ENUM]
	TIcon                     UIControlIcon
	TClickSounds              Type_98c23c41
	Unk_10f81f0               DT_TAGMAP[*DT_ENUM]
	Unk_3c001f0               DT_TAGMAP[*DT_ENUM]
}

func (t *UIHotbarButtonStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFont.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4741819.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.TIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.TClickSounds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_10f81f0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3c001f0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EmoteDefinition struct {
	SnoPower       DT_SNO
	HImageNormal   DT_UINT
	HImageHover    DT_UINT
	HImageDisabled DT_UINT
}

func (t *EmoteDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.HImageNormal.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HImageHover.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.HImageDisabled.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerLightData struct {
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType        DT_UINT
	DwPad         DT_UINT
	TInstanceData LightInstanceData
	Unk_ef69835   DT_INT
}

func (t *MarkerLightData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TInstanceData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+912, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ef69835.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+920, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ListenerReaction struct {
	SnoListener DT_SNO
	SnonameAnim DT_SNO_NAME
}

func (t *ListenerReaction) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoListener.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 72,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnonameAnim.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EnterKnownShaderMapOverrides struct {
	AShaderMapOverrides DT_FIXEDARRAY[*DT_UINT]
}

func (t *EnterKnownShaderMapOverrides) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.AShaderMapOverrides.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NecroArmyUnitSpecializationSacrificeData struct {
	SnoSacrificePower DT_SNO
}

func (t *NecroArmyUnitSpecializationSacrificeData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSacrificePower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AttackerEnemiesParam struct {
	EScalarFunction     DT_ENUM
	EWwiseGameParameter DT_ENUM
	UID                 DT_UINT
	UNameHash           DT_UINT
	FBypass             DT_INT
}

func (t *AttackerEnemiesParam) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EScalarFunction.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EWwiseGameParameter.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.UID.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.UNameHash.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FBypass.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimTreeLayerName struct {
	DwHash DT_UINT
}

func (t *AnimTreeLayerName) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwHash.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_381d5201 struct {
	Value                   DT_FLOAT
	BIsDungeonRewardMessage DT_INT
	Unk_411da82             Type_cbfdd2ea
}

func (t *Type_381d5201) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Value.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsDungeonRewardMessage.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_411da82.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_3854c35b struct {
	Value                   DT_INT
	BIsDungeonRewardMessage DT_INT
	Unk_411da82             Type_cc354444
}

func (t *Type_3854c35b) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Value.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsDungeonRewardMessage.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_411da82.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DebugPlayerProcessHelpCodeMessage struct {
	THeader      RequiredMessageHeader
	Ann          DT_ACD_NETWORK_NAME
	GbidHelpCode DT_GBID
}

func (t *DebugPlayerProcessHelpCodeMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidHelpCode.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 9,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NotLogicSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType      DT_UINT
	BNegate     DT_INT
	DwPad       DT_UINT
	PtCondition DT_POLYMORPHIC_VARIABLEARRAY[*Subcondition]
}

func (t *NotLogicSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtCondition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupHardpoint struct {
	TInfo     HardpointInfo
	Transform PRTransform
}

func (t *EffectGroupHardpoint) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TInfo.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Transform.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ParametricSettings struct {
	FCavity                        DT_INT
	ECavityMode                    DT_ENUM
	FlCavityTolerance              DT_FLOAT
	FlCavitySmoothness             DT_FLOAT
	FHeight                        DT_INT
	FlHeightMin                    DT_FLOAT
	FlHeightMinSmoothness          DT_FLOAT
	FlHeightMax                    DT_FLOAT
	FlHeightMaxSmoothness          DT_FLOAT
	FSlope                         DT_INT
	FlSlopeMin                     DT_FLOAT
	FlSlopeMinSmoothness           DT_FLOAT
	FlSlopeMax                     DT_FLOAT
	FlSlopeMaxSmoothness           DT_FLOAT
	FDirection                     DT_INT
	FlDirectionAltitude            DT_FLOAT
	FlDirectionAzimuth             DT_FLOAT
	FlDirectionTolerance           DT_FLOAT
	FlDirectionSmoothness          DT_FLOAT
	FNoise                         DT_INT
	FlNoiseFrequency               DT_FLOAT
	FlNoiseTileDistance            DT_FLOAT
	FlNoiseMin                     DT_FLOAT
	FlNoiseMax                     DT_FLOAT
	VNoiseOffset                   DT_VECTOR2D
	FDistanceToWater               DT_INT
	FlDistanceToWaterMin           DT_FLOAT
	FlDistanceToWaterMinSmoothness DT_FLOAT
	FlDistanceToWaterMax           DT_FLOAT
	FlDistanceToWaterMaxSmoothness DT_FLOAT
	FInvert                        DT_INT
}

func (t *ParametricSettings) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FCavity.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECavityMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlCavityTolerance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlCavitySmoothness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FHeight.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHeightMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHeightMinSmoothness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHeightMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHeightMaxSmoothness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FSlope.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSlopeMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSlopeMinSmoothness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSlopeMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSlopeMaxSmoothness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDirection.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDirectionAltitude.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDirectionAzimuth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDirectionTolerance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDirectionSmoothness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.FNoise.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlNoiseFrequency.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlNoiseTileDistance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlNoiseMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlNoiseMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.VNoiseOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDistanceToWater.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDistanceToWaterMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDistanceToWaterMinSmoothness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDistanceToWaterMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDistanceToWaterMaxSmoothness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.FInvert.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GeneratorToItemResponseMessage struct {
	THeader Type_ad008e7e
	TItemId Type_f5ac91bb
	Ann     DT_ACD_NETWORK_NAME
}

func (t *GeneratorToItemResponseMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TItemId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_3940c0fe struct {
	Unk_85f3271 DT_SNO
	Unk_4588331 DT_SNO
	Unk_632d790 DT_SNO
}

func (t *Type_3940c0fe) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_85f3271.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4588331.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_632d790.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CraftMultipleMessage struct {
	THeader   RequiredMessageHeader
	SnoRecipe DT_SNO
	UAmount   DT_INT64
}

func (t *CraftMultipleMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRecipe.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 49,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.UAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerReflectionProbeData struct {
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType           DT_UINT
	DwPad            DT_UINT
	Unk_65aa6d9      DT_ENUM
	FlInnerScale     DT_FLOAT
	Unk_fb8100e      DT_FLOAT
	SnoTexture       DT_SNO
	QTextureRotation bcQuat
	Unk_340c842      DT_INT
	FHighQuality     DT_INT
	Unk_4f5b254      DT_VECTOR3D
	Unk_56127ed      DT_ENUM
}

func (t *MarkerReflectionProbeData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_65aa6d9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlInnerScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fb8100e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTexture.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.QTextureRotation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_340c842.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.FHighQuality.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4f5b254.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_56127ed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HearthPortalInfoMessage struct {
	THeader      RequiredMessageHeader
	SnoLevelArea DT_SNO
	AnnPortal    DT_ACD_NETWORK_NAME
	BResetUI     DT_INT
}

func (t *HearthPortalInfoMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelArea.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnPortal.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.BResetUI.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamOwnerFollower struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
	SnoActor   DT_SNO
}

func (t *ScriptEventParamOwnerFollower) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConditionalAudioState struct {
	TDefaultAudioState WwiseSwitchValue
	Unk_81dd55e        DT_VARIABLEARRAY[*Type_5e32bd3e]
}

func (t *ConditionalAudioState) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDefaultAudioState.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_81dd55e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerWorldTierSubcondition struct {
	// Inherits Type_d3c3637f
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType        DT_UINT
	BNegate       DT_INT
	EComparisonOp DT_ENUM
	DwPad         DT_UINT
	EWorldTier    DT_ENUM
}

func (t *PlayerWorldTierSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.EWorldTier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimSetPowerEntry struct {
	SnoPower              DT_SNO
	SnoAnim               DT_SNO
	SnoFemaleOverrideAnim DT_SNO
}

func (t *AnimSetPowerEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAnim.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 6,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFemaleOverrideAnim.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 6,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type FreezeDirectionMessage struct {
	THeader           RequiredMessageHeader
	AnnTarget         DT_OPTIONAL[*DT_ACD_NETWORK_NAME]
	Unk_5692531       DT_OPTIONAL[*DT_VECTOR3D]
	FlImpactDirection DT_OPTIONAL[*DT_FLOAT]
	Unk_a6fef34       DT_OPTIONAL[*DT_VECTOR3D]
}

func (t *FreezeDirectionMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5692531.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlImpactDirection.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a6fef34.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_3a911960 struct {
	BindVertices      DT_INT64
	BindNormals       DT_INT64
	Unk_1655a99       DT_INT64
	BlendWeights      DT_INT64
	Unk_55f9a53       DT_INT64
	DeltaFrames       DT_INT64
	Levels            DT_INT64
	AttachmentLengths DT_INT64
	ParentIndices     DT_INT64
	KinematicRoots    DT_INT64
	TangentIndices    DT_INT64
	Weights           DT_INT64
	DriverInfluences  DT_INT64
	FollowerIndices   DT_INT64
	Triangles         DT_INT64
	ConstraintIndices DT_INT64
	ConstraintLengths DT_INT64
	Unk_d55a167       DT_INT64
	Unk_e5fff43       DT_INT64
	Unk_4816b6f       DT_INT64
	Unk_b6736eb       DT_INT64
	Unk_7a84b88       DT_INT64
	Unk_ffe06ee       DT_INT64
	CapsuleDefs       DT_INT64
	Unk_4ea6992       DT_INT64
	Unk_4fdc600       DT_INT64
	DriverMap         DT_INT64
	Name              DT_FIXEDARRAY[*DT_BYTE]
	Density           DT_FLOAT
	VertexCount       DT_WORD
	VertexCapacity    DT_WORD
	KinematicCount    DT_WORD
	TriangleCount     DT_WORD
	Unk_1f1d125       DT_WORD
	Unk_588faa1       DT_WORD
	Unk_f4d15be       DT_WORD
	Unk_93e1424       DT_WORD
	ConstraintCount   DT_WORD
	Unk_9460e91       DT_WORD
	MaxLevel          DT_WORD
	BoneCount         DT_WORD
	DriverCount       DT_WORD
	CapsuleCount      DT_WORD
	PlaneCount        DT_WORD
}

func (t *Type_3a911960) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.BindVertices.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.BindNormals.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1655a99.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.BlendWeights.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_55f9a53.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.DeltaFrames.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Levels.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.AttachmentLengths.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ParentIndices.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.KinematicRoots.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TangentIndices.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Weights.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.DriverInfluences.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.FollowerIndices.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Triangles.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.ConstraintIndices.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.ConstraintLengths.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d55a167.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e5fff43.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4816b6f.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b6736eb.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7a84b88.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ffe06ee.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.CapsuleDefs.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4ea6992.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4fdc600.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.DriverMap.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.Name.UnmarshalD4(r, &Options{ArrayLength: 32}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.Density.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+252, io.SeekStart); err != nil {
		return err
	}
	if err := t.VertexCount.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+254, io.SeekStart); err != nil {
		return err
	}
	if err := t.VertexCapacity.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.KinematicCount.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+258, io.SeekStart); err != nil {
		return err
	}
	if err := t.TriangleCount.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1f1d125.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+262, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_588faa1.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f4d15be.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+266, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_93e1424.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.ConstraintCount.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+270, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9460e91.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.MaxLevel.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+274, io.SeekStart); err != nil {
		return err
	}
	if err := t.BoneCount.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	if err := t.DriverCount.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+278, io.SeekStart); err != nil {
		return err
	}
	if err := t.CapsuleCount.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.PlaneCount.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_3a9f0d72 struct {
	Unk_efe84b7 DT_TAGMAP[*DT_ENUM]
}

func (t *Type_3a9f0d72) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_efe84b7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NPCPreset struct {
	// Inherits CharacterPreset
	// Inherits PolymorphicBase
	DwType     DT_UINT
	DwPad      DT_UINT
	SzName     DT_CSTRING[*DT_BYTE]
	SnoWorld   DT_SNO
	NPadding1  DT_INT
	SnoActor   DT_SNO
	SHairColor DT_CSTRING[*DT_BYTE]
	SSkinColor DT_CSTRING[*DT_BYTE]
	ArrItems   DT_FIXEDARRAY[*PresetNPCComponent]
	ArrWeapons DT_FIXEDARRAY[*DT_SNO]
}

func (t *NPCPreset) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPadding1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SHairColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.SSkinColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArrItems.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArrWeapons.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       513,
		Group:       73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NpcGenerationData struct {
	ArAnimSetOrder     DT_VARIABLEARRAY[*DT_GBID]
	SnoMountedAnimTree DT_SNO
	SnoMountedAnimSet  DT_SNO
	SnoDefaultMount    DT_SNO
	Unk_e9dd8e9        DT_UINT
	Unk_d42692e        DT_UINT
	Unk_1059e8c        DT_UINT
}

func (t *NpcGenerationData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArAnimSetOrder.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 53,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMountedAnimTree.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 67,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMountedAnimSet.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDefaultMount.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e9dd8e9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d42692e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1059e8c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_3aef2e34 struct {
	// Inherits Type_d4213c9b
	DwType      DT_UINT
	Unk_9b2bc26 Type_80554fed
	Unk_77ed19a DT_ENUM
	DwPad       DT_UINT
}

func (t *Type_3aef2e34) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b2bc26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77ed19a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_3b00e8b9 struct {
	FlMinOffset              DT_FLOAT
	FlMaxCumulativeOffset    DT_FLOAT
	FlMaxPerpendicularOffset DT_FLOAT
	Unk_d07468e              DT_FLOAT
	Unk_d0f7bfd              DT_FLOAT
	Unk_4f8fc91              DT_FLOAT
}

func (t *Type_3b00e8b9) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMinOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMaxCumulativeOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMaxPerpendicularOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d07468e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0f7bfd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4f8fc91.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Cylinder struct {
	Wp1      DT_VECTOR3D
	Wp2      DT_VECTOR3D
	FlRadius DT_FLOAT
}

func (t *Cylinder) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wp1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wp2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type InterpolationScalar struct {
	NScalarFunction DT_ENUM
	DwFlags         DT_UINT
	TInputRange     DT_RANGE[*DT_FLOAT]
	TRemapRange     DT_RANGE[*DT_FLOAT]
	ERemapEasing    DT_ENUM
	SzFormulaName   DT_UINT
}

func (t *InterpolationScalar) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NScalarFunction.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TInputRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TRemapRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ERemapEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzFormulaName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type StoryboardPlayStoryboardNode struct {
	// Inherits StoryboardTimePointNode
	// Inherits PolymorphicBase
	DwType        DT_UINT
	FlTime        DT_FLOAT
	DwPad         DT_UINT
	SnoStoryboard DT_SNO
}

func (t *StoryboardPlayStoryboardNode) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoStoryboard.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 90,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ParametricLayer struct {
	SnoLayer  DT_SNO
	TSettings ParametricSettings
}

func (t *ParametricLayer) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLayer.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 57,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSettings.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WorldStateDefinition struct {
	DwFlags DT_UINT
}

func (t *WorldStateDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ChangedPlayerMessage struct {
	THeader     RequiredMessageHeader
	Unk_dce541c DT_UINT
	UsHeroName  DT_CHARARRAY
	EClass      DT_ENUM
}

func (t *ChangedPlayerMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.UsHeroName.UnmarshalD4(r, &Options{
		ArrayLength: 49,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.EClass.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WallCornerPieces struct {
	ArPieces          DT_VARIABLEARRAY[*WallPiece]
	Unk_85db88e       DT_VARIABLEARRAY[*WallPiece]
	Unk_767477        DT_VARIABLEARRAY[*WallPiece]
	TScale            DT_RANGE[*DT_FLOAT]
	EPieceSelectMode  DT_ENUM
	THorizontalOffset DT_RANGE[*DT_FLOAT]
	TYaw              DT_RANGE[*DT_FLOAT]
	Unk_609e23d       DT_INT
	Unk_d8fcfe4       DT_INT
	Unk_435bdfd       DT_INT
	Unk_f2dbd17       DT_INT
	TVerticalOffset   DT_RANGE[*DT_FLOAT]
	Unk_2a8c4b6       DT_FLOAT
}

func (t *WallCornerPieces) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPieces.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_85db88e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_767477.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPieceSelectMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.THorizontalOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.TYaw.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_609e23d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d8fcfe4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_435bdfd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f2dbd17.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TVerticalOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2a8c4b6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type StoreCameraTransition struct {
	EEasing     DT_ENUM
	WdDuration  DT_FLOAT
	WdOffset    DT_FLOAT
	Unk_2c71308 PRTransform
}

func (t *StoreCameraTransition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.WdDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.WdOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2c71308.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_3c468167 struct {
	// Inherits TexAnim
	// Inherits PolymorphicBase
	DwType           DT_UINT
	DwPad            DT_UINT
	FlUScale         DT_FLOAT
	FlVScale         DT_FLOAT
	TFrameAnim       FrameAnim
	FScaleUVsToFrame DT_INT
}

func (t *Type_3c468167) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlUScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlVScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFrameAnim.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.FScaleUVsToFrame.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlasmaAttachMessage struct {
	THeader     RequiredMessageHeader
	AnnPlasma   DT_ACD_NETWORK_NAME
	AnnAttachTo DT_ACD_NETWORK_NAME
}

func (t *PlasmaAttachMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnPlasma.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnAttachTo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventDisableRagdollAnimationOverride struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
}

func (t *TriggerEventDisableRagdollAnimationOverride) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CancelGroupTransferMessage struct {
	THeader RequiredMessageHeader
}

func (t *CancelGroupTransferMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConversationNodeReference struct {
	SnoConversation DT_SNO
	DwNodeID        DT_UINT
}

func (t *ConversationNodeReference) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoConversation.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 12,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNodeID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorMountData struct {
	EMountRarity DT_ENUM
}

func (t *ActorMountData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMountRarity.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerACDInfo struct {
	FFemale         DT_INT
	EPlayerClass    DT_ENUM
	NSkinColorIndex DT_INT
	SnoFace         DT_SNO
	SnoMakeup       DT_SNO
	SnoMarkingShape DT_SNO
	SnoMarkingColor DT_SNO
	SnoHairColor    DT_SNO
	SnoEyeColor     DT_SNO
	SnoHairStyle    DT_SNO
	SnoFacialHair   DT_SNO
	SnoJewelry      DT_SNO
	SnoMount        DT_SNO
	SnoHeadstone    DT_SNO
	SnoItems        DT_FIXEDARRAY[*DT_SNO]
	SnoPowers       DT_FIXEDARRAY[*DT_SNO]
	SnoEmotePowers  DT_FIXEDARRAY[*DT_SNO]
	Unk_d96f751     DT_FIXEDARRAY[*DT_SNO_NAME]
}

func (t *PlayerACDInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FFemale.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPlayerClass.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSkinColorIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFace.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 140,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMakeup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 132,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMarkingShape.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 115,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMarkingColor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 133,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoHairColor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 134,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEyeColor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 131,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoHairStyle.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 138,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFacialHair.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 139,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoJewelry.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 119,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMount.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoHeadstone.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItems.UnmarshalD4(r, &Options{
		ArrayLength: 18,
		Flags:       9,
		Group:       73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowers.UnmarshalD4(r, &Options{
		ArrayLength: 128,
		Flags:       9,
		Group:       29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+648, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEmotePowers.UnmarshalD4(r, &Options{
		ArrayLength: 24,
		Flags:       9,
		Group:       29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+748, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d96f751.UnmarshalD4(r, &Options{
		ArrayLength: 16,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+880, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerSavedDataMessage struct {
	THeader     RequiredMessageHeader
	TSavedData  PlayerSavedData
	Unk_dce541c DT_UINT
}

func (t *PlayerSavedDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSavedData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3680, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3688, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TransmogSlotMessage struct {
	THeader               RequiredMessageHeader
	ESlot                 DT_ENUM
	SnoTransmogSourceItem DT_SNO
	SnoDye                DT_SNO
}

func (t *TransmogSlotMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESlot.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTransmogSourceItem.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDye.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 122,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RecipeTier struct {
	NRequiredLevel DT_INT
	NGoldCost      DT_INT
	ArRecipes      DT_VARIABLEARRAY[*DT_SNO]
}

func (t *RecipeTier) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NRequiredLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NGoldCost.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArRecipes.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 49,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_3d4fd272 struct {
	SzBoneName      DT_UINT
	Unk_36bc3de     DT_FLOAT
	FlDuration      DT_FLOAT
	FlRotationSpeed DT_FLOAT
	FlRotationAngle DT_FLOAT
	Unk_92ce5f2     DT_INT
	Unk_10363a5     Type_cbfdd2ea
	Unk_afaabbe     DT_VARIABLEARRAY[*Type_e1a124f1]
}

func (t *Type_3d4fd272) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzBoneName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_36bc3de.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRotationSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRotationAngle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_92ce5f2.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_10363a5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_afaabbe.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CollisionSettingsDefinition struct {
	TCollFlags  ActorCollisionFlags
	Unk_a882afd DT_INT
	Unk_54403ff DT_INT
}

func (t *CollisionSettingsDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCollFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a882afd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54403ff.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerVariableValueSubcondition struct {
	// Inherits Type_d3c3637f
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType               DT_UINT
	BNegate              DT_INT
	EComparisonOp        DT_ENUM
	DwPad                DT_UINT
	GbidDesignerVariable DT_GBID
	NValue               DT_INT
}

func (t *PlayerVariableValueSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidDesignerVariable.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 45,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.NValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AssetList struct {
	ArEntries DT_VARIABLEARRAY[*AssetListEntry]
}

func (t *AssetList) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventChangeClothParameters struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType          DT_UINT
	DwPad           DT_UINT
	TConditions     TriggerConditions
	FGenerated      DT_INT
	Unk_6cba752     DT_INT
	Unk_e560b0b     DT_UINT
	Unk_4f25fc8     DT_SNO
	SzSubObjectName DT_UINT
	FlBlendTime     DT_FLOAT
}

func (t *TriggerEventChangeClothParameters) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4f25fc8.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 11,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzSubObjectName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlBlendTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_3ddf9693 struct {
	SnoActor            DT_SNO
	SzLookName          DT_UINT
	DwShaderMapOverride DT_UINT
	Unk_189be9b         DT_INT
	Unk_94a2b91         DT_INT
	Unk_d094b9a         DT_ENUM
	FlWeight            DT_FLOAT
	FlFootprint         DT_FLOAT
	EFadeMethod         DT_ENUM
	Unk_da5b372         DT_INT
	Unk_8dea4d9         DT_INT
	NFadeGroup          DT_INT
}

func (t *Type_3ddf9693) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLookName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwShaderMapOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_189be9b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_94a2b91.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d094b9a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlWeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFootprint.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.EFadeMethod.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_da5b372.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8dea4d9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFadeGroup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DebugDataBlockMessage struct {
	THeader     RequiredMessageHeader
	NType       DT_INT
	ArParams    DT_FIXEDARRAY[*DT_INT]
	Unk_2b2f2eb DT_INT
	TData       DT_FIXEDARRAY[*DT_BYTE]
}

func (t *DebugDataBlockMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArParams.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2b2f2eb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.TData.UnmarshalD4(r, &Options{
		ArrayLength: 30000,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+30036, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TrackedRewardDefinition struct {
	ESource   DT_ENUM
	EType     DT_ENUM
	EStatType DT_ENUM
	FlAmount  DT_FLOAT
	SnoAspect DT_SNO
}

func (t *TrackedRewardDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESource.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EStatType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAspect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 128,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SpeedTreeWindParams struct {
	FStrengthResponse          DT_FLOAT
	FDirectionResponse         DT_FLOAT
	FAnchorOffset              DT_FLOAT
	FAnchorDistanceScale       DT_FLOAT
	Unk_824f481                DT_FIXEDARRAY[*DT_FLOAT]
	FGlobalHeight              DT_FLOAT
	FGlobalHeightExponent      DT_FLOAT
	AfGlobalDistance           DT_FIXEDARRAY[*DT_FLOAT]
	AfGlobalDirectionAdherence DT_FIXEDARRAY[*DT_FLOAT]
	AtBranch                   DT_FIXEDARRAY[*SpeedTreeBranchWindLevel]
	AtLeaf                     DT_FIXEDARRAY[*Type_5e641340]
	Unk_3ee7b7                 DT_FIXEDARRAY[*DT_FLOAT]
	Unk_420899                 DT_FLOAT
	Unk_7c69197                DT_FLOAT
	Unk_9938ef6                DT_FLOAT
	Unk_c1eed76                DT_FLOAT
	Unk_ba61ab4                DT_FLOAT
	Unk_567053e                DT_FLOAT
	Unk_c08eb6c                DT_FLOAT
	Unk_233b257                DT_FLOAT
	Unk_ddcd73                 DT_FLOAT
	Unk_94608ec                DT_FLOAT
	Unk_210514c                DT_FLOAT
	Unk_b06b705                DT_FLOAT
	Unk_f7ea482                DT_FLOAT
	FGustFrequency             DT_FLOAT
	FGustStrengthMin           DT_FLOAT
	FGustStrengthMax           DT_FLOAT
	FGustDurationMin           DT_FLOAT
	FGustDurationMax           DT_FLOAT
	FGustRiseScalar            DT_FLOAT
	FGustFallScalar            DT_FLOAT
	Unk_5c5413                 DT_INT
	Unk_5c5414                 DT_INT
	Unk_22c4571                DT_VECTOR3D
	Unk_2e7a7c5                DT_FLOAT
}

func (t *SpeedTreeWindParams) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FStrengthResponse.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDirectionResponse.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FAnchorOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FAnchorDistanceScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_824f481.UnmarshalD4(r, &Options{
		ArrayLength: 100,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+416, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGlobalHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+420, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGlobalHeightExponent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+424, io.SeekStart); err != nil {
		return err
	}
	if err := t.AfGlobalDistance.UnmarshalD4(r, &Options{
		ArrayLength: 10,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+464, io.SeekStart); err != nil {
		return err
	}
	if err := t.AfGlobalDirectionAdherence.UnmarshalD4(r, &Options{
		ArrayLength: 10,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+504, io.SeekStart); err != nil {
		return err
	}
	if err := t.AtBranch.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+768, io.SeekStart); err != nil {
		return err
	}
	if err := t.AtLeaf.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1216, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3ee7b7.UnmarshalD4(r, &Options{
		ArrayLength: 10,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1256, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_420899.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1260, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7c69197.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1264, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9938ef6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1268, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c1eed76.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1272, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ba61ab4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1276, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_567053e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1280, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c08eb6c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1284, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_233b257.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1288, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ddcd73.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1292, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_94608ec.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1296, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_210514c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1300, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b06b705.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1304, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f7ea482.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1308, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGustFrequency.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1312, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGustStrengthMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1316, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGustStrengthMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1320, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGustDurationMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1324, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGustDurationMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1328, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGustRiseScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1332, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGustFallScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1336, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5c5413.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1340, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5c5414.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1344, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_22c4571.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1356, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2e7a7c5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1360, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_3ecfe93c struct {
	ArTiers DT_VARIABLEARRAY[*Type_95269030]
}

func (t *Type_3ecfe93c) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArTiers.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestDefinition struct {
	EQuestType                     DT_ENUM
	EPlayerQuestType               DT_ENUM
	EEventQuestType                DT_ENUM
	EInstanceQuestType             DT_ENUM
	ERepeatType                    DT_ENUM
	EVignetteType                  DT_ENUM
	Unk_43f3849                    DT_INT
	Unk_48a2b16                    DT_INT
	TMarkerHandleStartLocation     MarkerHandle
	VecStartLocation               DT_VECTOR3D
	SnoWorldStartLocation          DT_SNO
	TMarkerHandleDevStartLocation  MarkerHandle
	VecDevStartLocation            DT_VECTOR3D
	SnoWorldDevStartLocation       DT_SNO
	Unk_d2181f0                    DT_STARTLOC_NAME
	SnoLevelArea                   DT_SNO
	Unk_f956a05                    DT_INT
	Unk_14dee1b                    DT_INT
	FlParticipationRadius          DT_FLOAT
	Unk_8881b0e                    DT_FLOAT
	DwNextUID                      DT_UINT
	FPrioritySideQuest             DT_INT
	Unk_c18cabd                    DT_INT
	Unk_79f6e17                    DT_ENUM
	GbidSubzoneModifierTag         DT_GBID
	SnoBountySubzone               DT_SNO
	EBountyTier                    DT_ENUM
	EBountyType                    DT_ENUM
	Unk_313dbf6                    DT_INT
	DwRegionSourceCallbackUID      DT_UINT
	Unk_b83e7b1                    DT_ENUM
	Unk_942bcdb                    DT_INT
	DwFlags                        DT_UINT
	ArQuestPhases                  DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	ArRequiredReputations          DT_VARIABLEARRAY[*ReputationValuePair]
	ArReputationRewards            DT_VARIABLEARRAY[*ReputationValuePair]
	ArRequiredCompletedQuests      DT_VARIABLEARRAY[*DT_SNO]
	SnoStartCondition              DT_SNO
	ArFollowers                    DT_VARIABLEARRAY[*QuestFollower]
	ArQuestItems                   DT_VARIABLEARRAY[*DT_SNO]
	ArQuestDungeons                DT_VARIABLEARRAY[*DT_SNO]
	Unk_2aa5f20                    DT_VARIABLEARRAY[*DT_SNO]
	Unk_b43b442                    DT_VARIABLEARRAY[*DT_GBID]
	GbidSurveyType                 DT_GBID
	GbidNightmareDungeonSurveyType DT_GBID
	SnoAudioContext                DT_SNO
	ArAllReferencedItems           DT_VARIABLEARRAY[*DT_SNO]
}

func (t *QuestDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EQuestType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPlayerQuestType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EEventQuestType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.EInstanceQuestType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ERepeatType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.EVignetteType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_43f3849.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_48a2b16.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMarkerHandleStartLocation.UnmarshalD4(r, &Options{Flags: 513}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecStartLocation.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorldStartLocation.UnmarshalD4(r, &Options{
		Flags: 512,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMarkerHandleDevStartLocation.UnmarshalD4(r, &Options{Flags: 513}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecDevStartLocation.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorldDevStartLocation.UnmarshalD4(r, &Options{
		Flags: 512,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d2181f0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelArea.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f956a05.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_14dee1b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlParticipationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8881b0e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNextUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.FPrioritySideQuest.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c18cabd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_79f6e17.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidSubzoneModifierTag.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 60,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoBountySubzone.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBountyTier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBountyType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_313dbf6.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwRegionSourceCallbackUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b83e7b1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_942bcdb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArQuestPhases.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArRequiredReputations.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArReputationRewards.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArRequiredCompletedQuests.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoStartCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArFollowers.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArQuestItems.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArQuestDungeons.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2aa5f20.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+312, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b43b442.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 45,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+328, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidSurveyType.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 57,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+332, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidNightmareDungeonSurveyType.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 57,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+336, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAudioContext.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 93,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+344, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArAllReferencedItems.UnmarshalD4(r, &Options{Group: 73}); err != nil {
		return err
	}
	if _, err := r.Seek(p+360, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type VendorInventory struct {
	ArInventories DT_VARIABLEARRAY[*DT_SNO]
}

func (t *VendorInventory) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArInventories.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_3ee2b992 struct {
	SnoParticle DT_SNO
	Unk_9644926 DT_FLOAT
}

func (t *Type_3ee2b992) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoParticle.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 27,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9644926.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ChallengeDefinition struct {
	DwNextID     DT_UINT
	ArCategories DT_VARIABLEARRAY[*ChallengeCategory]
}

func (t *ChallengeDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNextID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCategories.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LightStateParams struct {
	PathRadius          Type_cbfdd2ea
	PathSourceRadius    Type_cbfdd2ea
	Unk_d2a3cb0         Type_cbfdd2ea
	PathFalloffBias     Type_cbfdd2ea
	Unk_500fe1e         Type_cbfdd2ea
	PathWidth           Type_cbfdd2ea
	PathHotspot         Type_cbfdd2ea
	PathFalloff         Type_cbfdd2ea
	PathColor           Type_560ae4cf
	PathIntensity       Type_cbfdd2ea
	Unk_6634e3c         DT_FLOAT
	Unk_114300f         DT_FLOAT
	Unk_5803b69         Type_cbfdd2ea
	PathShadowIntensity Type_cbfdd2ea
	PathPivotOffset     VectorPath
}

func (t *LightStateParams) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathSourceRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d2a3cb0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathFalloffBias.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_500fe1e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathWidth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+336, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathHotspot.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+392, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathFalloff.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+448, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+504, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathIntensity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+560, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6634e3c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+564, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_114300f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+568, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5803b69.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+624, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathShadowIntensity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+680, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathPivotOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+736, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerHeightFieldClutter struct {
	Unk_cd39b27    DT_FIXEDARRAY[*DT_BYTE]
	DwClutterMasks DT_FIXEDARRAY[*DT_BYTE]
	NHeightValue   DT_WORD
	DwFlags        DT_BYTE
	Unk_d188924    DT_BYTE
}

func (t *MarkerHeightFieldClutter) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cd39b27.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwClutterMasks.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NHeightValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+10, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+11, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d188924.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_3f44d2ec struct {
	TDestinationAttribute ParagonGlyphAffixAttribute
	TSourceAttribute      ParagonGlyphAffixAttribute
}

func (t *Type_3f44d2ec) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDestinationAttribute.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSourceAttribute.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ShrineGizmoData struct {
	// Inherits NamedGizmoData
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
	SnoActivationPower           DT_SNO
}

func (t *ShrineGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActivationPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_3f7811d2 struct {
	Unk_589fc97 DT_TAGMAP[*DT_ENUM]
}

func (t *Type_3f7811d2) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_589fc97.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_3f958891 struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType              DT_UINT
	DwPad               DT_UINT
	TConditions         TriggerConditions
	FGenerated          DT_INT
	Unk_6cba752         DT_INT
	Unk_e560b0b         DT_UINT
	DwActorID           DT_UINT
	DwShaderMapOverride DT_UINT
	Unk_279aa5a         DT_INT
}

func (t *Type_3f958891) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwActorID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwShaderMapOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_279aa5a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type FrameAnim struct {
	EPlaybackMode        DT_ENUM
	TFrameRateRange      DT_RANGE[*DT_FLOAT]
	TStartFrameRange     DT_RANGE[*DT_UINT]
	Unk_98a3c88          DT_UINT
	TAnimationDelayRange DT_RANGE[*DT_FLOAT]
	Unk_ca71af4          DT_INT
}

func (t *FrameAnim) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPlaybackMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFrameRateRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.TStartFrameRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_98a3c88.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAnimationDelayRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ca71af4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerBuffDefinition struct {
	DwID             DT_UINT
	DwBuffId         DT_UINT
	BHarmful         DT_INT
	BInfinite        DT_INT
	TDuration        DT_STRING_FORMULA
	TMaxStackCount   DT_STRING_FORMULA
	Unk_89134c5      DT_INT
	BShowDuration    DT_INT
	BCancellable     DT_INT
	Unk_99b5752      DT_INT
	Unk_93cd85f      DT_INT
	Unk_5c11505      DT_INT
	Unk_9eb6fb0      DT_INT
	Unk_e8f1e19      DT_INT
	Unk_9cb4832      DT_INT
	Unk_71ba554      DT_INT
	HIcon            DT_UINT
	HFloatingIcon    DT_UINT
	Unk_78b0ca1      DT_UINT
	Unk_c35001       DT_FLOAT
	Unk_395ccd6      DT_INT
	Unk_200bd12      DT_INT
	TDOT             Type_e3f28f16
	Unk_dcb22bd      DT_INT
	TCrowdControl    Type_f6b21430
	BHasDamageShield DT_INT
	TDamageShield    HitpointSpecifier
}

func (t *PowerBuffDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwBuffId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.BHarmful.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInfinite.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMaxStackCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_89134c5.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.BShowDuration.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCancellable.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_99b5752.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_93cd85f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5c11505.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9eb6fb0.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e8f1e19.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9cb4832.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_71ba554.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.HFloatingIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_78b0ca1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c35001.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_395ccd6.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_200bd12.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDOT.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dcb22bd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCrowdControl.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+408, io.SeekStart); err != nil {
		return err
	}
	if err := t.BHasDamageShield.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+416, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDamageShield.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+488, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CollSettingsParam struct {
	NFrameStart DT_INT
	NFrameEnd   DT_INT
}

func (t *CollSettingsParam) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFrameStart.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFrameEnd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventHitFlashDuration struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType                      DT_UINT
	TConditions                 TriggerConditions
	FGenerated                  DT_INT
	Unk_6cba752                 DT_INT
	Unk_e560b0b                 DT_UINT
	TDuration                   DT_FLOAT
	DwTriggerFlags              DT_UINT
	DwTriggerFlagsEx            DT_UINT
	TCleanup                    TriggerCleanup
	Unk_49e9257                 DT_INT
	Unk_5490979                 DT_INT
	DwPad                       DT_UINT
	RgbaColorAdd                DT_RGBACOLOR
	NHitFlashAddDuration        DT_FLOAT
	RgbaColorMul                DT_RGBACOLOR
	NHitFlashMulDuration        DT_FLOAT
	FlHitFlashIntensity         DT_FLOAT
	Unk_622a853                 DT_FLOAT
	FlHitFlashIntensityDuration DT_FLOAT
	Unk_135c4d0                 DT_ENUM
	Unk_6ba75                   DT_ENUM
	EHitFlashCurve              DT_ENUM
	DwID                        DT_UINT
	NMaxHitFlash                DT_UINT
	Unk_17f7deb                 DT_INT
	Unk_b19da4b                 DT_INT
}

func (t *TriggerEventHitFlashDuration) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaColorAdd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.NHitFlashAddDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaColorMul.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.NHitFlashMulDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHitFlashIntensity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_622a853.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHitFlashIntensityDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_135c4d0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6ba75.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.EHitFlashCurve.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMaxHitFlash.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_17f7deb.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b19da4b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TextureContent struct {
	TTexture SerialDataInfo
}

func (t *TextureContent) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTexture.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerTitleDefinition struct{}

func (t *PlayerTitleDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PreloadSceneDataMessage struct {
	THeader  RequiredMessageHeader
	IdSScene DT_SHARED_SERVER_DATA_ID
	SnoScene DT_SNO
}

func (t *PreloadSceneDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSScene.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoScene.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 33,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DWordDataMessage struct {
	THeader RequiredMessageHeader
	DwData  DT_UINT
}

func (t *DWordDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AlwaysFalseSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType  DT_UINT
	BNegate DT_INT
	DwPad   DT_UINT
}

func (t *AlwaysFalseSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ParagonThresholdDefinition struct {
	PtThresholds    DT_VARIABLEARRAY[*ParagonThresholdEntry]
	ArUsableByClass DT_FIXEDARRAY[*DT_INT]
}

func (t *ParagonThresholdDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtThresholds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArUsableByClass.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type StaggerDefinition struct{}

func (t *StaggerDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_4174a154 struct {
	Unk_322049a WwiseName
	FlValue     DT_FLOAT
}

func (t *Type_4174a154) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_322049a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OpenDungeonForLFDMessage struct {
	THeader RequiredMessageHeader
	IsOpen  DT_INT
}

func (t *OpenDungeonForLFDMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IsOpen.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_41b30aaa struct {
	THeader      InterpolationPathHeader
	PtArrayNodes DT_VARIABLEARRAY[*Type_63010143]
}

func (t *Type_41b30aaa) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtArrayNodes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_41b30aab struct {
	THeader      InterpolationPathHeader
	PtArrayNodes DT_VARIABLEARRAY[*Type_63010144]
}

func (t *Type_41b30aab) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtArrayNodes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type FlagSetDefinition struct {
	ArFlagLookups DT_VARIABLEARRAY[*FlagLookup]
}

func (t *FlagSetDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArFlagLookups.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DemonSummoningQuestBucket struct {
	THeader  GBIDHeader
	ArQuests DT_VARIABLEARRAY[*DemonSummoningRitualQuests]
}

func (t *DemonSummoningQuestBucket) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArQuests.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_41e68f26 struct {
	DwType  DT_UINT
	FlTime  DT_FLOAT
	DwPad   DT_UINT
	TValue  DT_RGBACOLOR
	EEasing DT_ENUM
}

func (t *Type_41e68f26) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.EEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimTreeNodeOverrideWrapper struct {
	TChildOverride AnimTreeNodeOverride
}

func (t *AnimTreeNodeOverrideWrapper) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TChildOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventFrostBreath struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType         DT_UINT
	DwPad          DT_UINT
	TConditions    TriggerConditions
	FGenerated     DT_INT
	Unk_6cba752    DT_INT
	Unk_e560b0b    DT_UINT
	THardpointLink HardpointLink
}

func (t *TriggerEventFrostBreath) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SubzoneWorldMarkerSetEntry struct {
	SnoWorld     DT_SNO
	SnoMarkerSet DT_SNO
}

func (t *SubzoneWorldMarkerSetEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMarkerSet.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 24,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventDeleteAllObjects struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
}

func (t *TriggerEventDeleteAllObjects) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_42378b43 struct {
	FlGridSize    DT_FLOAT
	VecGridOffset DT_VECTOR3D
	Unk_1e8e20d   DT_INT
}

func (t *Type_42378b43) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGridSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecGridOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1e8e20d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_42605528 struct {
	// Inherits Type_d4213c9b
	DwType      DT_UINT
	Unk_9b2bc26 Type_80554fed
	Unk_77ed19a DT_ENUM
	DwPad       DT_UINT
}

func (t *Type_42605528) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b2bc26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77ed19a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BiomeObject struct {
	// Inherits BiomeItem
	// Inherits PolymorphicBase
	DwType                 DT_UINT
	FlRadius               DT_FLOAT
	Unk_2fd1cdb            DT_FLOAT
	TAllowedScaleRange     DT_RANGE[*DT_FLOAT]
	Unk_87acb69            DT_RANGE[*DT_FLOAT]
	Unk_87acb6a            DT_RANGE[*DT_FLOAT]
	Unk_87acb6b            DT_RANGE[*DT_FLOAT]
	Unk_9854b6a            DT_RANGE[*DT_FLOAT]
	FlChance               DT_FLOAT
	DwFlags                DT_UINT
	Unk_2a8c4b6            DT_FLOAT
	AAzimuthAngle          DT_FLOAT
	AAltitudeAngle         DT_FLOAT
	Unk_6ead041            DT_RANGE[*DT_FLOAT]
	TParametricSettings    ParametricSettings
	ArProximityAdjustments DT_VARIABLEARRAY[*ProximityAdjustment]
	SnonameObject          DT_SNO_NAME
	Unk_d094b9a            DT_ENUM
	QInitialOrientation    bcQuat
	SzLookName             DT_UINT
	DwShaderMapOverride    DT_UINT
	DwPad                  DT_UINT
}

func (t *BiomeObject) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2fd1cdb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAllowedScaleRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87acb69.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87acb6a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87acb6b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9854b6a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlChance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2a8c4b6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.AAzimuthAngle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.AAltitudeAngle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6ead041.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TParametricSettings.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArProximityAdjustments.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnonameObject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d094b9a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+252, io.SeekStart); err != nil {
		return err
	}
	if err := t.QInitialOrientation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLookName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwShaderMapOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConversationCooldown struct {
	SnoConversation DT_SNO
	UExpirationTime DT_INT64
}

func (t *ConversationCooldown) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoConversation.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 12,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.UExpirationTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionHasModPoints struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	BInverse   DT_INT
	DwPad      DT_UINT
	ESubject   DT_ENUM
	SnoPower   DT_SNO
	SzPowerMod DT_UINT
}

func (t *PowerConditionHasModPoints) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzPowerMod.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_42dac75f struct {
	// Inherits Type_7e418ba8
	// Inherits PolymorphicBase
	DwType       DT_UINT
	Unk_2de4987  DT_UINT
	ArConditions DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	BEnd         DT_INT
	DwPad        DT_UINT
	FlSeconds    DT_FLOAT
}

func (t *Type_42dac75f) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2de4987.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEnd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSeconds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MountPreset struct {
	// Inherits CharacterPreset
	// Inherits PolymorphicBase
	DwType           DT_UINT
	DwPad            DT_UINT
	SzName           DT_CSTRING[*DT_BYTE]
	SnoWorld         DT_SNO
	NPadding1        DT_INT
	SnoActor         DT_SNO
	ArrItems         DT_FIXEDARRAY[*Type_8c33d728]
	ArrCosmeticItems DT_FIXEDARRAY[*DT_SNO]
}

func (t *MountPreset) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPadding1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArrItems.UnmarshalD4(r, &Options{
		ArrayLength: 1,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArrCosmeticItems.UnmarshalD4(r, &Options{
		ArrayLength: 1,
		Flags:       513,
		Group:       73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_431a27f7 struct {
	Unk_969150a DT_INT
	Unk_da72bf0 DT_INT
	Unk_3c20112 DT_INT
	Unk_37f7400 DT_INT
	Unk_600caa4 DT_INT
	Unk_e3a4bd0 DT_INT
	Unk_cdf78ca DT_INT
	Unk_325b9c6 DT_FLOAT
	Unk_4f4cf59 DT_INT
	Unk_84da688 DT_INT
	Unk_824f045 DT_INT
	Unk_59d4467 DT_INT
	Unk_bb62dfe DT_INT
	Unk_4ce57f1 DT_INT
	Unk_4d254c2 DT_INT
	Unk_62c245b DT_INT
	Unk_c159e29 DT_INT
	Unk_5a0096e DT_INT
	Unk_85c6e8f DT_INT
	Unk_4474d8f DT_INT
	Unk_ccf1401 DT_INT
	Unk_ea5fbdd DT_INT
	Unk_bf1747b DT_INT
	Unk_fe04400 DT_INT
	Unk_1d1c5f5 DT_ENUM
	Unk_8b203ad DT_ENUM
	Unk_c1aab5e DT_ENUM
	Unk_c1aab5f DT_ENUM
	Unk_4a7db7a DT_INT
	Unk_ffc104e DT_INT
	Unk_332634b DT_INT
	Unk_66865b3 DT_INT
	Unk_49f34f5 DT_INT
	Unk_562eea5 DT_INT
	Unk_cddfc14 DT_INT
	Unk_d731da9 DT_INT
	Unk_fab7790 DT_INT
	Unk_49dc685 DT_INT
	Unk_4ab8fbb DT_INT
	Unk_a3587ec DT_INT
	Unk_bc87fa3 DT_INT
	Unk_3e22e69 DT_INT
	Unk_4894c35 DT_INT
	Unk_98f68dd DT_INT
	Unk_8fe8a78 DT_INT
	Unk_5897d0d DT_INT
	Unk_3f60c57 DT_INT
	Unk_e1f2170 DT_INT
	Unk_74273ac DT_INT
	Unk_f1ecc65 DT_INT
	Unk_f7d4a46 DT_ENUM
	Unk_c742a40 DT_INT
	Unk_97c5063 DT_INT
	Unk_91b66d0 DT_INT
	Unk_109905  DT_INT
	Unk_66a9220 DT_INT
	Unk_8bf73b0 DT_INT
	Unk_7a124ce DT_INT
	Unk_17363d1 DT_INT
	Unk_318eef  DT_INT
	Unk_4ecdccc DT_INT
	Unk_636a751 DT_INT
	Unk_f056e4d DT_INT
	Unk_a4ae492 DT_INT
	Unk_8257cf  DT_INT
	Unk_3953748 DT_INT
	Unk_d364ba9 DT_INT
	Unk_1f19986 DT_INT
	Unk_390ed8b DT_INT
	Unk_27c7d1e DT_INT
	Unk_b1023b5 DT_INT
	Unk_9ee4396 DT_INT
	Unk_85f21c9 DT_INT
	Unk_73d41aa DT_INT
	Unk_5b5ba50 DT_INT
	Unk_198d14  DT_INT
	Unk_3f5eba8 DT_INT
	Unk_4ca89f2 DT_INT
	Unk_896a40e DT_INT
	Unk_c13a0c0 DT_INT
	Unk_e5c3ecd DT_INT
	Unk_b4bbc51 DT_INT
	Unk_b4fb094 DT_INT
	Unk_3a61fd9 DT_INT
	Unk_fe7f4ba DT_INT
	Unk_ce57789 DT_INT
	Unk_2301c1c DT_INT
	Unk_f4251fb DT_INT
	Unk_f5a0fff DT_INT
	Unk_e5c3ece DT_INT
	Unk_b4bbc52 DT_INT
	Unk_ce5778a DT_INT
	Unk_2301c1d DT_INT
	Unk_f4251fc DT_INT
	Unk_f5a1000 DT_INT
	Unk_831d89e DT_INT
	Unk_49e93b9 DT_INT
	Unk_375ae36 DT_INT
	Unk_5565ba0 DT_INT
	Unk_8fcbebc DT_INT
	Unk_831d89f DT_INT
	Unk_49e93ba DT_INT
	Unk_375ae37 DT_INT
	Unk_5565ba1 DT_INT
	Unk_8fcbebd DT_INT
	Unk_1808c53 DT_INT
	Unk_8059ccb DT_INT
	Unk_bf32a89 DT_INT
	Unk_14596d1 DT_INT
	Unk_1da53ed DT_INT
	Unk_e279c83 DT_ENUM
	Unk_33f5202 DT_ENUM
	Unk_cf50d72 DT_INT
}

func (t *Type_431a27f7) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_969150a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_da72bf0.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3c20112.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_37f7400.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_600caa4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e3a4bd0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cdf78ca.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_325b9c6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4f4cf59.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_84da688.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_824f045.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_59d4467.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bb62dfe.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4ce57f1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4d254c2.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_62c245b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c159e29.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5a0096e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_85c6e8f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4474d8f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ccf1401.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ea5fbdd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bf1747b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fe04400.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1d1c5f5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8b203ad.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c1aab5e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c1aab5f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4a7db7a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ffc104e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_332634b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_66865b3.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49f34f5.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_562eea5.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cddfc14.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d731da9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fab7790.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49dc685.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4ab8fbb.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a3587ec.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bc87fa3.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3e22e69.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4894c35.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_98f68dd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8fe8a78.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5897d0d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3f60c57.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e1f2170.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_74273ac.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f1ecc65.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f7d4a46.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c742a40.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_97c5063.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91b66d0.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_109905.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_66a9220.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8bf73b0.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+228, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7a124ce.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_17363d1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+236, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_318eef.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4ecdccc.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+244, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_636a751.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f056e4d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+252, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a4ae492.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8257cf.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3953748.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d364ba9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1f19986.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_390ed8b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_27c7d1e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b1023b5.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+284, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9ee4396.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_85f21c9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+292, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_73d41aa.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5b5ba50.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+300, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_198d14.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3f5eba8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+308, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4ca89f2.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+312, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_896a40e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+316, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c13a0c0.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+320, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e5c3ecd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+324, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4bbc51.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+328, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4fb094.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+332, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3a61fd9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+336, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fe7f4ba.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+340, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ce57789.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+344, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2301c1c.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+348, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f4251fb.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+352, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f5a0fff.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+356, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e5c3ece.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+360, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4bbc52.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+364, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ce5778a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+368, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2301c1d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+372, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f4251fc.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+376, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f5a1000.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+380, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_831d89e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+384, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e93b9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+388, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_375ae36.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+392, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5565ba0.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+396, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8fcbebc.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+400, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_831d89f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+404, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e93ba.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+408, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_375ae37.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+412, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5565ba1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+416, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8fcbebd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+420, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1808c53.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+424, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8059ccb.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+428, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bf32a89.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+432, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_14596d1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+436, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1da53ed.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+440, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e279c83.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+444, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_33f5202.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+448, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cf50d72.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+452, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupPreloadHelper struct {
	SnoEffectGroup DT_SNO
	Unk_7eb10c0    SerialDataInfo
	Unk_9ffef5e    SerialDataInfo
	Unk_82f1fc7    SerialDataInfo
}

func (t *EffectGroupPreloadHelper) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7eb10c0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9ffef5e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_82f1fc7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BoneStructureInfoData struct {
	PtBoneStructureInfo DT_VARIABLEARRAY[*BoneStructureInfo]
}

func (t *BoneStructureInfoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtBoneStructureInfo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RopeEffectMessageACDToPlace struct {
	THeader           RequiredMessageHeader
	SnoRope           DT_SNO
	AnnFrom           DT_ACD_NETWORK_NAME
	EPositionFrom     DT_ENUM
	TPlaceTo          SharedServerWorldPlace
	BIgnoreOwnerAlpha DT_INT
}

func (t *RopeEffectMessageACDToPlace) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRope.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 32,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnFrom.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPositionFrom.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPlaceTo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIgnoreOwnerAlpha.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventAddBaseMountLoadout struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
}

func (t *TriggerEventAddBaseMountLoadout) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventSubObjectVisibility struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType          DT_UINT
	DwPad           DT_UINT
	TConditions     TriggerConditions
	FGenerated      DT_INT
	Unk_6cba752     DT_INT
	Unk_e560b0b     DT_UINT
	SzSubObjectName DT_UINT
	BVisible        DT_INT
}

func (t *TriggerEventSubObjectVisibility) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzSubObjectName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.BVisible.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PvPChestGizmoData struct {
	// Inherits ChestGizmoData
	// Inherits NamedGizmoData
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                            DT_UINT
	FDisableNonFriendlyOperation      DT_INT
	FWalkToCenter                     DT_INT
	FGizmoStartsDisabled              DT_INT
	FUseStringListName                DT_INT
	FForceMinimapIcon                 DT_INT
	FlOperationRadius                 DT_FLOAT
	Unk_d0b1df5                       DT_FLOAT
	FlGizmoUseTime                    DT_FLOAT
	SnoChannelingEffect               DT_SNO
	Unk_2767229                       DT_INT
	FGizmoShowProgressBar             DT_INT
	Unk_6d9ebe1                       DT_INT
	Unk_5456245                       DT_INT
	Unk_af5815a                       DT_INT
	SnoOnClickEffect                  DT_SNO
	SnoPickedUpEffect                 DT_SNO
	SnoDropOnGroundEffect             DT_SNO
	TConditionData                    GizmoConditionData
	SnoPowerOperator                  DT_SNO
	SnoPowerOperate                   DT_SNO
	SnoPowerOperatorActive            DT_SNO
	SnoPowerOperateActive             DT_SNO
	Unk_359810e                       DT_INT
	NCooldown                         DT_UINT
	Unk_9c8478e                       DT_UINT
	Unk_d45ed2d                       DT_INT
	Unk_f6b20b7                       DT_INT
	Unk_54513b8                       DT_INT
	Unk_fd1f378                       DT_UINT
	Unk_487c14                        DT_UINT
	Unk_87f2609                       DT_UINT
	Unk_158eb4f                       DT_FLOAT
	Unk_ab58cd3                       DT_ENUM
	Unk_91a3966                       DT_UINT
	Unk_25312e5                       DT_UINT
	Unk_4be4371                       DT_INT
	SnoTreasureClass                  DT_SNO
	TLockData                         LockingGizmoData
	FChestRemovesCollisionOnOperation DT_INT
	FChestOperatesOnProximity         DT_INT
	FChestLight                       DT_INT
	Unk_51b0c11                       DT_INT
	Unk_6b4a81d                       DT_FLOAT
	DwPad                             DT_UINT
	Unk_58318b6                       DT_FLOAT
}

func (t *PvPChestGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTreasureClass.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLockData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.FChestRemovesCollisionOnOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.FChestOperatesOnProximity.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.FChestLight.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_51b0c11.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6b4a81d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_58318b6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_44293b37 struct {
	Unk_a64fa3e   DT_ENUM
	SzIDScrollbar DT_CSTRING[*DT_BYTE]
}

func (t *Type_44293b37) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a64fa3e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzIDScrollbar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventHideWarpUI struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
	SnoUI       DT_SNO
}

func (t *TriggerEventHideWarpUI) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoUI.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 46,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MusicDefinition struct {
	Unk_1a7272c        DT_SNO
	DwFlags            DT_UINT
	FlCooldownDuration DT_FLOAT
	FlMinimumDuration  DT_FLOAT
	PtStateValues      DT_VARIABLEARRAY[*WwiseSwitchValue]
	PtGameParameters   DT_VARIABLEARRAY[*WwiseGameParameter]
	Unk_6e07e26        MusicTransition
}

func (t *MusicDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1a7272c.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlCooldownDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMinimumDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtStateValues.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtGameParameters.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6e07e26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerCurrentWorldSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BNegate  DT_INT
	DwPad    DT_UINT
	SnoWorld DT_SNO
}

func (t *PlayerCurrentWorldSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ProximityAdjustment struct {
	SnonameObject    DT_SNO_NAME
	SnoAppearance    DT_SNO
	AWanderPlane     DT_FLOAT
	FlChanceOverride DT_FLOAT
	FlInnerRadius    DT_FLOAT
	FlOuterRadius    DT_FLOAT
}

func (t *ProximityAdjustment) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnonameObject.UnmarshalD4(r, &Options{Flags: 513}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAppearance.UnmarshalD4(r, &Options{
		Flags: 512,
		Group: 9,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.AWanderPlane.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlChanceOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlInnerRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOuterRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type VisualEquipment struct {
	TVisualItem DT_FIXEDARRAY[*VisualItem]
}

func (t *VisualEquipment) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TVisualItem.UnmarshalD4(r, &Options{
		ArrayLength: 15,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TraversalGizmoData struct {
	// Inherits NamedGizmoData
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
	TTraversalData               TraversalInstanceData
	BAmbientInteract             DT_INT
	Unk_33bc35b                  DT_FLOAT
}

func (t *TraversalGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTraversalData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.BAmbientInteract.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_33bc35b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnDeathBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnDeathBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ParagonThresholdEntry struct {
	TThresholdAttribute    ParagonGlyphAffixAttribute
	TThresholdValueFormula DT_STRING_FORMULA
}

func (t *ParagonThresholdEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TThresholdAttribute.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TThresholdValueFormula.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ClothDefinition struct {
	SnoAmbientSound DT_SNO
	DwFlags         DT_UINT
	NPurchaseGizmo  DT_INT
	Unk_be5c463     Type_aced015b
	Unk_570fcff     DT_FLOAT
	Unk_b8886b      DT_FLOAT
	Unk_a3b3e2      DT_FLOAT
	Unk_c5496ae     DT_FLOAT
	Unk_fc18a85     DT_FLOAT
	Unk_643f5b      DT_FLOAT
	Unk_5f96b22     DT_RANGE[*DT_FLOAT]
	Unk_4848e0f     DT_RANGE[*DT_FLOAT]
}

func (t *ClothDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAmbientSound.UnmarshalD4(r, &Options{
		Flags: 8388608,
		Group: 5,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 8912896}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPurchaseGizmo.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_be5c463.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_570fcff.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b8886b.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a3b3e2.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c5496ae.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fc18a85.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_643f5b.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+228, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5f96b22.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+236, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4848e0f.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+244, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_4613b91c struct {
	THeader RequiredMessageHeader
}

func (t *Type_4613b91c) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIItemButtonStyle struct {
	// Inherits UIButtonStyle
	// Inherits UITextStyle
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	TFont                     UIControlFont
	Unk_4741819               DT_TAGMAP[*DT_ENUM]
	TIcon                     UIControlIcon
	TClickSounds              Type_98c23c41
	Unk_10f81f0               DT_TAGMAP[*DT_ENUM]
	Unk_adf9a5f               DT_TAGMAP[*DT_ENUM]
}

func (t *UIItemButtonStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFont.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4741819.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.TIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.TClickSounds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_10f81f0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_adf9a5f.UnmarshalD4(r, &Options{Flags: 513}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Quaternion16 struct {
	X DT_WORD
	Y DT_WORD
	Z DT_WORD
	W DT_WORD
}

func (t *Quaternion16) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.X.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2, io.SeekStart); err != nil {
		return err
	}
	if err := t.Y.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Z.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+6, io.SeekStart); err != nil {
		return err
	}
	if err := t.W.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HitpointSpecifier struct {
	EType           DT_ENUM
	THitpointScalar DT_STRING_FORMULA
	TFlatLevel      DT_STRING_FORMULA
}

func (t *HitpointSpecifier) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.THitpointScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFlatLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AssetListEntry struct {
	NID    DT_INT
	NIndex DT_UINT
}

func (t *AssetListEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_46c720bc struct {
	// Inherits Type_f67f903d
	// Inherits StoryboardTrack
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	Unk_9b2bc26 Type_7fb46e7a
}

func (t *Type_46c720bc) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b2bc26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupActorTrack struct {
	// Inherits EffectGroupTrack
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	Unk_5d2c092 DT_INT
}

func (t *EffectGroupActorTrack) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5d2c092.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DefaultMaterialValueDefinition struct {
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
	VValue DT_VECTOR4D
}

func (t *DefaultMaterialValueDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.VValue.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventAddTrail struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType              DT_UINT
	TConditions         TriggerConditions
	FGenerated          DT_INT
	Unk_6cba752         DT_INT
	Unk_e560b0b         DT_UINT
	TDuration           DT_FLOAT
	DwTriggerFlags      DT_UINT
	DwTriggerFlagsEx    DT_UINT
	TCleanup            TriggerCleanup
	Unk_49e9257         DT_INT
	Unk_5490979         DT_INT
	DwPad               DT_UINT
	DwID                DT_UINT
	SnoTrail            DT_SNO
	VecScalar           DT_VECTOR2D
	Unk_53ae317         HardpointLink
	SnoPowerEffectParam DT_SNO
	Unk_526c582         DT_VARIABLEARRAY[*HardpointLink]
}

func (t *TriggerEventAddTrail) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTrail.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 45,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_53ae317.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerEffectParam.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_526c582.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionDistanceToTarget struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	BInverse   DT_INT
	DwPad      DT_UINT
	FlDistance DT_FLOAT
}

func (t *PowerConditionDistanceToTarget) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDistance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EngagedMessage struct {
	THeader           RequiredMessageHeader
	Unk_dce541c       DT_UINT
	SnoActorMonster   DT_SNO
	EMonsterRarity    DT_ENUM
	BUseAlternateName DT_INT
	PRareNameGBIDs    DT_FIXEDARRAY[*DT_GBID]
	SnoMonsterAffixes DT_FIXEDARRAY[*DT_SNO]
}

func (t *EngagedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActorMonster.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMonsterRarity.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.BUseAlternateName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PRareNameGBIDs.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
		Group:       7,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMonsterAffixes.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
		Group:       107,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerSavePointGizmoData struct {
	Unk_e0ddd0  DT_INT
	Unk_e192692 DT_INT
}

func (t *MarkerSavePointGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e0ddd0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e192692.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DestroyableObjectGizmoData struct {
	// Inherits NamedGizmoData
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
	EWreckableStrength           DT_ENUM
	SnoRequiredPower             DT_SNO
	Unk_c0f7c                    DT_INT
	Unk_4d93264                  DT_ENUM
}

func (t *DestroyableObjectGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.EWreckableStrength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRequiredPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c0f7c.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4d93264.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WeaponExpertiseRanks struct {
	THeader GBIDHeader
	ArRanks DT_VARIABLEARRAY[*WeaponExpertiseRank]
}

func (t *WeaponExpertiseRanks) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArRanks.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventCameraMoveToCameraMarker struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType              DT_UINT
	TConditions         TriggerConditions
	FGenerated          DT_INT
	Unk_6cba752         DT_INT
	Unk_e560b0b         DT_UINT
	TDuration           DT_FLOAT
	DwTriggerFlags      DT_UINT
	DwTriggerFlagsEx    DT_UINT
	TCleanup            TriggerCleanup
	Unk_49e9257         DT_INT
	Unk_5490979         DT_INT
	DwPad               DT_UINT
	SzCameraMarker      DT_UINT
	Unk_8f65c3f         DT_INT
	EOrientationMode    DT_ENUM
	Unk_daebe18         DT_ENUM
	Unk_6101673         DT_UINT
	Unk_8470ffc         HardpointLink
	Unk_46c8459         DT_UINT
	VecTargetOffset     DT_VECTOR3D
	EMicrophoneMode     DT_ENUM
	VecMicrophoneOffset DT_VECTOR3D
	EBlendEasing        DT_ENUM
}

func (t *TriggerEventCameraMoveToCameraMarker) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzCameraMarker.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8f65c3f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.EOrientationMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_daebe18.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6101673.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8470ffc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_46c8459.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecTargetOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMicrophoneMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecMicrophoneOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamBase struct {
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
}

func (t *ScriptEventParamBase) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WorldStateUpdateMessage struct {
	THeader       RequiredMessageHeader
	SnoWorldState DT_SNO
	NValue        DT_INT
}

func (t *WorldStateUpdateMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorldState.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 86,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamItem struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
	SnoItem    DT_SNO
}

func (t *ScriptEventParamItem) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItem.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamSelf struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
	IdValue    DT_INT
}

func (t *ScriptEventParamSelf) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdValue.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScaleKey struct {
	NFrame DT_INT
	VScale DT_VECTOR3D
}

func (t *ScaleKey) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFrame.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.VScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DungeonAffixDefinition struct {
	NWeight         DT_INT
	EAffixCategory  DT_ENUM
	BIsHiddenAffix  DT_INT
	GbidAffixFamily DT_GBID
	Unk_7f8b6b7     DT_VARIABLEARRAY[*DungeonAffixRange]
}

func (t *DungeonAffixDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NWeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAffixCategory.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsHiddenAffix.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidAffixFamily.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 30,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7f8b6b7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIWrapPanelStyle struct {
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	Unk_725129e               DT_TAGMAP[*DT_ENUM]
}

func (t *UIWrapPanelStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_725129e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DynamicMovementData_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*DynamicMovementData]
}

func (t *DynamicMovementData_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type InventoryRequestUseMessage struct {
	THeader      RequiredMessageHeader
	AnnItemToUse DT_ACD_NETWORK_NAME
	SnoItem      DT_SNO
	EType        DT_ENUM
	AnnTarget    DT_ACD_NETWORK_NAME
	TPlace       SharedServerWorldPlace
}

func (t *InventoryRequestUseMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnItemToUse.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItem.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPlace.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ParagonEquipBoardMessage struct {
	THeader         RequiredMessageHeader
	SnoBoard        DT_SNO
	ERotation       DT_ENUM
	DwGateNodeIndex DT_UINT
}

func (t *ParagonEquipBoardMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoBoard.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 108,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.ERotation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwGateNodeIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type VibrationDefinition struct {
	DwFlags         DT_UINT
	TSystemDuration DT_FLOAT
	TOutroDuration  DT_FLOAT
	WdMinRange      DT_FLOAT
	WdMaxRange      DT_FLOAT
	FlPriority      DT_FLOAT
	Unk_b7a52c1     DT_INT
	Unk_d131223     Type_cbfdd2ea
	Unk_7bb3b91     Type_cbfdd2ea
}

func (t *VibrationDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSystemDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TOutroDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.WdMinRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.WdMaxRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPriority.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b7a52c1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d131223.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7bb3b91.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConnectionEstablishedMessage struct {
	THeader          RequiredMessageHeader
	DwGameAccountId  DT_UINT
	DwAnimSyncedSeed DT_UINT
	TTrace           TraceMessage
}

func (t *ConnectionEstablishedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwGameAccountId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwAnimSyncedSeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTrace.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupTrack struct {
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
}

func (t *EffectGroupTrack) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SceneSubzoneMarkerSetPreloadHelper struct {
	SnoScene           DT_SNO
	TSubzoneMarkerSets SerialDataInfo
}

func (t *SceneSubzoneMarkerSetPreloadHelper) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoScene.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 33,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSubzoneMarkerSets.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_49d4b843 struct {
	THeader   RequiredMessageHeader
	SnoAffix  DT_SNO
	BIsAdding DT_INT
}

func (t *Type_49d4b843) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAffix.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 104,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsAdding.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_4a3c7431 struct {
	FlMax DT_FLOAT
	FlMin DT_FLOAT
}

func (t *Type_4a3c7431) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorPropData struct {
	FIsCorpse        DT_INT
	FIsTraversalExit DT_INT
	ECrafterType     DT_ENUM
	FIsTraversalRope DT_INT
	Unk_49ab5de      DT_FLOAT
}

func (t *ActorPropData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FIsCorpse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FIsTraversalExit.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECrafterType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FIsTraversalRope.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49ab5de.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnGetHitBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	Unk_99e97f7           DT_INT
}

func (t *OnGetHitBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_99e97f7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HeightFieldWaveSettings struct {
	Unk_f4522ab      DT_FLOAT
	Unk_d494c2d      DT_FLOAT
	FlAmplitudeRatio DT_FLOAT
	Unk_12070ce      DT_FLOAT
}

func (t *HeightFieldWaveSettings) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f4522ab.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d494c2d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAmplitudeRatio.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_12070ce.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DemonScrollDefinition struct {
	ArRewards DT_FIXEDARRAY[*DemonScrollReward]
}

func (t *DemonScrollDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArRewards.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+548, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScaleCurve struct {
	PtKeysComp DT_VARIABLEARRAY[*DT_BYTE]
}

func (t *ScaleCurve) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtKeysComp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AIStateDebugTestPowerMessage struct {
	THeader       RequiredMessageHeader
	AnnActor      DT_ACD_NETWORK_NAME
	SnoPower      DT_SNO
	DwCooldownKey DT_INT64
}

func (t *AIStateDebugTestPowerMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnActor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwCooldownKey.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LookVariantMaterialMap struct {
	DwLookVariant                  DT_UINT
	ArLookVariantMaterialOverrides DT_VARIABLEARRAY[*LookVariantMaterialOverride]
}

func (t *LookVariantMaterialMap) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwLookVariant.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArLookVariantMaterialOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TryUnlockRecipeTierMessage struct {
	THeader      RequiredMessageHeader
	ECrafterType DT_ENUM
}

func (t *TryUnlockRecipeTierMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECrafterType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerIntValMessage struct {
	THeader     RequiredMessageHeader
	Unk_dce541c DT_UINT
	NVal        DT_INT
}

func (t *PlayerIntValMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NVal.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GroundNormalTests struct {
	BEnabled      DT_INT
	PtGroundTests DT_VARIABLEARRAY[*GroundTestPosition]
}

func (t *GroundNormalTests) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEnabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtGroundTests.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_4b8dbccd struct {
	FlNoSpawnRadius DT_FLOAT
}

func (t *Type_4b8dbccd) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlNoSpawnRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerHeightFieldTexture struct {
	NWidth     DT_INT
	NHeight    DT_INT
	EFormat    DT_ENUM
	ArTexels   DT_VARIABLEARRAY[*DT_BYTE]
	SnoTexture DT_SNO
}

func (t *MarkerHeightFieldTexture) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NWidth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EFormat.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArTexels.UnmarshalD4(r, &Options{Flags: 2097153}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTexture.UnmarshalD4(r, &Options{Group: 44}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type StringWrapper struct {
	SzValue DT_CSTRING[*DT_BYTE]
}

func (t *StringWrapper) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_4bd0bef6 struct {
	EHairState    DT_ENUM
	EBeardState   DT_ENUM
	EJewelryState DT_ENUM
}

func (t *Type_4bd0bef6) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EHairState.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBeardState.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EJewelryState.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type StoryboardPlaySoundTrack struct {
	// Inherits StoryboardGenericTrack
	// Inherits StoryboardTrack
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	Unk_9b2bc26 Type_642fc25a
}

func (t *StoryboardPlaySoundTrack) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b2bc26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DebugDataHeaderMessage struct {
	THeader     RequiredMessageHeader
	NType       DT_INT
	ArParams    DT_FIXEDARRAY[*DT_INT]
	NDataBlocks DT_INT
}

func (t *DebugDataHeaderMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArParams.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.NDataBlocks.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UInt64DataMessage struct {
	THeader RequiredMessageHeader
	UData   DT_INT64
}

func (t *UInt64DataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.UData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RareMonsterNamesMessage struct {
	THeader           RequiredMessageHeader
	Ann               DT_ACD_NETWORK_NAME
	PgbidRareNames    DT_FIXEDARRAY[*DT_GBID]
	SnoMonsterAffixes DT_FIXEDARRAY[*DT_SNO]
}

func (t *RareMonsterNamesMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.PgbidRareNames.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
		Group:       7,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMonsterAffixes.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
		Group:       107,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestTrackedQuestChangedMessage struct {
	THeader          RequiredMessageHeader
	Unk_dce541c      DT_UINT
	SnoQuest         DT_SNO
	BManuallyTracked DT_INT
}

func (t *QuestTrackedQuestChangedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.BManuallyTracked.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PVPMonsterMessage struct {
	THeader        RequiredMessageHeader
	AnnMonsterName DT_ACD_NETWORK_NAME
	SnoMonster     DT_SNO
	WpLocation     DT_VECTOR3D
	BRemove        DT_INT
}

func (t *PVPMonsterMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnMonsterName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMonster.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpLocation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.BRemove.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamActor struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
	SnoActor   DT_SNO
}

func (t *ScriptEventParamActor) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventDisableConstraint struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType          DT_UINT
	DwPad           DT_UINT
	TConditions     TriggerConditions
	FGenerated      DT_INT
	Unk_6cba752     DT_INT
	Unk_e560b0b     DT_UINT
	TConstraintLink ConstraintLink
	THardpointLink  HardpointLink
}

func (t *TriggerEventDisableConstraint) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConstraintLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Triangle2D struct {
	Wp0 DT_VECTOR2D
	Wp1 DT_VECTOR2D
	Wp2 DT_VECTOR2D
}

func (t *Triangle2D) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wp0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wp1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wp2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Triangle3D struct {
	Wp0 DT_VECTOR3D
	Wp1 DT_VECTOR3D
	Wp2 DT_VECTOR3D
}

func (t *Triangle3D) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wp0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wp1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wp2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionSkillRankCompare struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
	ECompare DT_ENUM
	NValue   DT_INT
}

func (t *PowerConditionSkillRankCompare) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECompare.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.NValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamDWORD struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
	DwValue    DT_UINT
}

func (t *ScriptEventParamDWORD) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamFloat struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
	FlValue    DT_FLOAT
}

func (t *ScriptEventParamFloat) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamAllowAny struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
}

func (t *ScriptEventParamAllowAny) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RunTimeMaterialValues struct {
	ArMaterialScalarValues DT_VARIABLEARRAY[*RunTimeMaterialScalarValueEntry]
	ArMaterialScalarGraphs DT_VARIABLEARRAY[*RunTimeMaterialScalarGraphEntry]
	ArMaterialVectorValues DT_VARIABLEARRAY[*RunTimeMaterialVectorValueEntry]
	ArMaterialVectorGraphs DT_VARIABLEARRAY[*RunTimeMaterialVectorGraphEntry]
}

func (t *RunTimeMaterialValues) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArMaterialScalarValues.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArMaterialScalarGraphs.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArMaterialVectorValues.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArMaterialVectorGraphs.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamPower struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
	SnoPower   DT_SNO
}

func (t *ScriptEventParamPower) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamQuest struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
	SnoQuest   DT_SNO
}

func (t *ScriptEventParamQuest) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TraversalInstanceData struct {
	ETraversalType  DT_ENUM
	Unk_df09d6a     DT_INT
	SnoCameraEffect DT_SNO
}

func (t *TraversalInstanceData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETraversalType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_df09d6a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCameraEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type VersionsMessage struct {
	THeader       RequiredMessageHeader
	UProtocolHash DT_UINT
	SzBuildVer    DT_CHARARRAY
	UServiceHash  DT_INT64
}

func (t *VersionsMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.UProtocolHash.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzBuildVer.UnmarshalD4(r, &Options{
		ArrayLength: 32,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.UServiceHash.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamScene struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
	SnoScene   DT_SNO
}

func (t *ScriptEventParamScene) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoScene.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 33,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SpawnLocType struct {
	THeader   GBIDHeader
	ECategory DT_ENUM
}

func (t *SpawnLocType) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECategory.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventCancelLook struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType        DT_UINT
	DwPad         DT_UINT
	TConditions   TriggerConditions
	FGenerated    DT_INT
	Unk_6cba752   DT_INT
	Unk_e560b0b   DT_UINT
	DwActorID     DT_UINT
	SnoAppearance DT_SNO
	TLookLink     LookLink
	Unk_279aa5a   DT_INT
}

func (t *TriggerEventCancelLook) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwActorID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAppearance.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 9,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLookLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_279aa5a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_4e43aa7a struct {
	DwType      DT_UINT
	Unk_9b2bc26 Type_80fa280c
	Unk_77ed19a DT_ENUM
	DwPad       DT_UINT
}

func (t *Type_4e43aa7a) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b2bc26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77ed19a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamWorld struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
	SnoWorld   DT_SNO
}

func (t *ScriptEventParamWorld) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerHeightFieldTextureInfo struct {
	NTextureIndex DT_INT
	NXOffset      DT_INT
	NWidth        DT_INT
}

func (t *MarkerHeightFieldTextureInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NTextureIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NXOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NWidth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameBalanceDefinition struct {
	EGameBalanceType DT_ENUM
	BIgnoreOnLoad    DT_INT
	PtData           DT_POLYMORPHIC_VARIABLEARRAY[*GameBalanceTable]
	PtPostprocessed  DT_INT64
}

func (t *GameBalanceDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EGameBalanceType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIgnoreOnLoad.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtData.UnmarshalD4(r, &Options{Flags: 262145}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPostprocessed.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type StartingAllowedWeather struct {
	SnoSubzone  DT_SNO
	Unk_efcdea5 DT_ENUM
}

func (t *StartingAllowedWeather) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSubzone.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_efcdea5.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BlockingActorLoadMessage struct {
	THeader     RequiredMessageHeader
	Ann         DT_ACD_NETWORK_NAME
	SnoActor    DT_SNO
	Unk_73c20e  DT_SNO_NAME
	Unk_b51bb90 DT_ENUM
}

func (t *BlockingActorLoadMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_73c20e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b51bb90.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RareMonsterNamesEntry struct {
	THeader              GBIDHeader
	FPrefix              DT_INT
	SnoAffixEffect       DT_SNO
	ArFamilyRestrictions DT_VARIABLEARRAY[*DT_SNO]
	Unk_47bc829          DT_ENUM
	SnoCondition         DT_SNO
	Unk_340ed93          DT_INT
}

func (t *RareMonsterNamesEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.FPrefix.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAffixEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 107,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArFamilyRestrictions.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 82,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_47bc829.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+292, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_340ed93.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WorldStateUpdateData struct {
	SnoWorldState DT_SNO
	NValue        DT_INT
}

func (t *WorldStateUpdateData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorldState.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 86,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventFootstep struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	TConditions           TriggerConditions
	FGenerated            DT_INT
	Unk_6cba752           DT_INT
	Unk_e560b0b           DT_UINT
	THardpointLink        HardpointLink
	EFootstepType         DT_ENUM
	EFootstepSide         DT_ENUM
	SnoFootstepSoundTable DT_SNO
	SnoFootstepSurface    DT_SNO
}

func (t *TriggerEventFootstep) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.EFootstepType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.EFootstepSide.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFootstepSoundTable.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFootstepSurface.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 43,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WwiseAudioBus struct {
	TName   WwiseName
	TParent WwiseName
}

func (t *WwiseAudioBus) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TParent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorGroupSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType         DT_UINT
	BNegate        DT_INT
	DwPad          DT_UINT
	GbidActorGroup DT_GBID
	Unk_c7b2b18    DT_ENUM
}

func (t *ActorGroupSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidActorGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 24,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c7b2b18.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnOtherBuffAddedCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	Unk_880879b           DT_VARIABLEARRAY[*Type_82280ff3]
}

func (t *OnOtherBuffAddedCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_880879b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventCameraTransitionToObserver struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType               DT_UINT
	TConditions          TriggerConditions
	FGenerated           DT_INT
	Unk_6cba752          DT_INT
	Unk_e560b0b          DT_UINT
	TDuration            DT_FLOAT
	DwTriggerFlags       DT_UINT
	DwTriggerFlagsEx     DT_UINT
	TCleanup             TriggerCleanup
	Unk_49e9257          DT_INT
	Unk_5490979          DT_INT
	DwPad                DT_UINT
	SnoObserver          DT_SNO
	Unk_74b7ed1          DT_INT
	ETargetType          DT_ENUM
	Unk_96c6da9          DT_UINT
	THardpointLinkTarget HardpointLink
	DwTargetID           DT_UINT
	ArAdditionalTargets  DT_VARIABLEARRAY[*Type_5eb6ade]
	EBlendEasing         DT_ENUM
	FlRadiusConstraint   DT_FLOAT
}

func (t *TriggerEventCameraTransitionToObserver) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoObserver.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 26,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_74b7ed1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETargetType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_96c6da9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLinkTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTargetID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArAdditionalTargets.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRadiusConstraint.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HirelingSwapMessage struct {
	THeader   RequiredMessageHeader
	ENewClass DT_ENUM
}

func (t *HirelingSwapMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ENewClass.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActivityMetadata struct{}

func (t *ActivityMetadata) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+1, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Material struct {
	NSortPri DT_INT
}

func (t *Material) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSortPri.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_50b285a4 struct {
	THeader  RequiredMessageHeader
	Ann      DT_ACD_NETWORK_NAME
	SnoPower DT_SNO
}

func (t *Type_50b285a4) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SalvagedItemLabelSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType     DT_UINT
	BNegate    DT_INT
	DwPad      DT_UINT
	EItemLabel DT_ENUM
}

func (t *SalvagedItemLabelSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EItemLabel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimPermutation struct {
	UID                     DT_UINT
	DwFlags                 DT_UINT
	FlFrameRate             DT_FLOAT
	FlCompression           DT_FLOAT
	DwBlendTime             DT_FLOAT
	Unk_fe5755e             DT_FLOAT
	EBlendCurve             DT_ENUM
	DwWeight                DT_UINT
	TSpeedMultRange         DT_RANGE[*DT_FLOAT]
	NBoneCount              DT_INT
	PtPayloadData           DT_VARIABLEARRAY[*AnimPayloadData]
	TPhaseName              DT_UINT
	EPhasePlaybackMode      DT_ENUM
	ArContactFrames         DT_FIXEDARRAY[*AnimContactFrame]
	ArFacingWindows         DT_VARIABLEARRAY[*AnimFacingWindow]
	ArIKFrames              DT_VARIABLEARRAY[*IKFrames]
	Unk_c61b9d1             DT_FLOAT
	ArInterruptFrames       DT_FIXEDARRAY[*DT_INT]
	Unk_75e1ebe             DT_RANGE[*DT_INT]
	Unk_f14b63c             DT_RANGE[*DT_INT]
	Unk_ddce6df             DT_INT
	EAnimationScalingType   DT_ENUM
	FlMinimumAnimationScale DT_FLOAT
	FlMaximumAnimationScale DT_FLOAT
	Unk_4f89e54             DT_FLOAT
	Unk_40c83b5             DT_FLOAT
	Unk_41ae864             DT_FLOAT
	Unk_f219e46             DT_ENUM
	Unk_acf4ed5             DT_INT
	Unk_779d247             DT_INT
	NPermutationGroup       DT_BYTE
	NKeyframeCount          DT_INT
	Unk_3068b27             DT_UINT
	SnoEffectGroup          DT_SNO
	Unk_2e355dd             DT_INT
	Unk_536659a             DT_INT
	Unk_b4c58a6             DT_INT
	Unk_4b39bee             DT_VARIABLEARRAY[*Type_9e8134dc]
	WvAvgVel                DT_VECTOR3D
	Unk_57d4879             PRTransform
	THardpointLink          HardpointLink
	Unk_bd4a157             DT_FLOAT
	Unk_a3acec8             DT_UINT
	PnAnimToStructure       DT_INT64
}

func (t *AnimPermutation) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.UID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFrameRate.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlCompression.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwBlendTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fe5755e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendCurve.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwWeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSpeedMultRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.NBoneCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPayloadData.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPhaseName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPhasePlaybackMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArContactFrames.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArFacingWindows.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArIKFrames.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c61b9d1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArInterruptFrames.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_75e1ebe.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f14b63c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ddce6df.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAnimationScalingType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMinimumAnimationScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMaximumAnimationScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4f89e54.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_40c83b5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+228, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_41ae864.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f219e46.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+236, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_acf4ed5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_779d247.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+244, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPermutationGroup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.NKeyframeCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+252, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3068b27.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2e355dd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_536659a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4c58a6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4b39bee.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.WvAvgVel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+300, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_57d4879.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+328, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+336, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bd4a157.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+340, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a3acec8.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+344, io.SeekStart); err != nil {
		return err
	}
	if err := t.PnAnimToStructure.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+352, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ACDPrimaryPowerMessage struct {
	THeader             RequiredMessageHeader
	Ann                 DT_ACD_NETWORK_NAME
	SnoPower            DT_SNO
	UCommandFrame       DT_UINT
	Unk_f4fb70          DT_VECTOR3D
	BForceOverride      DT_INT
	EInterruptReason    DT_OPTIONAL[*DT_ENUM]
	DwFlags             DT_OPTIONAL[*DT_UINT]
	AnnTargetName       DT_OPTIONAL[*DT_ACD_NETWORK_NAME]
	WpTarget            DT_OPTIONAL[*SharedServerWorldPlace]
	WpTargetOffset      DT_OPTIONAL[*DT_VECTOR3D]
	Unk_81cd99f         DT_OPTIONAL[*DT_ACD_NETWORK_NAME]
	SnoTraversalSurface DT_OPTIONAL[*DT_SNO]
	DwPhaseNameHash     DT_OPTIONAL[*DT_UINT]
	DwPhasesFinished    DT_OPTIONAL[*DT_UINT]
	ESlot               DT_OPTIONAL[*DT_ENUM]
	TLocalSyncTransform DT_OPTIONAL[*PRTransform]
	Unk_c69d3ef         DT_OPTIONAL[*DT_FLOAT]
	Unk_f6c2065         DT_OPTIONAL[*DT_INT]
	SnoPowerInterrupted DT_OPTIONAL[*DT_SNO]
}

func (t *ACDPrimaryPowerMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.UCommandFrame.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f4fb70.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.BForceOverride.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.EInterruptReason.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnTargetName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpTargetOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_81cd99f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTraversalSurface.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPhaseNameHash.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPhasesFinished.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESlot.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLocalSyncTransform.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c69d3ef.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6c2065.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerInterrupted.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerData struct {
	TTriggerProxData       TriggerProximityData
	SnoTriggerEnteredPower DT_SNO
	SnoTriggerPulsePower   DT_SNO
	FLogicMust             DT_INT
	SnoTriggerExitedPower  DT_SNO
}

func (t *TriggerData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTriggerProxData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEnteredPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerPulsePower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.FLogicMust.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerExitedPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DRLGDungeonState struct {
	GbidDungeonState DT_GBID
	BNegate          DT_INT
}

func (t *DRLGDungeonState) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidDungeonState.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorPhysicsData struct {
	SnoPhysics                     DT_SNO
	Unk_49cf485                    DT_SNO
	EMaterial                      DT_ENUM
	FlExplosionFactor              DT_FLOAT
	FlWindFactor                   DT_FLOAT
	FlPartialRagdollResponsiveness DT_FLOAT
	Unk_fdc1015                    DT_UINT
}

func (t *ActorPhysicsData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPhysics.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 28,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49cf485.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 28,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMaterial.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlExplosionFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlWindFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPartialRagdollResponsiveness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fdc1015.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BoneData struct {
	Unk_a3acec8                      DT_UINT
	NBaseBoneCount                   DT_INT
	PtBoneStructure                  DT_VARIABLEARRAY[*BoneStructure]
	NClothBoneCount                  DT_INT
	Unk_ad025d8                      DT_INT
	Unk_4118a82                      DT_FIXEDARRAY[*Type_dbcb04f3]
	Unk_73d52a2                      DT_VARIABLEARRAY[*Type_f5cd87eb]
	TLookAtData                      LookAtData
	TIKData                          IKData
	Unk_42b03b4                      Type_fbdf1440
	TGroundNormalTests               GroundNormalTests
	PtHardpoints                     DT_VARIABLEARRAY[*Hardpoint]
	PtLoopConstraints                DT_VARIABLEARRAY[*ConstraintParameters]
	Unk_eb48138                      DT_VARIABLEARRAY[*HardpointLink]
	PtNPCComponentHardpointOverrides DT_VARIABLEARRAY[*NPCComponentHardpointOverride]
	Unk_b6507e3                      DT_VARIABLEARRAY[*HardpointOffset]
	Unk_214010b                      DT_VARIABLEARRAY[*Type_e1ac09b4]
	Unk_b98787b                      DT_INT
	URagdollDegrade                  DT_UINT
}

func (t *BoneData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a3acec8.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NBaseBoneCount.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtBoneStructure.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NClothBoneCount.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ad025d8.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4118a82.UnmarshalD4(r, &Options{ArrayLength: 7}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_73d52a2.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLookAtData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.TIKData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_42b03b4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.TGroundNormalTests.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+312, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtHardpoints.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+328, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtLoopConstraints.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+344, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eb48138.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+360, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtNPCComponentHardpointOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+376, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b6507e3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+392, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_214010b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+408, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b98787b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+412, io.SeekStart); err != nil {
		return err
	}
	if err := t.URagdollDegrade.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+416, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RecipeIngredient struct {
	SnoCondition   DT_SNO
	SnoItem        DT_SNO
	NQuantity      DT_UINT
	BIgnoreScaling DT_INT
	Unk_20e0a16    DT_INT
	Unk_a6432a8    DT_RANGE[*DT_FLOAT]
	Unk_86b80f6    DT_GBID
}

func (t *RecipeIngredient) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItem.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NQuantity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIgnoreScaling.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_20e0a16.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a6432a8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_86b80f6.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BoneName struct {
	SzName DT_UINT
}

func (t *BoneName) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventHideCaptionUI struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
}

func (t *TriggerEventHideCaptionUI) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerPossessActorMessage struct {
	THeader     RequiredMessageHeader
	Unk_dce541c DT_UINT
	AnnACD      DT_ACD_NETWORK_NAME
}

func (t *PlayerPossessActorMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnACD.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SubObjectSegment struct {
	PBoneIDs     DT_VARIABLEARRAY[*DT_INT]
	NVertCount   DT_INT
	NVertOffset  DT_INT
	NIndexCount  DT_INT
	NIndexOffset DT_INT
}

func (t *SubObjectSegment) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PBoneIDs.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NVertCount.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NVertOffset.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NIndexCount.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.NIndexOffset.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnFirstHitAttemptBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnFirstHitAttemptBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerMod struct {
	SzName             DT_UINT
	NMaxPoints         DT_INT
	DwModId            DT_UINT
	DwModMask          DT_UINT
	Unk_94cc84e        DT_UINT
	BAppendDescription DT_INT
	Unk_7b47c37        DT_INT
	ArSkillTags        DT_VARIABLEARRAY[*DT_GBID]
}

func (t *PowerMod) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMaxPoints.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwModId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwModMask.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_94cc84e.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BAppendDescription.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7b47c37.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSkillTags.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 56,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_52314c2f struct {
	Bones DT_VARIABLEARRAY[*Type_6f18c43c]
}

func (t *Type_52314c2f) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Bones.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WorldLocationMessageData struct {
	VScale    DT_VECTOR3D
	Transform PRTransform
	IdSWorld  DT_SHARED_SERVER_DATA_ID
}

func (t *WorldLocationMessageData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.VScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Transform.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSWorld.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_525de28e struct {
	Unk_1c4f058      DT_UINT
	TUnlockCondition ConditionWrapper
}

func (t *Type_525de28e) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1c4f058.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TUnlockCondition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventAddEffectGroup struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType                         DT_UINT
	DwPad                          DT_UINT
	TConditions                    TriggerConditions
	FGenerated                     DT_INT
	Unk_6cba752                    DT_INT
	Unk_e560b0b                    DT_UINT
	Unk_85269a4                    DT_INT
	Unk_b9368ac                    DT_INT
	Unk_f50537b                    DT_INT
	Unk_6fd6f47                    DT_INT
	Unk_f22bb26                    DT_INT
	Unk_4102322                    DT_INT
	Unk_9a2c9a0                    DT_INT
	Unk_ab8c139                    DT_INT
	FOverrideHardpoint             DT_INT
	Unk_edec5ed                    DT_INT
	Unk_e312e34                    DT_UINT
	DwActorID                      DT_UINT
	DwID                           DT_UINT
	SnoEffectGroup                 DT_SNO
	THardpointLinks                DT_FIXEDARRAY[*HardpointLink]
	DwTriggerFlags                 DT_UINT
	DwTriggerFlagsEx               DT_UINT
	Unk_b0f4eeb                    DT_UINT
	Transform                      PRTransform
	TEffectGroupHardpointLink      HardpointLink
	SnoPowerEffectParam            DT_SNO
	VecScale                       DT_VECTOR3D
	VecScalar                      DT_VECTOR2D
	FlPowerEffectSizeOverride      DT_FLOAT
	FlPowerEffectIntensityOverride DT_FLOAT
	FlPowerEffectDurationOverride  DT_FLOAT
	FlPowerEffectLengthOverride    DT_FLOAT
	FlPowerEffectWidthOverride     DT_FLOAT
	FlPowerEffectHeightOverride    DT_FLOAT
	DwUniqueID                     DT_UINT
}

func (t *TriggerEventAddEffectGroup) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_85269a4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b9368ac.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f50537b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6fd6f47.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f22bb26.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4102322.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a2c9a0.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab8c139.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.FOverrideHardpoint.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_edec5ed.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e312e34.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwActorID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLinks.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b0f4eeb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Transform.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEffectGroupHardpointLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerEffectParam.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPowerEffectSizeOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+228, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPowerEffectIntensityOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPowerEffectDurationOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+236, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPowerEffectLengthOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPowerEffectWidthOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+244, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPowerEffectHeightOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwUniqueID.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ExtractAffixResultMessage struct {
	THeader     RequiredMessageHeader
	NResultCode DT_INT
	AnnItem     DT_ACD_NETWORK_NAME
}

func (t *ExtractAffixResultMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NResultCode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnItem.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerEffectGroupData struct {
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType                  DT_UINT
	DwPad                   DT_UINT
	Unk_90afea4             DT_UINT
	Unk_4bf3f6b             DT_FLOAT
	Unk_9411612             DT_FLOAT
	PtRunTimeMaterialValues DT_VARIABLEARRAY[*RunTimeMaterialValues]
}

func (t *MarkerEffectGroupData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_90afea4.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4bf3f6b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9411612.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtRunTimeMaterialValues.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EnchantAffixChooseMessage struct {
	THeader              RequiredMessageHeader
	AnnItem              DT_ACD_NETWORK_NAME
	TEnchantAffixChoices DT_FIXEDARRAY[*EnchantAffixChoice]
}

func (t *EnchantAffixChooseMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnItem.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEnchantAffixChoices.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SimpleRequest struct {
	THeader Type_72bd65f8
}

func (t *SimpleRequest) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_535640f1 struct{}

func (t *Type_535640f1) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+1, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_53844691 struct {
	Key         Type_fbb7557a
	TDebugName  WwiseName
	Unk_a08b499 DT_INT
}

func (t *Type_53844691) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Key.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDebugName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a08b499.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AIPathData struct {
	M_cellData   DT_VARIABLEARRAY[*AICellData]
	M_cellBytes  DT_VARIABLEARRAY[*AICellBytes]
	Unk_5d4c076  DT_VARIABLEARRAY[*Type_5f1859b4]
	Unk_14f08f0  DT_INT64
	Unk_7a5d20a  DT_INT
	M_cellWidth  DT_FLOAT
	M_cellHeight DT_FLOAT
}

func (t *AIPathData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_cellData.UnmarshalD4(r, &Options{Flags: 262144}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_cellBytes.UnmarshalD4(r, &Options{Flags: 262144}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5d4c076.UnmarshalD4(r, &Options{Flags: 262144}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_14f08f0.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7a5d20a.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_cellWidth.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_cellHeight.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnContactFramePowerCallback struct {
	// Inherits PowerCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	BCouldHaveRagdolled   DT_INT
	EContactFrame         DT_ENUM
	BOptional             DT_INT
}

func (t *OnContactFramePowerCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCouldHaveRagdolled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EContactFrame.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.BOptional.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConditionData struct {
	SnoCondition   DT_SNO
	HConditionText StringLabelHandleEx
}

func (t *ConditionData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.HConditionText.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GoToWaypointMessage struct {
	THeader        RequiredMessageHeader
	SnoLevelArea   DT_SNO
	AnnWaypointSrc DT_ACD_NETWORK_NAME
}

func (t *GoToWaypointMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelArea.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnWaypointSrc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MonsterExtRaritySubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType      DT_UINT
	BNegate     DT_INT
	DwPad       DT_UINT
	ERarity     DT_ENUM
	Unk_c7b2b18 DT_ENUM
}

func (t *MonsterExtRaritySubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ERarity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c7b2b18.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventInvalidType struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
}

func (t *ScriptEventInvalidType) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type POICameraGizmoData struct {
	// Inherits NamedGizmoData
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
	Unk_2f154ff                  POICameraInstanceData
}

func (t *POICameraGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2f154ff.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SupportedServices struct {
	FVendor       DT_FIXEDARRAY[*DT_INT]
	FCrafter      DT_FIXEDARRAY[*DT_INT]
	FClanBank     DT_INT
	FClassPassive DT_INT
	FHealer       DT_INT
	FStash        DT_INT
	FWardrobe     DT_INT
}

func (t *SupportedServices) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FVendor.UnmarshalD4(r, &Options{
		ArrayLength: 12,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.FCrafter.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FClanBank.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.FClassPassive.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.FHealer.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.FStash.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWardrobe.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamFloatGreaterThan struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
	FlValue    DT_FLOAT
}

func (t *ScriptEventParamFloatGreaterThan) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_54534723 struct {
	Unk_460eda3 DT_CSTRING[*DT_BYTE]
}

func (t *Type_54534723) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_460eda3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EnterWorldMessage struct {
	THeader   RequiredMessageHeader
	IdSWorld  DT_SHARED_SERVER_DATA_ID
	SnoWorld  DT_SNO
	AtPlayers DT_FIXEDARRAY[*EnterWorldPlayer]
}

func (t *EnterWorldMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSWorld.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.AtPlayers.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_5524bcce struct {
	SnoPowerFrom DT_SNO
	Unk_ad10223  DT_VARIABLEARRAY[*Type_a48e11e6]
}

func (t *Type_5524bcce) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerFrom.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ad10223.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BiomeItem struct {
	// Inherits PolymorphicBase
	DwType                 DT_UINT
	DwPad                  DT_UINT
	FlRadius               DT_FLOAT
	Unk_2fd1cdb            DT_FLOAT
	TAllowedScaleRange     DT_RANGE[*DT_FLOAT]
	Unk_87acb69            DT_RANGE[*DT_FLOAT]
	Unk_87acb6a            DT_RANGE[*DT_FLOAT]
	Unk_87acb6b            DT_RANGE[*DT_FLOAT]
	Unk_9854b6a            DT_RANGE[*DT_FLOAT]
	FlChance               DT_FLOAT
	DwFlags                DT_UINT
	Unk_2a8c4b6            DT_FLOAT
	AAzimuthAngle          DT_FLOAT
	AAltitudeAngle         DT_FLOAT
	Unk_6ead041            DT_RANGE[*DT_FLOAT]
	TParametricSettings    ParametricSettings
	ArProximityAdjustments DT_VARIABLEARRAY[*ProximityAdjustment]
}

func (t *BiomeItem) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2fd1cdb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAllowedScaleRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87acb69.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87acb6a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87acb6b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9854b6a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlChance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2a8c4b6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.AAzimuthAngle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.AAltitudeAngle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6ead041.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TParametricSettings.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArProximityAdjustments.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalRoadSpline struct {
	SnoWorld       DT_SNO
	DwMarkerPathID DT_UINT
	ERoadType      DT_ENUM
	ArWorldPoints  DT_VARIABLEARRAY[*DT_VECTOR3D]
}

func (t *GlobalRoadSpline) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMarkerPathID.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ERoadType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArWorldPoints.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnKnockbackEndPowerCallback struct {
	// Inherits PowerCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	BCouldHaveRagdolled   DT_INT
}

func (t *OnKnockbackEndPowerCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCouldHaveRagdolled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameTestingWorldSamplingStartMessage struct {
	THeader        RequiredMessageHeader
	SnoWorld       DT_SNO
	SnoSubzone     DT_SNO
	SnoScene       DT_SNO
	SnoQuest       DT_SNO
	SzTileSetName  DT_CHARARRAY
	SzLocationName DT_CHARARRAY
	Unk_7571722    DT_FLOAT
	Unk_6999b4f    DT_BCVEC2I
	GbidLabel      DT_GBID
	Unk_8d446c9    DT_INT
}

func (t *GameTestingWorldSamplingStartMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSubzone.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoScene.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 33,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzTileSetName.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLocationName.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7571722.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6999b4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidLabel.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 4,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8d446c9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_55ee8277 struct {
	Unk_3a75ef1 ConnectorProperties
	Unk_68e0239 DT_SNO
	Unk_a8bd38a DT_FLOAT
}

func (t *Type_55ee8277) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3a75ef1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_68e0239.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a8bd38a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventShowSubtitle struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
	HSubtitle        StringLabelHandleEx
}

func (t *TriggerEventShowSubtitle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.HSubtitle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimSetOrderTagEntry_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*AnimSetOrderTagEntry]
}

func (t *AnimSetOrderTagEntry_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_560ae4cf struct {
	THeader      InterpolationPathHeader
	PtArrayNodes DT_VARIABLEARRAY[*Type_977100c8]
}

func (t *Type_560ae4cf) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtArrayNodes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_562c888c struct {
	Unk_238a70d       DT_CSTRING[*DT_BYTE]
	SzSelectionCursor DT_CSTRING[*DT_BYTE]
}

func (t *Type_562c888c) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_238a70d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzSelectionCursor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerObserverVolumeData struct {
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType                 DT_UINT
	DwPad                  DT_UINT
	Unk_3017b36            DT_ENUM
	SnoObserver            DT_SNO
	SnoObserverMount       DT_SNO
	SnoActivationCondition DT_SNO
	Unk_fef4192            DT_FLOAT
	Unk_838ae70            DT_INT
}

func (t *MarkerObserverVolumeData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3017b36.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoObserver.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 26,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoObserverMount.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 26,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActivationCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fef4192.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_838ae70.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PrefabCustomization struct {
	SnoPrefab  DT_SNO
	Unk_a3efcf DT_VARIABLEARRAY[*Type_f4703db9]
}

func (t *PrefabCustomization) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPrefab.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 24,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a3efcf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerStartVariant struct {
	TName               DT_UINT
	Unk_73750d7         DT_INT
	BAutoCast           DT_INT
	BIgnoreRange        DT_INT
	BForceCast          DT_INT
	Unk_fca3b69         DT_INT
	ArPowerScriptParams DT_VARIABLEARRAY[*PowerScriptParam]
}

func (t *PowerStartVariant) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_73750d7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.BAutoCast.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIgnoreRange.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BForceCast.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fca3b69.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPowerScriptParams.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_56dcc16f struct {
	// Inherits Type_d4213c9b
	DwType      DT_UINT
	Unk_9b2bc26 Type_80554fed
	Unk_77ed19a DT_ENUM
	DwPad       DT_UINT
}

func (t *Type_56dcc16f) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b2bc26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77ed19a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorItemData struct {
	SnoItemInventorySound                DT_SNO
	SnoSalvageSound                      DT_SNO
	SnoRepairSound                       DT_SNO
	SnoCraftedSound                      DT_SNO
	SnoPickupOverrideSound               DT_SNO
	Unk_9aa038d                          DT_SNO
	SnoFlippyLandingSound                DT_SNO
	SnoFlippyMouseoverSound              DT_SNO
	ArFoleyMaterialTags                  DT_FIXEDARRAY[*FoleyMaterialTag]
	Unk_472eb5b                          DT_SNO
	SnoLootFlippyParticle                DT_SNO
	SnoLootSpecialFlippyActor            DT_SNO
	FLootLaunchFlippyForwards            DT_INT
	FLootFlippyDontOverrideParticleActor DT_INT
	Unk_13d073c                          DT_INT
	Unk_8fb3d30                          DT_INT
	Unk_842ce3a                          DT_INT
	FlLootFlippyLandingHeight            DT_FLOAT
	Unk_62f6313                          DT_SNO
	SnoPickupEffectGroup                 DT_SNO
	TAttachmentHardpointLink             HardpointLink
	Unk_28e7959                          DT_INT
	Unk_1427368                          DT_INT
	Unk_62c39fe                          Type_4bd0bef6
	Unk_98050e1                          DT_INT
	Unk_17c40c2                          DT_FIXEDARRAY[*Type_4bd0bef6]
	SnoAttachedActor                     DT_SNO
	HDefaultImage                        DT_UINT
	HSocketedImage                       DT_UINT
	HSocketedActiveImage                 DT_UINT
	FMustKeepInInventory                 DT_INT
	FBottomless                          DT_INT
	EItemUseType                         DT_ENUM
	SnoPowerUpPower                      DT_SNO
	SnoItemUseLevelAreaRequirement       DT_SNO
	THardpointOffsets                    DT_FIXEDARRAY[*HardpointOffsets]
	Unk_c0b773                           DT_FIXEDARRAY[*HardpointOffsets]
	Unk_def7f43                          DT_VARIABLEARRAY[*HardpointOffset]
	TWeaponData                          ActorWeaponData
	Unk_3b0050f                          ActorVisualInventoryData
	Unk_e133e62                          DT_INT
}

func (t *ActorItemData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItemInventorySound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSalvageSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRepairSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCraftedSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickupOverrideSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9aa038d.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFlippyLandingSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFlippyMouseoverSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArFoleyMaterialTags.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_472eb5b.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLootFlippyParticle.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 27,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLootSpecialFlippyActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.FLootLaunchFlippyForwards.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FLootFlippyDontOverrideParticleActor.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_13d073c.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8fb3d30.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_842ce3a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLootFlippyLandingHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_62f6313.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 27,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickupEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAttachmentHardpointLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_28e7959.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1427368.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_62c39fe.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_98050e1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_17c40c2.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAttachedActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.HDefaultImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.HSocketedImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.HSocketedActiveImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.FMustKeepInInventory.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.FBottomless.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.EItemUseType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerUpPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItemUseLevelAreaRequirement.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointOffsets.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+384, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c0b773.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+544, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_def7f43.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+560, io.SeekStart); err != nil {
		return err
	}
	if err := t.TWeaponData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+576, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3b0050f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+660, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e133e62.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+664, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TrackedQuestChangedMessage struct {
	THeader         RequiredMessageHeader
	AnnPlayer       DT_ACD_NETWORK_NAME
	SnoTrackedQuest DT_SNO
}

func (t *TrackedQuestChangedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnPlayer.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTrackedQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ParagonGlyphDefinition struct {
	HIcon               DT_UINT
	NStartingSize       DT_UINT
	ArSizeUpgradeLevels DT_VARIABLEARRAY[*DT_UINT]
	NMaxLevel           DT_UINT
	ERarity             DT_ENUM
	FUsableByClass      DT_FIXEDARRAY[*DT_INT]
	ArAffixes           DT_VARIABLEARRAY[*DT_SNO]
}

func (t *ParagonGlyphDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.NStartingSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSizeUpgradeLevels.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMaxLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.ERarity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUsableByClass.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArAffixes.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 112,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_572f201c struct {
	// Inherits PowerPhaseBase
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TPhaseName  DT_UINT
	Unk_fcb7313 DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	Unk_d0d932b DT_INT
	Unk_9a8200e DT_INT
}

func (t *Type_572f201c) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPhaseName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fcb7313.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0d932b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a8200e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ACDSyncBuffsMessage struct {
	THeader                       RequiredMessageHeader
	Ann                           DT_ACD_NETWORK_NAME
	Unk_35403b1                   DT_INT
	ArBuffs                       DT_FIXEDARRAY[*Type_a539118b]
	TEnterKnownLookOverrides      DT_OPTIONAL[*EnterKnownLookOverrides]
	TEnterKnownShaderMapOverrides DT_OPTIONAL[*EnterKnownShaderMapOverrides]
}

func (t *ACDSyncBuffsMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_35403b1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArBuffs.UnmarshalD4(r, &Options{
		ArrayLength: 15,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1652, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEnterKnownLookOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1704, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEnterKnownShaderMapOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1732, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AllLogicSubcondition struct {
	// Inherits LogicSubcondition
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType       DT_UINT
	BNegate      DT_INT
	DwPad        DT_UINT
	ArConditions DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *AllLogicSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MonsterFamilySubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType           DT_UINT
	BNegate          DT_INT
	DwPad            DT_UINT
	SnoMonsterFamily DT_SNO
	SzArchetype      DT_UINT
	Unk_c7b2b18      DT_ENUM
}

func (t *MonsterFamilySubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMonsterFamily.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 82,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzArchetype.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c7b2b18.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GizmoMessage struct {
	THeader        Type_b0f2a959
	AnnGizmo       DT_ACD_NETWORK_NAME
	DwGizmoContext DT_OPTIONAL[*DT_UINT]
}

func (t *GizmoMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnGizmo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwGizmoContext.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorGroupData_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*ActorGroupData]
}

func (t *ActorGroupData_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TraceMessage struct {
	TTraceId        Type_f5ac91bb
	SzSpanId        DT_CHARARRAY
	DwGameAccountId DT_UINT
	SzName          DT_CHARARRAY
	FIsTracked      DT_INT
}

func (t *TraceMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTraceId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzSpanId.UnmarshalD4(r, &Options{
		ArrayLength: 17,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwGameAccountId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{
		ArrayLength: 33,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.FIsTracked.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_5887daa1 struct {
	Unk_52f2d9  StringLabelHandleEx
	Unk_bb31b91 DT_CSTRING[*DT_BYTE]
	Unk_a1d8ccf DT_CSTRING[*DT_BYTE]
}

func (t *Type_5887daa1) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_52f2d9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bb31b91.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a1d8ccf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventActorPlayAnimation struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType             DT_UINT
	TConditions        TriggerConditions
	FGenerated         DT_INT
	Unk_6cba752        DT_INT
	Unk_e560b0b        DT_UINT
	TDuration          DT_FLOAT
	DwTriggerFlags     DT_UINT
	DwTriggerFlagsEx   DT_UINT
	TCleanup           TriggerCleanup
	Unk_49e9257        DT_INT
	Unk_5490979        DT_INT
	DwPad              DT_UINT
	Unk_f3d6423        DT_ENUM
	Unk_478755b        DT_ENUM
	Unk_4d01218        DT_FLOAT
	Unk_84dd910        DT_FLOAT
	DwActorID          DT_UINT
	EAnimLayerMode     DT_ENUM
	Unk_9209538        DT_ENUM
	Unk_a5153a1        DT_INT
	Unk_5ed01be        DT_INT
	Unk_9b2ead         DT_INT
	SnonameAnim        DT_SNO_NAME
	Unk_85269a4        DT_INT
	FRandomPermutation DT_INT
	NPermutationIndex  DT_INT
	Unk_32a328c        DT_INT
	FlAnimSpeedScale   DT_FLOAT
	DwAnimWeight       DT_BYTE
	EAnimLoopMode      DT_ENUM
	Unk_c86af88        DT_FLOAT
	Unk_396c7d1        DT_FLOAT
	Unk_515279b        DT_INT
	SzLocatorName      DT_UINT
	FlLocatorBlend     DT_FLOAT
}

func (t *TriggerEventActorPlayAnimation) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f3d6423.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_478755b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4d01218.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_84dd910.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwActorID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAnimLayerMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9209538.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a5153a1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5ed01be.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b2ead.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnonameAnim.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_85269a4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.FRandomPermutation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPermutationIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_32a328c.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAnimSpeedScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwAnimWeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAnimLoopMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c86af88.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_396c7d1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_515279b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLocatorName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLocatorBlend.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DemonSummoningQuestBucket_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*DemonSummoningQuestBucket]
}

func (t *DemonSummoningQuestBucket_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamSpawnerParentName struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType       DT_UINT
	EParamType   DT_ENUM
	DwPad        DT_UINT
	DwParentHash DT_UINT
	SzParent     DT_CSTRING[*DT_BYTE]
}

func (t *ScriptEventParamSpawnerParentName) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwParentHash.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzParent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamSpawnerParentSelf struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
}

func (t *ScriptEventParamSpawnerParentSelf) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerSplineData struct {
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType             DT_UINT
	DwPad              DT_UINT
	EInterpolationMode DT_ENUM
	Unk_a3f1699        DT_FLOAT
}

func (t *MarkerSplineData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EInterpolationMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a3f1699.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_58fbb94c struct {
	TUnlockCondition ConditionWrapper
}

func (t *Type_58fbb94c) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TUnlockCondition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIThumbButtonStyle struct {
	// Inherits UIButtonStyle
	// Inherits UITextStyle
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	TFont                     UIControlFont
	Unk_4741819               DT_TAGMAP[*DT_ENUM]
	TIcon                     UIControlIcon
	TClickSounds              Type_98c23c41
	Unk_10f81f0               DT_TAGMAP[*DT_ENUM]
}

func (t *UIThumbButtonStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFont.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4741819.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.TIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.TClickSounds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_10f81f0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NPCComponentSetDefinition struct {
	ArAppearances   DT_VARIABLEARRAY[*DT_SNO]
	ArSkinColors    DT_VARIABLEARRAY[*DT_INT]
	ArHairColors    DT_VARIABLEARRAY[*DT_INT]
	ArEquipmentDyes DT_VARIABLEARRAY[*DT_SNO]
	Unk_e8ad810     DT_VARIABLEARRAY[*Type_1b652647]
	Unk_be478b4     DT_VARIABLEARRAY[*Type_993e31cf]
	Unk_7cdd390     DT_FIXEDARRAY[*DT_VARIABLEARRAY[*DT_UINT]]
	Unk_8bee334     DT_FIXEDARRAY[*DT_VARIABLEARRAY[*DT_INT]]
	Unk_2e94cee     DT_VARIABLEARRAY[*Type_9b106a7f]
	Unk_395e53      DT_VARIABLEARRAY[*Type_1109bb04]
	Unk_3810f4      DT_VARIABLEARRAY[*Type_1f34a5e5]
	Unk_80d753b     FoleyMaterialTag
	Unk_1ae0e98     DT_ENUM
}

func (t *NPCComponentSetDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArAppearances.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 9,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSkinColors.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArHairColors.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArEquipmentDyes.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 122,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e8ad810.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_be478b4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7cdd390.UnmarshalD4(r, &Options{ArrayLength: 4}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8bee334.UnmarshalD4(r, &Options{ArrayLength: 4}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2e94cee.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_395e53.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3810f4.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_80d753b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+284, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1ae0e98.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ParagonGlyphUpgradeMessage struct {
	THeader     RequiredMessageHeader
	SnoGlyph    DT_SNO
	Unk_6499985 DT_UINT
}

func (t *ParagonGlyphUpgradeMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoGlyph.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 111,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6499985.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HorizontalTiledWindowPieces struct {
	// Inherits WindowPiecesBase
	// Inherits PolymorphicBase
	DwType       DT_UINT
	DwPad        DT_UINT
	FlImageScale DT_FLOAT
	NPadding     DT_UINT
	HPieceLeft   DT_UINT
	HPieceRight  DT_UINT
	HPieceMiddle DT_UINT
}

func (t *HorizontalTiledWindowPieces) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlImageScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPadding.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.HPieceLeft.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.HPieceRight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.HPieceMiddle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ClanLabel struct {
	SzName     DT_UINT
	ELabelType DT_ENUM
	BEnabled   DT_INT
}

func (t *ClanLabel) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.ELabelType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEnabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TerritoryRegionParams struct {
	SnoTexPattern DT_SNO
	RgbaColor     DT_RGBACOLOR
	Unk_4b95c37   DT_FLOAT
	Unk_be4fdf8   DT_FLOAT
	Unk_74b9406   DT_FLOAT
	FlFadeInTime  DT_FLOAT
}

func (t *TerritoryRegionParams) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTexPattern.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4b95c37.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_be4fdf8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_74b9406.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFadeInTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AccountDefinition struct {
	PProtoData DT_VARIABLEARRAY[*DT_BYTE]
}

func (t *AccountDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PProtoData.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIComboBoxStyle struct {
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	TClickSounds              Type_98c23c41
	TFont                     UIControlFont
	Unk_6657a4d               DT_TAGMAP[*DT_ENUM]
}

func (t *UIComboBoxStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TClickSounds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFont.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6657a4d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SwitchGizmoData struct {
	// Inherits NamedGizmoData
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                         DT_UINT
	DwPad                          DT_UINT
	FDisableNonFriendlyOperation   DT_INT
	FWalkToCenter                  DT_INT
	FGizmoStartsDisabled           DT_INT
	FUseStringListName             DT_INT
	FForceMinimapIcon              DT_INT
	FlOperationRadius              DT_FLOAT
	Unk_d0b1df5                    DT_FLOAT
	FlGizmoUseTime                 DT_FLOAT
	SnoChannelingEffect            DT_SNO
	Unk_2767229                    DT_INT
	FGizmoShowProgressBar          DT_INT
	Unk_6d9ebe1                    DT_INT
	Unk_5456245                    DT_INT
	Unk_af5815a                    DT_INT
	SnoOnClickEffect               DT_SNO
	SnoPickedUpEffect              DT_SNO
	SnoDropOnGroundEffect          DT_SNO
	TConditionData                 GizmoConditionData
	SnoPowerOperator               DT_SNO
	SnoPowerOperate                DT_SNO
	SnoPowerOperatorActive         DT_SNO
	SnoPowerOperateActive          DT_SNO
	Unk_359810e                    DT_INT
	NCooldown                      DT_UINT
	Unk_9c8478e                    DT_UINT
	Unk_d45ed2d                    DT_INT
	Unk_f6b20b7                    DT_INT
	Unk_54513b8                    DT_INT
	Unk_fd1f378                    DT_UINT
	Unk_487c14                     DT_UINT
	Unk_87f2609                    DT_UINT
	Unk_158eb4f                    DT_FLOAT
	Unk_ab58cd3                    DT_ENUM
	Unk_91a3966                    DT_UINT
	Unk_25312e5                    DT_UINT
	Unk_4be4371                    DT_INT
	TLockData                      LockingGizmoData
	TSwitchBehaviorData            SwitchBehaviorGizmoData
	FSwitchCanOperateMultipleTimes DT_INT
}

func (t *SwitchGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLockData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSwitchBehaviorData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.FSwitchCanOperateMultipleTimes.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MonsterACDInfo struct {
	EActorVariantType  DT_ENUM
	EGender            DT_ENUM
	EWeaponClass       DT_ENUM
	SnoAnimSetOverride DT_SNO
	SnoMonsterAffixes  DT_FIXEDARRAY[*DT_SNO]
	Unk_bec65ae        DT_FIXEDARRAY[*DT_SNO]
}

func (t *MonsterACDInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EActorVariantType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EGender.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EWeaponClass.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAnimSetOverride.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMonsterAffixes.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       9,
		Group:       107,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bec65ae.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       9,
		Group:       107,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalCrafterEvents struct {
	SnoConversations DT_FIXEDARRAY[*DT_SNO]
}

func (t *GlobalCrafterEvents) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoConversations.UnmarshalD4(r, &Options{
		ArrayLength: 7,
		Flags:       1,
		Group:       12,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DemonSummoningRitualQuests struct {
	SnoStartQuest      DT_SNO
	ArActivityQuests   DT_VARIABLEARRAY[*DT_SNO]
	ArCompletionQuests DT_VARIABLEARRAY[*DT_SNO]
	SnoRitualItem      DT_SNO
	Unk_9f4512f        DT_FIXEDARRAY[*DT_UINT]
	Unk_8649a3e        DT_FIXEDARRAY[*DT_UINT]
	Unk_85f303c        DT_FIXEDARRAY[*DT_UINT]
}

func (t *DemonSummoningRitualQuests) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoStartQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArActivityQuests.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCompletionQuests.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRitualItem.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9f4512f.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8649a3e.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_85f303c.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameTestingPersonaSamplingStartMessage struct {
	THeader       RequiredMessageHeader
	SnoClass      DT_SNO
	SnoFacialHair DT_SNO
	SnoHairStyle  DT_SNO
	SnoJewelry    DT_SNO
	BFemale       DT_INT
}

func (t *GameTestingPersonaSamplingStartMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoClass.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 74,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFacialHair.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 139,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoHairStyle.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 138,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoJewelry.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 119,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.BFemale.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SurveyTypeEntry_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*SurveyTypeEntry]
}

func (t *SurveyTypeEntry_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SoundTableEntry struct {
	DwID                DT_UINT
	SzTag               DT_UINT
	SnoSound            DT_SNO
	SnoSoundFriendly    DT_SNO
	SnoSoundNotFriendly DT_SNO
	DwFlags             DT_UINT
}

func (t *SoundTableEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzTag.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSoundFriendly.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSoundNotFriendly.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerLevelSubcondition struct {
	// Inherits Type_d3c3637f
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType        DT_UINT
	BNegate       DT_INT
	EComparisonOp DT_ENUM
	DwPad         DT_UINT
	NLevel        DT_INT
}

func (t *PlayerLevelSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MaterialScalarValueDefinition struct {
	// Inherits DefaultMaterialValueDefinition
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
	VValue DT_VECTOR4D
}

func (t *MaterialScalarValueDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.VValue.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventFadeRemotePlayers struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
}

func (t *TriggerEventFadeRemotePlayers) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type VertInfluences struct {
	TBoneInfluence DT_FIXEDARRAY[*Influence]
}

func (t *VertInfluences) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TBoneInfluence.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EnterKnownLookOverrides struct {
	ALookOverrides DT_FIXEDARRAY[*DT_UINT]
	Unk_3fb7293    DT_FIXEDARRAY[*DT_INT]
}

func (t *EnterKnownLookOverrides) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ALookOverrides.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3fb7293.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AIStateDebugSetEntryStateMessage struct {
	THeader       RequiredMessageHeader
	AnnActor      DT_ACD_NETWORK_NAME
	BEnabled      DT_INT
	DwCooldownKey DT_INT64
}

func (t *AIStateDebugSetEntryStateMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnActor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEnabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwCooldownKey.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalNPCCustomizationData struct {
	// Inherits GlobalBase
	// Inherits PolymorphicBase
	DwType          DT_UINT
	DwPad           DT_UINT
	ArHairColorList DT_VARIABLEARRAY[*NPCHairColors]
	ArSkinColorList DT_VARIABLEARRAY[*PersonaSkinColor]
	ArDyeList       DT_VARIABLEARRAY[*DT_SNO]
}

func (t *GlobalNPCCustomizationData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArHairColorList.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSkinColorList.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArDyeList.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 122,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionDamageIsCrit struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
}

func (t *PowerConditionDamageIsCrit) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type VertexElem struct {
	ESemantic DT_ENUM
	EFormat   DT_ENUM
	NOffset   DT_INT
}

func (t *VertexElem) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESemantic.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EFormat.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PostApplyBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *PostApplyBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HoudiniParticlesSimDefinition struct {
	Unk_ce1c03c      DT_UINT
	DwRopeFragment   DT_UINT
	Unk_82df211      DT_FLOAT
	Unk_728cb31      DT_UINT
	FlRadius         DT_FLOAT
	BHasRotation     DT_INT
	FlFps            DT_FLOAT
	FlCompression    DT_FLOAT
	Unk_ab79e60      DT_VARIABLEARRAY[*ParticleLifeEvent]
	ArDetailUpgraded DT_VARIABLEARRAY[*ParticleKeyFrames]
}

func (t *HoudiniParticlesSimDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ce1c03c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwRopeFragment.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_82df211.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_728cb31.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.BHasRotation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFps.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlCompression.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab79e60.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArDetailUpgraded.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type InventoryLocationMessageData struct {
	AnnContainer DT_ACD_NETWORK_NAME
	ESlot        DT_ENUM
	Pt           DT_BCVEC2I
}

func (t *InventoryLocationMessageData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnContainer.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESlot.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Pt.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NecroArmyUnitSpecializationData struct {
	SnoActor         DT_SNO
	TUnlockCondition ConditionWrapper
	ArUpgradeOptions DT_VARIABLEARRAY[*NecroArmyUnitSpecializationUpgradeData]
	TSacrifice       NecroArmyUnitSpecializationSacrificeData
	Unk_efc6d7a      DT_VARIABLEARRAY[*DT_SNO]
	Unk_4901f66      DT_ENUM
}

func (t *NecroArmyUnitSpecializationData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TUnlockCondition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArUpgradeOptions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSacrifice.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_efc6d7a.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4901f66.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_5c24b1a8 struct {
	Unk_d197453             DT_INT
	Unk_d04c24c             DT_INT
	EButtonIconAlignment    DT_ENUM
	NButtonIconTextPaddingX DT_INT
	Unk_57295f6             DT_FLOAT
	Unk_57295f7             DT_FLOAT
	Unk_2330cbf             Type_6b1c5d9c
	Unk_a2c2344             Type_6b1c5d9c
	Unk_56f24f5             Type_6b1c5d9c
	Unk_5a90f13             Type_6b1c5d9c
	Unk_fca1727             DT_INT
	FLeft                   DT_FLOAT
	FTop                    DT_FLOAT
}

func (t *Type_5c24b1a8) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d197453.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d04c24c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EButtonIconAlignment.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.NButtonIconTextPaddingX.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_57295f6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_57295f7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2330cbf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a2c2344.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_56f24f5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5a90f13.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fca1727.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FLeft.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.FTop.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_5c44ae48 struct {
	EBreaksOn   DT_ENUM
	Unk_e714dff DT_FLOAT
	SnoEffect   DT_SNO
	Transform   PRTransform
}

func (t *Type_5c44ae48) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBreaksOn.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e714dff.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Transform.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_5c4ac6dc struct {
	HImageHandle DT_UINT
}

func (t *Type_5c4ac6dc) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.HImageHandle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnHitBuffCallback struct {
	// Inherits ProcChanceBuffCallbackBase
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	BAlwaysProcs          DT_INT
	DwPadding             DT_UINT
	TProcChance           DT_STRING_FORMULA
	Unk_b52872c           DT_INT
	Unk_ac0bfbc           DT_INT
	Unk_99e97f7           DT_INT
}

func (t *OnHitBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.BAlwaysProcs.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPadding.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.TProcChance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b52872c.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ac0bfbc.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_99e97f7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type FogOfWarDefinition struct {
	NDummy      DT_INT
	Unk_f1e2551 DT_CSTRING[*DT_BYTE]
}

func (t *FogOfWarDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NDummy.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f1e2551.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_5c83eb6c struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
	DwHash     DT_UINT
	SzString   DT_CSTRING[*DT_BYTE]
}

func (t *Type_5c83eb6c) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwHash.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzString.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type VisualItem struct {
	SnoItem DT_SNO
	SnoDye  DT_SNO
}

func (t *VisualItem) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItem.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDye.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 122,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerClassNecroData struct {
	Unk_4a28fe           DT_FLOAT
	NUnlockLevel         DT_INT
	ArNecroArmyUnitTypes DT_FIXEDARRAY[*NecroArmyUnitTypeData]
}

func (t *PlayerClassNecroData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4a28fe.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NUnlockLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArNecroArmyUnitTypes.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+848, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type InventoryRequestSocketMessage struct {
	THeader         RequiredMessageHeader
	AnnItemToSocket DT_ACD_NETWORK_NAME
	Unk_fa7e312     DT_ACD_NETWORK_NAME
	NSocketIndex    DT_OPTIONAL[*DT_INT]
}

func (t *InventoryRequestSocketMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnItemToSocket.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fa7e312.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSocketIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnResourceSpentBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnResourceSpentBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SceneCommonSpecification struct {
	DwFlags                      DT_UINT
	SnoLevelArea                 DT_SNO
	SnoLevelAreaDungeonAlternate DT_SNO
	Unk_989f2d7                  DT_ENUM
	Unk_74a9537                  DT_STARTLOC_NAME
	SnoPrevWorld                 DT_SNO
	UPrevEntranceGUID            DT_UINT
	SnoPrevLevelArea             DT_SNO
	TAudioVisual                 Type_78854e88
	Unk_babb0a                   Type_78854e88
	SnoPresetWorld               DT_SNO
	NSceneChunk                  DT_INT
	Unk_1e9ef9d                  DT_OPTIONAL[*DT_UINT]
	Unk_bcb06ca                  DT_FIXEDARRAY[*StartingAllowedWeather]
	Unk_5215067                  DT_FIXEDARRAY[*DT_GBID]
	TDRLGCreationInfo            DT_OPTIONAL[*Type_95119e98]
}

func (t *SceneCommonSpecification) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelArea.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelAreaDungeonAlternate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_989f2d7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_74a9537.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPrevWorld.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.UPrevEntranceGUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPrevLevelArea.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAudioVisual.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_babb0a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPresetWorld.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSceneChunk.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1e9ef9d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bcb06ca.UnmarshalD4(r, &Options{
		ArrayLength: 16,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5215067.UnmarshalD4(r, &Options{
		ArrayLength: 16,
		Flags:       9,
		Group:       20,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDRLGCreationInfo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+308, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerSavedData struct {
	THotbarBtnAssignments     DT_FIXEDARRAY[*HotbarButtonData]
	TPotionBtn                HotbarButtonData
	USecondsPlayed            DT_UINT
	THirelingSavedData        HirelingSavedData
	ArWaypointsActivated      DT_FIXEDARRAY[*DT_SNO]
	UTimeLastLevel            DT_UINT
	TActiveSkills             DT_FIXEDARRAY[*ActiveSkillSavedData]
	TEnchantSkills            DT_FIXEDARRAY[*SkillEnchantSavedData]
	TSkillPassiveData         Type_7bed253b
	ArSkillExtraAndArsenals   DT_FIXEDARRAY[*Type_feacdb4e]
	ArPurchasedSkillTreeNodes DT_FIXEDARRAY[*SkillTreeNodeEntry]
	Unk_4968c70               DT_UINT
	BUnlockedTownPortal       DT_INT
	ArTransmogSlots           DT_FIXEDARRAY[*TransmogSlot]
	ArSavedTransmogs          DT_FIXEDARRAY[*SavedTransmog]
	TSavedPlayerTitle         SavedPlayerTitle
}

func (t *PlayerSavedData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THotbarBtnAssignments.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPotionBtn.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.USecondsPlayed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.THirelingSavedData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArWaypointsActivated.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       9,
		Group:       22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+480, io.SeekStart); err != nil {
		return err
	}
	if err := t.UTimeLastLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+484, io.SeekStart); err != nil {
		return err
	}
	if err := t.TActiveSkills.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+532, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEnchantSkills.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+556, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSkillPassiveData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+576, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSkillExtraAndArsenals.UnmarshalD4(r, &Options{
		ArrayLength: 50,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+976, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPurchasedSkillTreeNodes.UnmarshalD4(r, &Options{
		ArrayLength: 128,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2004, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4968c70.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2008, io.SeekStart); err != nil {
		return err
	}
	if err := t.BUnlockedTownPortal.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2012, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArTransmogSlots.UnmarshalD4(r, &Options{
		ArrayLength: 15,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2256, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSavedTransmogs.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3496, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSavedPlayerTitle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3664, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PolymorphicBase struct {
	DwType DT_UINT
	DwPad  DT_UINT
}

func (t *PolymorphicBase) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PolytopeData struct {
	Unk_e96f671    Type_e81e59e2
	PtVertices     DT_VARIABLEARRAY[*DT_VECTOR3D]
	PtPlanes       DT_VARIABLEARRAY[*Type_fba0555c]
	PtSubEdges     DT_VARIABLEARRAY[*Type_eabc2b2b]
	PtFaceSubEdges DT_VARIABLEARRAY[*DT_BYTE]
}

func (t *PolytopeData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e96f671.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtVertices.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPlanes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtSubEdges.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtFaceSubEdges.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PrefetchSceneMessage struct {
	THeader    RequiredMessageHeader
	SnoScene   DT_SNO
	Unk_a61d97 DT_INT
}

func (t *PrefetchSceneMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoScene.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 33,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a61d97.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NpcTemplate struct {
	SzName    DT_CSTRING[*DT_BYTE]
	SnoMale   DT_SNO
	SnoFemale DT_SNO
}

func (t *NpcTemplate) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMale.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFemale.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionIsSkillSlot struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType         DT_UINT
	BInverse       DT_INT
	DwPad          DT_UINT
	EPowerCategory DT_ENUM
}

func (t *PowerConditionIsSkillSlot) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPowerCategory.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventShowClosedCaption struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
	HClosedCaption   StringLabelHandleEx
}

func (t *TriggerEventShowClosedCaption) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.HClosedCaption.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AssignTechniqueSlotMessage struct {
	THeader     RequiredMessageHeader
	SnoItemType DT_SNO
}

func (t *AssignTechniqueSlotMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItemType.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 98,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GroundTestPosition struct {
	TBone            IKBone
	WpPosOffset      DT_VECTOR3D
	FlGroundDistance DT_FLOAT
}

func (t *GroundTestPosition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TBone.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpPosOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGroundDistance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamMonsterFamily struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType           DT_UINT
	EParamType       DT_ENUM
	DwPad            DT_UINT
	SnoMonsterFamily DT_SNO
}

func (t *ScriptEventParamMonsterFamily) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMonsterFamily.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 82,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_5e32bd3e struct {
	TCondition        ConditionWrapper
	Unk_dd101c8       DT_INT
	TAudioState       WwiseSwitchValue
	FlMinimumDuration DT_FLOAT
}

func (t *Type_5e32bd3e) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCondition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dd101c8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAudioState.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMinimumDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_5e641340 struct {
	Unk_c874a5e      DT_FIXEDARRAY[*DT_FLOAT]
	Unk_289ce5b      DT_FIXEDARRAY[*DT_FLOAT]
	Unk_4c6f9cb      DT_FIXEDARRAY[*DT_FLOAT]
	Unk_35f98b0      DT_FIXEDARRAY[*DT_FLOAT]
	Unk_9b6930e      DT_FIXEDARRAY[*DT_FLOAT]
	FTwitchSharpness DT_FLOAT
	FRollMaxScale    DT_FLOAT
	FRollMinScale    DT_FLOAT
	FRollSpeed       DT_FLOAT
	FRollSeparation  DT_FLOAT
	FLeewardScalar   DT_FLOAT
}

func (t *Type_5e641340) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c874a5e.UnmarshalD4(r, &Options{
		ArrayLength: 10,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_289ce5b.UnmarshalD4(r, &Options{
		ArrayLength: 10,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4c6f9cb.UnmarshalD4(r, &Options{
		ArrayLength: 10,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_35f98b0.UnmarshalD4(r, &Options{
		ArrayLength: 10,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b6930e.UnmarshalD4(r, &Options{
		ArrayLength: 10,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.FTwitchSharpness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.FRollMaxScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.FRollMinScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.FRollSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.FRollSeparation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.FLeewardScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MusicTransition struct {
	Unk_cc9e7d         DT_ENUM
	Unk_647bd69        DT_FLOAT
	SnoTransitionEvent DT_SNO
}

func (t *MusicTransition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cc9e7d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_647bd69.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTransitionEvent.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_5e7f9b79 struct{}

func (t *Type_5e7f9b79) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+1, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionIsStealthed struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
	ESubject DT_ENUM
}

func (t *PowerConditionIsStealthed) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DecalLookVariantMap struct {
	DwLookVariant       DT_UINT
	SnoMaterialOverride DT_SNO
}

func (t *DecalLookVariantMap) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwLookVariant.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMaterialOverride.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 57,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_5f1859b4 struct {
	M_cellId    DT_INT64
	Unk_179f850 DT_INT64
	Unk_39da905 DT_FIXEDARRAY[*DT_INT64]
	Unk_6897d68 DT_FIXEDARRAY[*DT_INT64]
	Unk_f18728c DT_INT64
	Unk_a2d413a DT_BYTE
	Unk_cd14700 AABB
	Unk_215e5a4 AABB
}

func (t *Type_5f1859b4) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_cellId.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_179f850.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_39da905.UnmarshalD4(r, &Options{ArrayLength: 4608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36880, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6897d68.UnmarshalD4(r, &Options{ArrayLength: 4608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+73744, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f18728c.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+73752, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a2d413a.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+73756, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cd14700.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+73780, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_215e5a4.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+73808, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HeroDefinition struct {
	PProtoData DT_VARIABLEARRAY[*DT_BYTE]
}

func (t *HeroDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PProtoData.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RareMonsterNamesEntry_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*RareMonsterNamesEntry]
}

func (t *RareMonsterNamesEntry_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_5f527528 struct {
	Q DT_VECTOR4D
	P DT_VECTOR4D
}

func (t *Type_5f527528) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Q.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.P.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerFacingWindow struct {
	NFrameStart DT_INT
	NFrameEnd   DT_INT
	Unk_f28aa5a DT_FLOAT
	Unk_963cba8 DT_INT
	Unk_65d9350 DT_INT
	Unk_6ebf840 DT_UINT
}

func (t *PowerFacingWindow) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFrameStart.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFrameEnd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f28aa5a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_963cba8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_65d9350.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6ebf840.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIScrollableTextStyle struct {
	// Inherits UITextStyle
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	TFont                     UIControlFont
	Unk_4741819               DT_TAGMAP[*DT_ENUM]
	HArtificiallyOwnedTagMap  DT_TAGMAP[*DT_ENUM]
}

func (t *UIScrollableTextStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFont.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4741819.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.HArtificiallyOwnedTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SNONameDataMessage struct {
	THeader RequiredMessageHeader
	SnoName DT_SNO_NAME
}

func (t *SNONameDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerWallData struct {
	// Inherits MarkerSplineData
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType                         DT_UINT
	DwPad                          DT_UINT
	EInterpolationMode             DT_ENUM
	Unk_a3f1699                    DT_FLOAT
	DwFlags                        DT_UINT
	NSeed                          DT_INT
	SzLookOverride                 DT_UINT
	DwShaderMapOverride            DT_UINT
	Unk_d094b9a                    DT_ENUM
	SnoCampaignVisibilityCondition DT_SNO
	SnoAmbientSound                DT_SNO
}

func (t *MarkerWallData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EInterpolationMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a3f1699.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLookOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwShaderMapOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d094b9a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCampaignVisibilityCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAmbientSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 5,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamLinkedMarkerAny struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
	IdValue    DT_INT
}

func (t *ScriptEventParamLinkedMarkerAny) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdValue.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PS5ConsoleAwardDefinition struct {
	// Inherits SonyConsoleAwardDefinition
	// Inherits ConsoleAwardDefinition
	// Inherits PolymorphicBase
	DwType          DT_UINT
	UProfileAwardId DT_UINT
	DwPad           DT_UINT
}

func (t *PS5ConsoleAwardDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.UProfileAwardId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LookVariant struct {
	SzName  DT_UINT
	DwValue DT_UINT
}

func (t *LookVariant) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EmitterCylinderData struct {
	// Inherits EmitterDataBase
	// Inherits PolymorphicBase
	DwType            DT_UINT
	DwPad             DT_UINT
	EFacing           DT_ENUM
	AWedge            DT_FLOAT
	FEvenDistribution DT_INT
	PathRadius        Type_cbfdd2ea
	PathHeight        Type_cbfdd2ea
}

func (t *EmitterCylinderData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EFacing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.AWedge.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FEvenDistribution.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RunTimeMaterialScalarGraphEntry struct {
	Unk_411da82 Type_cbfdd2ea
}

func (t *RunTimeMaterialScalarGraphEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_411da82.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_6105185b struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
	ESubject DT_ENUM
	SnoAffix DT_SNO
}

func (t *Type_6105185b) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAffix.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 104,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AbortPowerMessage struct {
	THeader  Type_b0f2a959
	SnoPower DT_SNO
}

func (t *AbortPowerMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CheckpointGizmoData struct {
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
	PtProxData                   DT_POLYMORPHIC_VARIABLEARRAY[*ProximityDataBase]
}

func (t *CheckpointGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtProxData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_61698cea struct {
	SzOnEnd DT_CSTRING[*DT_BYTE]
}

func (t *Type_61698cea) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnEnd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PetMessage struct {
	THeader     RequiredMessageHeader
	Unk_70bf7e7 DT_UINT
	NIndex      DT_INT
	AnnPet      DT_ACD_NETWORK_NAME
	GbidPetType DT_GBID
	TNecroPet   DT_OPTIONAL[*NecroPetData]
	Unk_9e938b5 DT_OPTIONAL[*DT_INT64]
}

func (t *PetMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_70bf7e7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NIndex.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnPet.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidPetType.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 23,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.TNecroPet.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9e938b5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_619110a4 struct {
	NIsFemale        DT_INT
	SnoFace          DT_SNO
	SnoMakeup        DT_SNO
	SnoMarkingShape  DT_SNO
	SnoMarkingColor  DT_SNO
	SnoEyeColor      DT_SNO
	NSkinColorChoice DT_INT
	SnoHairColor     DT_SNO
	SnoHairStyle     DT_SNO
	SnoFacialHair    DT_SNO
	SnoJewelry       DT_SNO
	Unk_23f8995      DT_INT
	Unk_35e41c8      DT_INT
}

func (t *Type_619110a4) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NIsFemale.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFace.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 140,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMakeup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 132,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMarkingShape.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 115,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMarkingColor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 133,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEyeColor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 131,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSkinColorChoice.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoHairColor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 134,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoHairStyle.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 138,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFacialHair.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 139,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoJewelry.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 119,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_23f8995.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_35e41c8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimTreeBlendTriangle struct {
	NChildIndex1     DT_UINT
	NChildIndex2     DT_UINT
	DwDisintegrative DT_UINT
	TTriangle        Triangle2D
}

func (t *AnimTreeBlendTriangle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NChildIndex1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NChildIndex2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwDisintegrative.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTriangle.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionIsInActorGroup struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType         DT_UINT
	BInverse       DT_INT
	DwPad          DT_UINT
	ESubject       DT_ENUM
	GbidActorGroup DT_GBID
}

func (t *PowerConditionIsInActorGroup) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidActorGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 24,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LargeBiomeObject struct {
	// Inherits BiomeObject
	// Inherits BiomeItem
	// Inherits PolymorphicBase
	DwType                 DT_UINT
	FlRadius               DT_FLOAT
	Unk_2fd1cdb            DT_FLOAT
	TAllowedScaleRange     DT_RANGE[*DT_FLOAT]
	Unk_87acb69            DT_RANGE[*DT_FLOAT]
	Unk_87acb6a            DT_RANGE[*DT_FLOAT]
	Unk_87acb6b            DT_RANGE[*DT_FLOAT]
	Unk_9854b6a            DT_RANGE[*DT_FLOAT]
	FlChance               DT_FLOAT
	DwFlags                DT_UINT
	Unk_2a8c4b6            DT_FLOAT
	AAzimuthAngle          DT_FLOAT
	AAltitudeAngle         DT_FLOAT
	Unk_6ead041            DT_RANGE[*DT_FLOAT]
	TParametricSettings    ParametricSettings
	ArProximityAdjustments DT_VARIABLEARRAY[*ProximityAdjustment]
	SnonameObject          DT_SNO_NAME
	Unk_d094b9a            DT_ENUM
	QInitialOrientation    bcQuat
	SzLookName             DT_UINT
	DwShaderMapOverride    DT_UINT
	DwPad                  DT_UINT
}

func (t *LargeBiomeObject) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2fd1cdb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAllowedScaleRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87acb69.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87acb6a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87acb6b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9854b6a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlChance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2a8c4b6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.AAzimuthAngle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.AAltitudeAngle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6ead041.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TParametricSettings.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArProximityAdjustments.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnonameObject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d094b9a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+252, io.SeekStart); err != nil {
		return err
	}
	if err := t.QInitialOrientation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLookName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwShaderMapOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MonsterFamilyDefinition struct {
	ArArchetypes DT_VARIABLEARRAY[*MonsterFamilyArchetype]
}

func (t *MonsterFamilyDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArArchetypes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventHitFlash struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType                      DT_UINT
	DwPad                       DT_UINT
	TConditions                 TriggerConditions
	FGenerated                  DT_INT
	Unk_6cba752                 DT_INT
	Unk_e560b0b                 DT_UINT
	DwTriggerFlags              DT_UINT
	DwTriggerFlagsEx            DT_UINT
	RgbaColorAdd                DT_RGBACOLOR
	NHitFlashAddDuration        DT_FLOAT
	RgbaColorMul                DT_RGBACOLOR
	NHitFlashMulDuration        DT_FLOAT
	FlHitFlashIntensity         DT_FLOAT
	Unk_622a853                 DT_FLOAT
	FlHitFlashIntensityDuration DT_FLOAT
	Unk_135c4d0                 DT_ENUM
	Unk_6ba75                   DT_ENUM
	EHitFlashCurve              DT_ENUM
	DwID                        DT_UINT
	NMaxHitFlash                DT_UINT
	Unk_17f7deb                 DT_INT
	Unk_b19da4b                 DT_INT
}

func (t *TriggerEventHitFlash) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaColorAdd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.NHitFlashAddDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaColorMul.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.NHitFlashMulDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHitFlashIntensity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_622a853.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHitFlashIntensityDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_135c4d0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6ba75.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.EHitFlashCurve.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMaxHitFlash.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_17f7deb.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b19da4b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_63010143 struct {
	TValueMin DT_VECTOR3D
	TValueMax DT_VECTOR3D
	TTime     DT_FLOAT
}

func (t *Type_63010143) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TValueMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.TValueMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_63010144 struct {
	TValueMin DT_VECTOR4D
	TValueMax DT_VECTOR4D
	TTime     DT_FLOAT
}

func (t *Type_63010144) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TValueMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TValueMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestPhase struct {
	// Inherits PolymorphicBase
	DwType          DT_UINT
	DwPad           DT_UINT
	DwUID           DT_UINT
	DwFlags         DT_UINT
	EType           DT_ENUM
	ArCallbackSets  DT_VARIABLEARRAY[*QuestObjectiveSet]
	Unk_4b2de13     DT_UINT
	Unk_188a07a     DT_VARIABLEARRAY[*DT_SNO]
	Unk_61c2846     DT_INT
	Unk_951ad2a     DT_SNO
	SnoReward       DT_SNO
	Unk_189b89b     DT_INT
	NTimerDuration  DT_UINT
	Unk_2bde7b6     DT_INT
	Unk_d3b7ed7     DT_VARIABLEARRAY[*DT_SNO]
	Unk_8280b0e     DT_INT
	Unk_eff642d     DT_INT
	Unk_fc27941     DT_INT
	Unk_d9a8a05     DT_UINT
	Unk_5d4cfc0     DT_UINT
	Unk_669bcf8     DT_UINT
	Unk_287ecb5     DT_UINT
	Unk_6344bd7     DT_FLOAT
	Unk_fab6e45     MarkerHandle
	Unk_47f8481     DT_VECTOR3D
	Unk_ed8215b     DT_SNO
	Unk_f6ded77     Type_6b1c5d9c
	Unk_f84da79     Type_6b1c5d9c
	SnoAudioContext DT_SNO
}

func (t *QuestPhase) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCallbackSets.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4b2de13.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_188a07a.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_61c2846.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_951ad2a.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoReward.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_189b89b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.NTimerDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2bde7b6.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d3b7ed7.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8280b0e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eff642d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fc27941.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9a8a05.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5d4cfc0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_669bcf8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_287ecb5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6344bd7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fab6e45.UnmarshalD4(r, &Options{Flags: 513}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_47f8481.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ed8215b.UnmarshalD4(r, &Options{
		Flags: 512,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6ded77.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f84da79.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAudioContext.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 93,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ImbueAffixResultMessage struct {
	THeader     RequiredMessageHeader
	NResultCode DT_INT
}

func (t *ImbueAffixResultMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NResultCode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimSetAnimPreloadHelper struct {
	SnoAnimSet  DT_SNO
	Unk_aa12873 DT_FIXEDARRAY[*SerialDataInfo]
	Unk_781e07e DT_FIXEDARRAY[*SerialDataInfo]
}

func (t *AnimSetAnimPreloadHelper) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAnimSet.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aa12873.UnmarshalD4(r, &Options{
		ArrayLength: 31,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+252, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_781e07e.UnmarshalD4(r, &Options{
		ArrayLength: 31,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+500, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_63701e68 struct {
	// Inherits GlobalMarkerActorData
	// Inherits PolymorphicBase
	DwType         DT_UINT
	DwPad          DT_UINT
	DwEntranceName DT_STARTLOC_NAME
	DwPortalType   DT_UINT
}

func (t *Type_63701e68) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwEntranceName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPortalType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventFootstepDrag struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
	THardpointLink   HardpointLink
}

func (t *TriggerEventFootstepDrag) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventFootstepLift struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType         DT_UINT
	DwPad          DT_UINT
	TConditions    TriggerConditions
	FGenerated     DT_INT
	Unk_6cba752    DT_INT
	Unk_e560b0b    DT_UINT
	THardpointLink HardpointLink
}

func (t *TriggerEventFootstepLift) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConversationSpeakerCaseNode struct {
	// Inherits ConversationScopeNode
	// Inherits ConversationTreeNode
	// Inherits PolymorphicBase
	DwType       DT_UINT
	DwPad        DT_UINT
	DwNodeID     DT_UINT
	DwNextNodeID DT_UINT
	Unk_3ef8e38  DT_UINT
	PtNextNode   DT_INT64
	DwFlags      DT_UINT
	SzComment    DT_CSTRING[*DT_BYTE]
	ArChildNodes DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	SnoCondition DT_SNO
	Unk_d8bf9e4  DT_INT
	SnoSpeaker   DT_SNO
}

func (t *ConversationSpeakerCaseNode) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNodeID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNextNodeID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3ef8e38.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtNextNode.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzComment.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArChildNodes.UnmarshalD4(r, &Options{Flags: 262145}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d8bf9e4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSpeaker.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 72,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerTalentRankSubcondition struct {
	// Inherits Type_d3c3637f
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType         DT_UINT
	BNegate        DT_INT
	EComparisonOp  DT_ENUM
	DwPad          DT_UINT
	SnoTalentPower DT_SNO
	DwTalentRank   DT_UINT
}

func (t *PlayerTalentRankSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTalentPower.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTalentRank.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BoostDefinition struct {
	SzBoostName        DT_CSTRING[*DT_BYTE]
	SzBoostDescription DT_CSTRING[*DT_BYTE]
	Unk_99de476        DT_CSTRING[*DT_BYTE]
	NGold              DT_INT64
	Unk_19a8c24        DT_VARIABLEARRAY[*BoostCheatEntry]
	Unk_fd3ff28        DT_VARIABLEARRAY[*DT_BYTE]
	DwBoostHash        DT_UINT
}

func (t *BoostDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzBoostName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzBoostDescription.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_99de476.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.NGold.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_19a8c24.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd3ff28.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwBoostHash.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_642fc25a struct {
	ArNodes     DT_VARIABLEARRAY[*StoryboardPlaySoundNode]
	Unk_36cc429 DT_VARIABLEARRAY[*DT_INT]
}

func (t *Type_642fc25a) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArNodes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_36cc429.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_64372b14 struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	Unk_7f4b6d5           DT_INT
	Unk_a639294           DT_INT
	DwCCTypes             DT_UINT
}

func (t *Type_64372b14) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7f4b6d5.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a639294.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwCCTypes.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventDisableCollisionMessages struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType         DT_UINT
	DwPad          DT_UINT
	TConditions    TriggerConditions
	FGenerated     DT_INT
	Unk_6cba752    DT_INT
	Unk_e560b0b    DT_UINT
	DwTriggerFlags DT_UINT
}

func (t *TriggerEventDisableCollisionMessages) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIScrollBoxStyle struct {
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	Unk_651714c               DT_TAGMAP[*DT_ENUM]
}

func (t *UIScrollBoxStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_651714c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type InventorySplitStackMessage struct {
	THeader   RequiredMessageHeader
	AnnItem   DT_ACD_NETWORK_NAME
	UAmount   DT_INT64
	TLocation InvLoc
}

func (t *InventorySplitStackMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnItem.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.UAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLocation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerWorldTierEligibilityMessage struct {
	THeader               RequiredMessageHeader
	EWorldTierEligibility DT_INT
}

func (t *PlayerWorldTierEligibilityMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EWorldTierEligibility.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AIPropType struct {
	THeader    GBIDHeader
	Unk_766f08 DT_VARIABLEARRAY[*Type_674e5442]
}

func (t *AIPropType) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_766f08.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIControlFont struct {
	Unk_86d67b DT_TAGMAP[*DT_ENUM]
}

func (t *UIControlFont) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_86d67b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIControlIcon struct {
	Unk_535a62d DT_TAGMAP[*DT_ENUM]
}

func (t *UIControlIcon) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_535a62d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PortalGizmoData struct {
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
	TCommonPortalData            CommonPortalGizmoData
	FSetsDynamicReturnLocation   DT_INT
}

func (t *PortalGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCommonPortalData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.FSetsDynamicReturnLocation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TelemetryBugEnteredMessage struct {
	THeader     RequiredMessageHeader
	DwTimeStamp DT_INT64
}

func (t *TelemetryBugEnteredMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTimeStamp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SalvageResultItem struct {
	SnoItem DT_SNO
	NCount  DT_INT
}

func (t *SalvageResultItem) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItem.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ItemUpgradeResultMessage struct {
	THeader   RequiredMessageHeader
	NNewLevel DT_INT
	NMaxLevel DT_INT
	SnoItem   DT_SNO
}

func (t *ItemUpgradeResultMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NNewLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMaxLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItem.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type FoliageGrid struct {
	Grid       DT_VARIABLEARRAY[*DT_UINT]
	AabbBounds AABB
	DwRows     DT_UINT
	DwColumns  DT_UINT
}

func (t *FoliageGrid) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Grid.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AabbBounds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwRows.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwColumns.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalVendorEvents struct {
	SnoConversations DT_FIXEDARRAY[*DT_SNO]
}

func (t *GlobalVendorEvents) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoConversations.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
		Group:       12,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerQuestMessage struct {
	THeader      RequiredMessageHeader
	Unk_dce541c  DT_UINT
	SnoQuest     DT_SNO
	SnoLevelArea DT_SNO
}

func (t *PlayerQuestMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelArea.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_660b81d5 struct {
	SnoTextCursorAnim DT_SNO
	SzOnChange        DT_CSTRING[*DT_BYTE]
	BIMEDisabled      DT_INT
	BNumbersOnly      DT_INT
	Freshness         DT_INT
	SzOnReturnEndEdit DT_CSTRING[*DT_BYTE]
	SzOnGainedFocus   DT_CSTRING[*DT_BYTE]
	SzOnLostFocus     DT_CSTRING[*DT_BYTE]
	Unk_a9baaf6       StringLabelHandleEx
	Unk_d60a445       DT_RGBACOLOR
	Unk_d57dba5       DT_RGBACOLOR
	NMaxEditChars     DT_INT
	Unk_a4c0376       DT_CSTRING[*DT_BYTE]
	Unk_5b06d35       StringLabelHandleEx
	NMaxEditBytes     DT_INT
	NNumDecimalPlaces DT_INT
	BAcceptsReturn    DT_INT
	Unk_75dc498       DT_INT
	Unk_16b847e       StringLabelHandleEx
	Unk_6240b01       StringLabelHandleEx
}

func (t *Type_660b81d5) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTextCursorAnim.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 7,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnChange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIMEDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNumbersOnly.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Freshness.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnReturnEndEdit.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnGainedFocus.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnLostFocus.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a9baaf6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d60a445.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d57dba5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMaxEditChars.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a4c0376.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5b06d35.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMaxEditBytes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.NNumDecimalPlaces.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.BAcceptsReturn.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_75dc498.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_16b847e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6240b01.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_665f557c struct {
	EDetPathType DT_ENUM
	WpStartPos   DT_VECTOR3D
	WpTargetPos  DT_VECTOR3D
	AOriginalYaw DT_FLOAT
	Unk_36073a3  DT_INT
	FlFloatData0 DT_FLOAT
	FlFloatData1 DT_FLOAT
	FlFloatData2 DT_FLOAT
	FlFloatData3 DT_FLOAT
	FlFloatData4 DT_FLOAT
}

func (t *Type_665f557c) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDetPathType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpStartPos.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpTargetPos.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.AOriginalYaw.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_36073a3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFloatData0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFloatData1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFloatData2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFloatData3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFloatData4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_666e5231 struct {
	FlTime  DT_FLOAT
	FlValue DT_FLOAT
}

func (t *Type_666e5231) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NecroArmyUnitSpecializationUpgradeData struct {
	SnoUpgradePower DT_SNO
}

func (t *NecroArmyUnitSpecializationUpgradeData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoUpgradePower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventSequenceEnded struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType        DT_UINT
	DwPad         DT_UINT
	TConditions   TriggerConditions
	FGenerated    DT_INT
	Unk_6cba752   DT_INT
	Unk_e560b0b   DT_UINT
	IdEffectGroup DT_UINT
	FLoop         DT_INT
}

func (t *TriggerEventSequenceEnded) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdEffectGroup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.FLoop.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIMinimapRoadsStyle struct {
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
}

func (t *UIMinimapRoadsStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_674e5442 struct {
	Unk_c4cbeaa    DT_SNO
	SnoPowerSelf   DT_SNO
	Unk_c0a2b38    DT_SNO
	Unk_87c7255    DT_FLOAT
	EPowerSyncType DT_ENUM
	Unk_c0c1492    DT_INT
	Unk_57d67bf    DT_UINT
	Unk_c7bd259    DT_UINT
}

func (t *Type_674e5442) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c4cbeaa.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerSelf.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c0a2b38.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87c7255.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPowerSyncType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c0c1492.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_57d67bf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c7bd259.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerMonsterActorData struct {
	ETeamIndex              DT_ENUM
	EMonsterRarity          DT_ENUM
	SnoConversationList     DT_SNO
	FAIDisabled             DT_INT
	Unk_84adee7             DT_INT
	FAIStartsInSpecialState DT_INT
	Unk_b5afb08             DT_INT
	Unk_2a0e071             DT_INT
	Unk_1c56441             DT_ENUM
	Unk_a497096             DT_SNO
	Unk_7a5aecd             DT_SNO
	Unk_e86679d             DT_FLOAT
	Unk_8e70eff             DT_ENUM
}

func (t *MarkerMonsterActorData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETeamIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMonsterRarity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoConversationList.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 13,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FAIDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_84adee7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FAIStartsInSpecialState.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b5afb08.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2a0e071.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1c56441.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a497096.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 3,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7a5aecd.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e86679d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8e70eff.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionDamageIsDot struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
}

func (t *PowerConditionDamageIsDot) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_67c548b3 struct {
	THeader     Type_72bd65f8
	Unk_dce541c DT_UINT
}

func (t *Type_67c548b3) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorSlotHelper struct {
	TComponent SerialDataInfo
}

func (t *ActorSlotHelper) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TComponent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_6808914a struct {
	NHeightFieldCount       DT_INT
	FlHeightTexturesSize    DT_FLOAT
	FlMaskTexturesSize      DT_FLOAT
	FlFlowMapTexturesSize   DT_FLOAT
	FlClutterBuffersSize    DT_FLOAT
	FlIndexBuffersSize      DT_FLOAT
	FlFogMaskBuffersSize    DT_FLOAT
	FlOceanMaskBuffersSize  DT_FLOAT
	FlSphericalHarmonicSize DT_FLOAT
	FlVertexAOSize          DT_FLOAT
}

func (t *Type_6808914a) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NHeightFieldCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHeightTexturesSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMaskTexturesSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFlowMapTexturesSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlClutterBuffersSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlIndexBuffersSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFogMaskBuffersSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOceanMaskBuffersSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSphericalHarmonicSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlVertexAOSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_6867c9cc struct {
	TSNOName   DT_SNO_NAME
	EActorType DT_ENUM
	EGender    DT_ENUM
}

func (t *Type_6867c9cc) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSNOName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EActorType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.EGender.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_6879d173 struct {
	THeader Type_ad008e7e
	UData   DT_INT64
}

func (t *Type_6879d173) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.UData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WaypointEffectInfo struct {
	SnoIntroEffect        DT_SNO
	SnoLoopIntroEffect    DT_SNO
	SnoLoopEffect         DT_SNO
	SnoLoopOutroEffect    DT_SNO
	SnoLoopSkipEffect     DT_SNO
	Unk_7bc440d           DT_FLOAT
	Unk_b8b4636           DT_FLOAT
	Unk_86403ef           DT_INT
	Unk_f0eaae5           DT_INT
	Unk_e0a3943           DT_INT
	Unk_9c071e3           DT_INT
	Unk_4bd94b4           DT_INT
	Unk_69b2ec7           DT_INT
	Unk_449111f           DT_INT
	SnoLoopingWorld       DT_SNO
	SzCameraMarkerName    DT_CHARARRAY
	SnoOutroEffect        DT_SNO
	SnoSkippedOutroEffect DT_SNO
	Unk_bdd12d            DT_INT
	Unk_f8d8170           DT_FLOAT
	Unk_188141b           DT_FLOAT
	Unk_66ebec            DT_FLOAT
	Unk_e660d97           DT_FLOAT
}

func (t *WaypointEffectInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoIntroEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLoopIntroEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLoopEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLoopOutroEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLoopSkipEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7bc440d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b8b4636.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_86403ef.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f0eaae5.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e0a3943.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c071e3.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4bd94b4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_69b2ec7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_449111f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLoopingWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzCameraMarkerName.UnmarshalD4(r, &Options{
		ArrayLength: 128,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOutroEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSkippedOutroEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bdd12d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f8d8170.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_188141b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_66ebec.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e660d97.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HardpointOffsets struct {
	ArMaleOffsets   DT_VARIABLEARRAY[*HardpointOffset]
	ArFemaleOffsets DT_VARIABLEARRAY[*HardpointOffset]
}

func (t *HardpointOffsets) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArMaleOffsets.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArFemaleOffsets.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RevealTeamMessage struct {
	THeader       RequiredMessageHeader
	ETeam         DT_ENUM
	DwTeamFlags   DT_UINT
	ETeamColoring DT_ENUM
}

func (t *RevealTeamMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETeam.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTeamFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETeamColoring.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type IKLegBoneChain struct {
	// Inherits IKBoneChainBase
	// Inherits PolymorphicBase
	DwType             DT_UINT
	DwPad              DT_UINT
	EIKLimb            DT_ENUM
	EIKTarget          DT_ENUM
	PtIKBones          DT_VARIABLEARRAY[*IKBone]
	BUseAnimatedOffset DT_INT
	FlOffsetHeight     DT_FLOAT
	TAlternateBone     IKBone
	Unk_978714f        DT_FLOAT
}

func (t *IKLegBoneChain) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EIKLimb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.EIKTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtIKBones.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.BUseAnimatedOffset.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOffsetHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAlternateBone.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_978714f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_6909dd52 struct {
	Unk_3c1684f           Type_ac30acdf
	PtVertices            DT_VARIABLEARRAY[*Type_c2ce8583]
	PtFaces               DT_VARIABLEARRAY[*Type_7ff0fb14]
	PtDistanceConstraints DT_VARIABLEARRAY[*Type_a5c62f55]
	PtBendingConstraints  DT_VARIABLEARRAY[*Type_8d06aec1]
	PtVertexMap           DT_VARIABLEARRAY[*DT_WORD]
	PtCapsules            DT_VARIABLEARRAY[*Type_e1f41032]
	PtPlanes              DT_VARIABLEARRAY[*Type_b76a31b5]
	PtFollowerIndices     DT_VARIABLEARRAY[*DT_WORD]
	PtAnchorMap           DT_VARIABLEARRAY[*DT_WORD]
}

func (t *Type_6909dd52) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3c1684f.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtVertices.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtFaces.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtDistanceConstraints.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtBendingConstraints.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtVertexMap.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtCapsules.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPlanes.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtFollowerIndices.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtAnchorMap.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SNOFileHeader struct {
	DwSignature  DT_UINT
	DwFormatHash DT_UINT
	DwDummy      DT_UINT
	DwXMLHash    DT_UINT
}

func (t *SNOFileHeader) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwSignature.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFormatHash.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwDummy.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwXMLHash.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_6977de45 struct {
	EKey           DT_ENUM
	DwModifiers    DT_UINT
	EKeyAlt        DT_ENUM
	DwModifiersAlt DT_UINT
}

func (t *Type_6977de45) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EKey.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwModifiers.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EKeyAlt.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwModifiersAlt.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UITimerStyle struct {
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
}

func (t *UITimerStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnStartPowerCallback struct {
	// Inherits PowerCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	BCouldHaveRagdolled   DT_INT
}

func (t *OnStartPowerCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCouldHaveRagdolled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AtLeastLogicSubcondition struct {
	// Inherits LogicSubcondition
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType       DT_UINT
	BNegate      DT_INT
	DwPad        DT_UINT
	ArConditions DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	NMinimum     DT_INT
}

func (t *AtLeastLogicSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMinimum.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ItemCountSubcondition struct {
	// Inherits Type_d3c3637f
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType        DT_UINT
	BNegate       DT_INT
	EComparisonOp DT_ENUM
	DwPad         DT_UINT
	SnoItem       DT_SNO
	NItemCount    DT_INT
}

func (t *ItemCountSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItem.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.NItemCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NecroPetData struct {
	EUnitType DT_ENUM
}

func (t *NecroPetData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EUnitType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupActorAnimationTrack struct {
	// Inherits EffectGroupTrack
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
}

func (t *EffectGroupActorAnimationTrack) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamLevelArea struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType       DT_UINT
	EParamType   DT_ENUM
	DwPad        DT_UINT
	SnoLevelArea DT_SNO
}

func (t *ScriptEventParamLevelArea) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelArea.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ItemQualityModifierSubcondition struct {
	// Inherits Type_d3c3637f
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType               DT_UINT
	BNegate              DT_INT
	EComparisonOp        DT_ENUM
	DwPad                DT_UINT
	EItemQualityModifier DT_ENUM
}

func (t *ItemQualityModifierSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.EItemQualityModifier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIContextMenuStyle struct {
	// Inherits UIStackPanelStyle
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	Unk_8e594da               DT_TAGMAP[*DT_ENUM]
}

func (t *UIContextMenuStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8e594da.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CraftingMatCategory struct {
	THeader GBIDHeader
}

func (t *CraftingMatCategory) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DeathMaterialTemplate struct{}

func (t *DeathMaterialTemplate) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+1, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_6a8a63e0 struct {
	Unk_1b85e9d DT_ENUM
	TSettings   ParametricSettings
}

func (t *Type_6a8a63e0) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1b85e9d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSettings.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RunTimeMaterialVectorGraphEntry struct {
	Unk_411da82 Type_41b30aab
}

func (t *RunTimeMaterialVectorGraphEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_411da82.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_6aca3d7d struct {
	THeader      RequiredMessageHeader
	AnnKey       DT_ACD_NETWORK_NAME
	SnoSkill     DT_SNO
	WpLocation   DT_VECTOR3D
	SearchRadius DT_FLOAT
	BForce       DT_INT
}

func (t *Type_6aca3d7d) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnKey.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSkill.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpLocation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SearchRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.BForce.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_6b03fc60 struct {
	DwType  DT_UINT
	FlTime  DT_FLOAT
	DwPad   DT_UINT
	TValue  DT_VECTOR2D
	EEasing DT_ENUM
}

func (t *Type_6b03fc60) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.EEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_6b1c5d9c struct {
	HImageHandle DT_UINT
}

func (t *Type_6b1c5d9c) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.HImageHandle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerWeaponExpertiseLevelMessage struct {
	THeader     RequiredMessageHeader
	Unk_dce541c DT_UINT
	SnoItemType DT_SNO
	NNewLevel   DT_INT
}

func (t *PlayerWeaponExpertiseLevelMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItemType.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 98,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NNewLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SphereProximityData struct {
	// Inherits ProximityDataBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	FlRadius DT_FLOAT
}

func (t *SphereProximityData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_6b603dda struct {
	PShaderProgram DT_VARIABLEARRAY[*DT_BYTE]
	DwKey          DT_INT64
	Unk_8e5f439    DT_VARIABLEARRAY[*DT_UINT]
	Unk_d4d5dbb    DT_VARIABLEARRAY[*DT_INT]
	PtResourceSlot DT_VARIABLEARRAY[*DT_ENUM]
	Unk_6f6dbab    DT_VARIABLEARRAY[*DT_ENUM]
}

func (t *Type_6b603dda) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PShaderProgram.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwKey.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8e5f439.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d4d5dbb.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtResourceSlot.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6f6dbab.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DebugDataFinishedMessage struct {
	THeader  RequiredMessageHeader
	NType    DT_INT
	ArParams DT_FIXEDARRAY[*DT_INT]
}

func (t *DebugDataFinishedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArParams.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ACDTranslateNormalMessage struct {
	THeader                 RequiredMessageHeader
	Ann                     DT_ACD_NETWORK_NAME
	VDest                   DT_OPTIONAL[*DT_VECTOR3D]
	ADesiredYaw             DT_OPTIONAL[*DT_FLOAT]
	BSnapFacing             DT_OPTIONAL[*DT_INT]
	FlMovementSpeed         DT_OPTIONAL[*DT_FLOAT]
	UMoveFlags              DT_OPTIONAL[*DT_UINT]
	SnoPowerAnimKeyOverride DT_OPTIONAL[*DT_SNO]
	SnoPowerPassability     DT_OPTIONAL[*DT_SNO]
	UAckValue               DT_OPTIONAL[*DT_UINT]
	EMoveType               DT_OPTIONAL[*DT_UINT]
}

func (t *ACDTranslateNormalMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.VDest.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.ADesiredYaw.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.BSnapFacing.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMovementSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.UMoveFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerAnimKeyOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerPassability.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.UAckValue.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMoveType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameFlagSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType  DT_UINT
	BNegate DT_INT
	DwPad   DT_UINT
	SzLabel DT_CHARARRAY
}

func (t *GameFlagSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLabel.UnmarshalD4(r, &Options{
		ArrayLength: 128,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Influence struct {
	NBoneIndex DT_INT
	FlWeight   DT_FLOAT
}

func (t *Influence) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NBoneIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlWeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type VertTiledWindowPieces struct {
	// Inherits WindowPiecesBase
	// Inherits PolymorphicBase
	DwType       DT_UINT
	DwPad        DT_UINT
	FlImageScale DT_FLOAT
	NPadding     DT_UINT
	HPieceTop    DT_UINT
	HPieceBottom DT_UINT
	HPieceMiddle DT_UINT
}

func (t *VertTiledWindowPieces) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlImageScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPadding.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.HPieceTop.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.HPieceBottom.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.HPieceMiddle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_6c048b8b struct {
	SnoLayer DT_SNO
	PtChunks DT_VARIABLEARRAY[*LayerInstanceChunk]
}

func (t *Type_6c048b8b) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLayer.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 24,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtChunks.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ParagonGlyphObtainedMessage struct {
	THeader                 RequiredMessageHeader
	SnoParagonGlyphObtained DT_SNO
}

func (t *ParagonGlyphObtainedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoParagonGlyphObtained.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 111,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DemonScrollNodeMessage struct {
	THeader   RequiredMessageHeader
	SnoScroll DT_SNO
	NNodeUID  DT_INT
}

func (t *DemonScrollNodeMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoScroll.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 95,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NNodeUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_6c318664 struct {
	THeader    RequiredMessageHeader
	ESoundType DT_ENUM
}

func (t *Type_6c318664) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESoundType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PvPResurrectTriggeredBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *PvPResurrectTriggeredBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConditionProperty struct{}

func (t *ConditionProperty) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+1, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ParagonUnequipSocketMessage struct {
	THeader     RequiredMessageHeader
	DwNodeIndex DT_UINT
}

func (t *ParagonUnequipSocketMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNodeIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_6ce32aa3 struct {
	TItemTier   ItemTier
	Unk_14f575e Type_619110a4
}

func (t *Type_6ce32aa3) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TItemTier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_14f575e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MaterialValueSetDefinition struct{}

func (t *MaterialValueSetDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SkillTreeReward_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*SkillTreeReward]
}

func (t *SkillTreeReward_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WorldRevealedPortalInfo struct {
	WpPosition                    DT_VECTOR3D
	UEntranceGUID                 DT_UINT
	SnoWorld                      DT_SNO
	SnoLevelArea                  DT_SNO
	Unk_38c174                    DT_INT
	SnoPhasingVisibilityCondition DT_SNO
	Unk_e5c224a                   DT_INT
	HMinimapIcon                  DT_UINT
}

func (t *WorldRevealedPortalInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpPosition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.UEntranceGUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelArea.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_38c174.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPhasingVisibilityCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e5c224a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.HMinimapIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayCutsceneMessage struct {
	THeader RequiredMessageHeader
	NIndex  DT_INT
}

func (t *PlayCutsceneMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_6de8333b struct {
	SnoSourceAppearance DT_SNO
	Unk_38cc238         SharedChildFile
	Unk_68e4d62         DT_CHARARRAY
	Unk_9bec2e          SharedChildFile
	Unk_f0e97d8         DT_CHARARRAY
	SnoSourceAnimation  DT_SNO
	Unk_2b8dba4         DT_UINT
}

func (t *Type_6de8333b) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSourceAppearance.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 9,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_38cc238.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+54, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_68e4d62.UnmarshalD4(r, &Options{
		ArrayLength: 256,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+310, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9bec2e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+360, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f0e97d8.UnmarshalD4(r, &Options{
		ArrayLength: 256,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+616, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSourceAnimation.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 6,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+620, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2b8dba4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+624, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionDamageIsFromPayload struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType        DT_UINT
	BInverse      DT_INT
	DwPad         DT_UINT
	SnoPower      DT_SNO
	SzPayloadName DT_UINT
}

func (t *PowerConditionDamageIsFromPayload) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzPayloadName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MapPinMessage struct {
	THeader           RequiredMessageHeader
	SnoWorld          DT_SNO
	VecPos            DT_VECTOR3D
	Unk_c819eef       DT_UINT
	SnoDestStringList DT_SNO
}

func (t *MapPinMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecPos.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c819eef.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDestStringList.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 42,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorVariantPreloadHelper struct {
	SnoActor        DT_SNO
	EDefaultVariant DT_ENUM
	TVariant        SerialDataInfo
}

func (t *ActorVariantPreloadHelper) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDefaultVariant.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TVariant.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_6e7f0459 struct {
	THeader      InterpolationPathHeader
	PtArrayNodes DT_VARIABLEARRAY[*Type_8fccfaf2]
}

func (t *Type_6e7f0459) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtArrayNodes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AttributeSetValueMessage struct {
	THeader RequiredMessageHeader
	Ann     DT_ACD_NETWORK_NAME
	TKeyVal NetAttributeKeyValue
}

func (t *AttributeSetValueMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TKeyVal.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_6ee9427a struct {
	Unk_334eb2d          DT_INT
	PtMsgTriggeredEvents DT_VARIABLEARRAY[*MsgTriggeredEvent]
}

func (t *Type_6ee9427a) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_334eb2d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtMsgTriggeredEvents.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_6f18c43c struct {
	SzBoneName    DT_CHARARRAY
	FlBlendWeight DT_FLOAT
	Unk_3be99f4   DT_INT
}

func (t *Type_6f18c43c) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzBoneName.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlBlendWeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3be99f4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LockingGizmoData struct {
	NGizmoLockItemCountRequiredToOperate   DT_INT
	SnoGizmoLockItemRequiredToOperate      DT_SNO
	FGizmoLockItemConsumedOnOperation      DT_INT
	Unk_496ba25                            DT_INT
	FGizmoLockShowVagueItemRequiredMessage DT_INT
	Unk_dce555f                            DT_INT
	ECurrencyType                          DT_ENUM
	DwCurrencyAmount                       DT_UINT
	Unk_c605c30                            DT_UINT
}

func (t *LockingGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NGizmoLockItemCountRequiredToOperate.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoGizmoLockItemRequiredToOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoLockItemConsumedOnOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_496ba25.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoLockShowVagueItemRequiredMessage.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce555f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECurrencyType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwCurrencyAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c605c30.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_6f6158b5 struct {
	THeader RequiredMessageHeader
}

func (t *Type_6f6158b5) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HitReactionOverride struct {
	// Inherits PowerOverride
	// Inherits PolymorphicBase
	DwType           DT_UINT
	DwPad            DT_UINT
	SnoInputPower    DT_SNO
	SnoOverridePower DT_SNO
}

func (t *HitReactionOverride) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoInputPower.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOverridePower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type IconLayout struct {
	SzName      DT_UINT
	Unk_e6f1de0 DT_VARIABLEARRAY[*DT_UINT]
	Unk_9b8c777 DT_CSTRING[*DT_BYTE]
}

func (t *IconLayout) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e6f1de0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b8c777.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventChangePhysicsParameters struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
	Unk_668d971 DT_SNO
	FlBlendTime DT_FLOAT
	DwActorID   DT_UINT
	Unk_279aa5a DT_INT
}

func (t *TriggerEventChangePhysicsParameters) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_668d971.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 28,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlBlendTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwActorID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_279aa5a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ClanBankMoveItemMessage struct {
	THeader     Type_72bd65f8
	TItemId     Type_f5ac91bb
	Unk_cc95a19 DT_INT
}

func (t *ClanBankMoveItemMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TItemId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cc95a19.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerCurrentLevelAreaSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType       DT_UINT
	BNegate      DT_INT
	DwPad        DT_UINT
	SnoLevelArea DT_SNO
}

func (t *PlayerCurrentLevelAreaSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelArea.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_6ff50068 struct {
	THeader      Type_b0f2a959
	Unk_dce541c  DT_UINT
	SnoLevelArea DT_SNO
	Unk_fcdc6f6  DT_ENUM
}

func (t *Type_6ff50068) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelArea.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fcdc6f6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventTransparency struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	DwPad            DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	FlAlpha          DT_FLOAT
}

func (t *TriggerEventTransparency) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAlpha.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventObjectLookAt struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
	DwObjectID       DT_UINT
	DwTargetID       DT_UINT
}

func (t *TriggerEventObjectLookAt) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwObjectID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTargetID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CraftingRecipeResultMessage struct {
	THeader   RequiredMessageHeader
	SnoRecipe DT_SNO
	UAmount   DT_INT64
}

func (t *CraftingRecipeResultMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRecipe.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 49,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.UAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamSecondaryGroup struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType          DT_UINT
	EParamType      DT_ENUM
	DwPad           DT_UINT
	TSecondaryGroup ActorGroup
}

func (t *ScriptEventParamSecondaryGroup) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSecondaryGroup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HeroPreset struct {
	// Inherits CharacterPreset
	// Inherits PolymorphicBase
	DwType           DT_UINT
	DwPad            DT_UINT
	SzName           DT_CSTRING[*DT_BYTE]
	SnoWorld         DT_SNO
	NPadding1        DT_INT
	EGender          DT_ENUM
	EClass           DT_ENUM
	SnoFace          DT_SNO
	SnoHairColor     DT_SNO
	SnoHairStyle     DT_SNO
	SnoFacialHair    DT_SNO
	SSkinColor       DT_CSTRING[*DT_BYTE]
	SnoEyeColor      DT_SNO
	SnoMakeup        DT_SNO
	SnoMarkingShape  DT_SNO
	SnoMarkingColor  DT_SNO
	SnoJewelry       DT_SNO
	ArrItems         DT_FIXEDARRAY[*Type_8c33d728]
	ArrWeapons       DT_FIXEDARRAY[*DT_SNO]
	ArrCosmeticItems DT_FIXEDARRAY[*DT_SNO]
	Unk_b1142bf      DT_CSTRING[*DT_BYTE]
	SnoAnimOverride  DT_SNO
}

func (t *HeroPreset) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPadding1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.EGender.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.EClass.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFace.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 140,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoHairColor.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 134,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoHairStyle.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 138,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFacialHair.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 139,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.SSkinColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEyeColor.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 131,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMakeup.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 132,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMarkingShape.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 115,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMarkingColor.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 133,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoJewelry.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 119,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArrItems.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArrWeapons.UnmarshalD4(r, &Options{
		ArrayLength: 7,
		Flags:       513,
		Group:       73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArrCosmeticItems.UnmarshalD4(r, &Options{
		ArrayLength: 1,
		Flags:       513,
		Group:       73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b1142bf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAnimOverride.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 6,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PrefabDataInfo struct {
	DwMarkerPathID DT_UINT
	TPrefabData    PrefabData
}

func (t *PrefabDataInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMarkerPathID.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPrefabData.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PrefabScopedActorGroupData struct {
	THeader GBIDHeader
}

func (t *PrefabScopedActorGroupData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIAutoScrollingTextStyle struct {
	// Inherits UITextStyle
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	TFont                     UIControlFont
	Unk_4741819               DT_TAGMAP[*DT_ENUM]
	Unk_a88ab5f               DT_TAGMAP[*DT_ENUM]
}

func (t *UIAutoScrollingTextStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFont.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4741819.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a88ab5f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BarbWeaponExpertiseData struct {
	SnoItemType     DT_SNO
	SnoPassivePower DT_SNO
	GbidRanks       DT_GBID
	ArRankRewards   DT_VARIABLEARRAY[*WeaponExpertiseRankReward]
}

func (t *BarbWeaponExpertiseData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItemType.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 98,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPassivePower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidRanks.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 47,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArRankRewards.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerNonAuthoritativePositionMessage struct {
	THeader        RequiredMessageHeader
	WpPos          DT_VECTOR3D
	BMounted       DT_INT
	BMountSummoned DT_INT
}

func (t *PlayerNonAuthoritativePositionMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpPos.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.BMounted.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.BMountSummoned.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GeneratorToItemMessage struct {
	THeader         Type_72bd65f8
	UsItemGenerator DT_CHARARRAY
}

func (t *GeneratorToItemMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.UsItemGenerator.UnmarshalD4(r, &Options{
		ArrayLength: 1024,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1044, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_7146a43a struct {
	THeader       RequiredMessageHeader
	Unk_601d5c7   DT_FLOAT
	UCommandFrame DT_UINT
}

func (t *Type_7146a43a) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_601d5c7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.UCommandFrame.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ItemPowerSubcondition struct {
	// Inherits Type_d3c3637f
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType        DT_UINT
	BNegate       DT_INT
	EComparisonOp DT_ENUM
	DwPad         DT_UINT
	NIPower       DT_INT
}

func (t *ItemPowerSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.NIPower.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PersonaSkinColor struct {
	EBase        DT_ENUM
	FlHue        DT_FLOAT
	FlSaturation DT_FLOAT
	FlValue      DT_FLOAT
	FlDarken     DT_FLOAT
	Unk_509016f  DT_RGBACOLOR
	SzLabel      DT_CSTRING[*DT_BYTE]
}

func (t *PersonaSkinColor) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBase.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSaturation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDarken.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_509016f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLabel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorCollisionData struct {
	TCollisionSettings CollisionSettings
	ECollisionShape    DT_ENUM
	WcylCollision      AxialCylinder
	AabbCollision      AABB
	Unk_3d328de        DT_INT
	Unk_7a83a6d        DT_INT
	Unk_7078ee3        DT_INT
	FlStepUpHeight     DT_FLOAT
	Unk_d094b9a        DT_ENUM
	Unk_c5b3851        DT_FLOAT
	Unk_523b9d9        DT_VARIABLEARRAY[*Type_17bd50db]
	Unk_ce78a30        Type_17bd50db
	Unk_f26505b        Type_17bd50db
	Unk_c627b16        DT_INT
}

func (t *ActorCollisionData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCollisionSettings.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECollisionShape.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.WcylCollision.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.AabbCollision.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3d328de.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7a83a6d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7078ee3.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlStepUpHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d094b9a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c5b3851.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_523b9d9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ce78a30.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f26505b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c627b16.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_71d9d83e struct {
	FlStarsDensity    DT_FLOAT
	FlStarsDistance   DT_FLOAT
	FlStarsScale      DT_FLOAT
	Unk_9f7f279       DT_FLOAT
	FlStarsBrightness DT_FLOAT
	FlStarsColor      DT_RGBACOLOR
}

func (t *Type_71d9d83e) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlStarsDensity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlStarsDistance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlStarsScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9f7f279.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlStarsBrightness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlStarsColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_72081710 struct {
	Unk_9807ffc DT_FLOAT
	Unk_e3bcdd9 DT_FLOAT
	Unk_959fcde DT_FLOAT
	Unk_8ea8e1a DT_FLOAT
	Unk_129b8df DT_FLOAT
	Unk_38138dc DT_FLOAT
	Unk_d04ea13 DT_FLOAT
	Unk_15de174 DT_FLOAT
	Unk_6192f51 DT_FLOAT
	Unk_d00a056 DT_FLOAT
	Unk_2ed848a DT_FLOAT
	Unk_f597cdf DT_FLOAT
	Unk_db72561 DT_FLOAT
	Unk_8f70873 DT_FLOAT
	Unk_754b0f5 DT_FLOAT
	Unk_4ce8a9b DT_FLOAT
	Unk_cbaf386 DT_FLOAT
	Unk_e7daef4 DT_FLOAT
	Unk_497f7bf DT_FLOAT
	Unk_d19c35c DT_FLOAT
	Unk_5456aec DT_FLOAT
	Unk_b918f5a DT_FLOAT
	Unk_57d4c7e DT_FLOAT
	Unk_8a373c0 DT_FLOAT
	Unk_a1812c5 DT_FLOAT
	Unk_7124f86 DT_FLOAT
	Unk_2e0c8f7 DT_FLOAT
	Unk_7d8fd49 DT_FLOAT
	Unk_8a6d88  DT_FLOAT
	Unk_aeea64d DT_FLOAT
	Unk_b918f5b DT_FLOAT
	Unk_57d4c7f DT_FLOAT
	Unk_2e0c8f8 DT_FLOAT
	Unk_7d8fd4a DT_FLOAT
	Unk_8a6d89  DT_FLOAT
	Unk_aeea64e DT_FLOAT
	Unk_a09e1ed DT_FLOAT
	Unk_d28a307 DT_FLOAT
	Unk_cc5d963 DT_FLOAT
	Unk_131818d DT_FLOAT
	Unk_2352a09 DT_FLOAT
	Unk_a09e1ee DT_FLOAT
	Unk_d28a308 DT_FLOAT
	Unk_cc5d964 DT_FLOAT
	Unk_131818e DT_FLOAT
	Unk_2352a0a DT_FLOAT
	Unk_8522f61 DT_FLOAT
	Unk_1bb10d9 DT_FLOAT
	Unk_426ab57 DT_FLOAT
	FlPad0      DT_FLOAT
	FlPad1      DT_FLOAT
	FlPad2      DT_FLOAT
}

func (t *Type_72081710) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9807ffc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e3bcdd9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_959fcde.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8ea8e1a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_129b8df.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_38138dc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d04ea13.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_15de174.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6192f51.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d00a056.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2ed848a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f597cdf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_db72561.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8f70873.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_754b0f5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4ce8a9b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cbaf386.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e7daef4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_497f7bf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d19c35c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456aec.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b918f5a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_57d4c7e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8a373c0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a1812c5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7124f86.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2e0c8f7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7d8fd49.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8a6d88.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aeea64d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b918f5b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_57d4c7f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2e0c8f8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7d8fd4a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8a6d89.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aeea64e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a09e1ed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d28a307.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cc5d963.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_131818d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2352a09.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a09e1ee.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d28a308.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cc5d964.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_131818e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2352a0a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8522f61.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1bb10d9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_426ab57.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPad0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPad1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPad2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AssignClassPassiveSkillSlotMessage struct {
	THeader     RequiredMessageHeader
	SnoPower    DT_SNO
	NSlot       DT_INT
	Unk_dce541c DT_UINT
}

func (t *AssignClassPassiveSkillSlotMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSlot.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MediumBiomeObject struct {
	// Inherits BiomeObject
	// Inherits BiomeItem
	// Inherits PolymorphicBase
	DwType                 DT_UINT
	FlRadius               DT_FLOAT
	Unk_2fd1cdb            DT_FLOAT
	TAllowedScaleRange     DT_RANGE[*DT_FLOAT]
	Unk_87acb69            DT_RANGE[*DT_FLOAT]
	Unk_87acb6a            DT_RANGE[*DT_FLOAT]
	Unk_87acb6b            DT_RANGE[*DT_FLOAT]
	Unk_9854b6a            DT_RANGE[*DT_FLOAT]
	FlChance               DT_FLOAT
	DwFlags                DT_UINT
	Unk_2a8c4b6            DT_FLOAT
	AAzimuthAngle          DT_FLOAT
	AAltitudeAngle         DT_FLOAT
	Unk_6ead041            DT_RANGE[*DT_FLOAT]
	TParametricSettings    ParametricSettings
	ArProximityAdjustments DT_VARIABLEARRAY[*ProximityAdjustment]
	SnonameObject          DT_SNO_NAME
	Unk_d094b9a            DT_ENUM
	QInitialOrientation    bcQuat
	SzLookName             DT_UINT
	DwShaderMapOverride    DT_UINT
	DwPad                  DT_UINT
}

func (t *MediumBiomeObject) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2fd1cdb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAllowedScaleRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87acb69.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87acb6a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87acb6b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9854b6a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlChance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2a8c4b6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.AAzimuthAngle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.AAltitudeAngle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6ead041.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TParametricSettings.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArProximityAdjustments.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnonameObject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d094b9a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+252, io.SeekStart); err != nil {
		return err
	}
	if err := t.QInitialOrientation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLookName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwShaderMapOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_7247d2c9 struct {
	GbidSpawnLocTypes     DT_VARIABLEARRAY[*DT_GBID]
	TSpawnPopulationGroup PopGroupHandle
	TSpawnCountRange      DT_RANGE[*DT_INT]
	FlSpawnCountPercent   DT_FLOAT
	FlNoSpawnChance       DT_FLOAT
}

func (t *Type_7247d2c9) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidSpawnLocTypes.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 20,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSpawnPopulationGroup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSpawnCountRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSpawnCountPercent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlNoSpawnChance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LooteeLevelRangeSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType    DT_UINT
	BNegate   DT_INT
	DwPad     DT_UINT
	NMinLevel DT_INT
	NMaxLevel DT_INT
}

func (t *LooteeLevelRangeSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMinLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMaxLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventMsg struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType         DT_UINT
	DwPad          DT_UINT
	TConditions    TriggerConditions
	FGenerated     DT_INT
	Unk_6cba752    DT_INT
	Unk_e560b0b    DT_UINT
	EMsgPassMethod DT_ENUM
	DwMsgKey       DT_ENUM
}

func (t *TriggerEventMsg) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMsgPassMethod.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMsgKey.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type StencilParams struct {
	FStencilBufferEnable    DT_INT
	DwStencilBufferRefValue DT_UINT
	Unk_125c5d5             DT_UINT
	Unk_a6ffe64             DT_UINT
	Unk_ab3262d             DT_ENUM
	Unk_35ab896             DT_ENUM
	Unk_3553b7b             DT_ENUM
	Unk_f57a4b5             DT_ENUM
	Unk_d5bbf15             DT_ENUM
	Unk_4c8527e             DT_ENUM
	Unk_4c2d563             DT_ENUM
	Unk_e787b9d             DT_ENUM
}

func (t *StencilParams) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FStencilBufferEnable.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwStencilBufferRefValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_125c5d5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a6ffe64.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab3262d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_35ab896.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3553b7b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f57a4b5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d5bbf15.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4c8527e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4c2d563.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e787b9d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_72bd65f8 struct {
	THeader RequiredMessageHeader
	UToken  DT_UINT
}

func (t *Type_72bd65f8) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.UToken.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalMarkerActorPortalData struct {
	// Inherits GlobalMarkerActorData
	// Inherits PolymorphicBase
	DwType                        DT_UINT
	DwPad                         DT_UINT
	EWorldToChoose                DT_ENUM
	SnoSpecifiedWorld             DT_SNO
	DwEntranceNameToFind          DT_STARTLOC_NAME
	DwPortalType                  DT_UINT
	SnoPortalDestSubzone          DT_SNO
	EPortalDestSubzoneType        DT_ENUM
	DwPortalDestSubzoneFlags      DT_UINT
	DwWorldAppearanceFlags        DT_UINT
	EDungeonFlavorType            DT_ENUM
	SnoPortalDestLevelArea        DT_SNO
	SnoPhasingVisibilityCondition DT_SNO
	SnoGizmoCondition             DT_SNO
	Unk_8acbebf                   DT_SNO
	Unk_8755612                   DT_SNO
	Unk_4908570                   DT_SNO
	Unk_9799a99                   DT_INT
}

func (t *GlobalMarkerActorPortalData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EWorldToChoose.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSpecifiedWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwEntranceNameToFind.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPortalType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPortalDestSubzone.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPortalDestSubzoneType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPortalDestSubzoneFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwWorldAppearanceFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDungeonFlavorType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPortalDestLevelArea.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPhasingVisibilityCondition.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoGizmoCondition.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8acbebf.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8755612.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4908570.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 126,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9799a99.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ChangeAppearanceMessage struct {
	THeader         RequiredMessageHeader
	SnoMarkingShape DT_SNO
	SnoMarkingColor DT_SNO
	SnoJewelry      DT_SNO
	SnoMakeup       DT_SNO
}

func (t *ChangeAppearanceMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMarkingShape.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 115,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMarkingColor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 133,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoJewelry.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 119,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMakeup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 132,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_72ffea44 struct {
	SnoActor       DT_SNO
	PRareNameGBIDs DT_FIXEDARRAY[*DT_GBID]
	ERarity        DT_ENUM
	BUseAltName    DT_INT
}

func (t *Type_72ffea44) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.PRareNameGBIDs.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
		Group:       7,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.ERarity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BUseAltName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameTestingStatusTextMessage struct {
	THeader RequiredMessageHeader
	SzText  DT_CHARARRAY
}

func (t *GameTestingStatusTextMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzText.UnmarshalD4(r, &Options{
		ArrayLength: 256,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerDestroyableObjectGizmoData struct {
	Unk_54513b8 DT_INT
}

func (t *MarkerDestroyableObjectGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ForcedPrefetchData struct {
	VTargetPosition   DT_VECTOR3D
	FPrefetchRadius   DT_FLOAT
	ArPrefetchEntries DT_VARIABLEARRAY[*ForcedPrefetchEntry]
}

func (t *ForcedPrefetchData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.VTargetPosition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FPrefetchRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPrefetchEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnInitializeDamageBuffCallback struct {
	// Inherits ProcChanceBuffCallbackBase
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	BAlwaysProcs          DT_INT
	DwPadding             DT_UINT
	TProcChance           DT_STRING_FORMULA
}

func (t *OnInitializeDamageBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.BAlwaysProcs.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPadding.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.TProcChance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type VoteKickMessage struct {
	THeader     RequiredMessageHeader
	Unk_390da21 DT_UINT
	Unk_1d54bcc DT_UINT
	UsMessage   DT_CHARARRAY
}

func (t *VoteKickMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_390da21.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1d54bcc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.UsMessage.UnmarshalD4(r, &Options{
		ArrayLength: 1024,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1048, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_737898bc struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *Type_737898bc) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SkillTreeNodeEntry struct {
	DwNodeId DT_UINT
	DwRank   DT_UINT
}

func (t *SkillTreeNodeEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNodeId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwRank.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ChangedHeroIdMessage struct {
	THeader     RequiredMessageHeader
	Unk_13bbc12 DT_CHARARRAY
}

func (t *ChangedHeroIdMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_13bbc12.UnmarshalD4(r, &Options{
		ArrayLength: 37,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionHasActorTarget struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
}

func (t *PowerConditionHasActorTarget) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LogicSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType       DT_UINT
	BNegate      DT_INT
	DwPad        DT_UINT
	ArConditions DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *LogicSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIConsoleEditStyle struct {
	// Inherits UIEditStyle
	// Inherits UITextStyle
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	TFont                     UIControlFont
	Unk_4741819               DT_TAGMAP[*DT_ENUM]
	Unk_172e19a               DT_TAGMAP[*DT_ENUM]
}

func (t *UIConsoleEditStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFont.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4741819.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_172e19a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DRLGPortalInfo struct {
	EResolveMethod       DT_ENUM
	SnoSpecifiedWorld    DT_SNO
	DwEntranceNameToFind DT_STARTLOC_NAME
	SnoDestLevelArea     DT_SNO
}

func (t *DRLGPortalInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EResolveMethod.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSpecifiedWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwEntranceNameToFind.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDestLevelArea.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_74952762 struct {
	UGameAccountId DT_UINT
	UAuthToken     DT_INT64
	Unk_2f5806b    DT_INT
	TSessionKey    DT_FIXEDARRAY[*DT_BYTE]
}

func (t *Type_74952762) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.UGameAccountId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.UAuthToken.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2f5806b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSessionKey.UnmarshalD4(r, &Options{
		ArrayLength: 128,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BoostCheatEntry struct {
	SzCheatString DT_CSTRING[*DT_BYTE]
}

func (t *BoostCheatEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzCheatString.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NpcLookTagEntry_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*NpcLookTagEntry]
}

func (t *NpcLookTagEntry_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CameraModeSetMessage struct {
	THeader    RequiredMessageHeader
	FAVMode    DT_INT
	TTransform PRTransform
}

func (t *CameraModeSetMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FAVMode.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTransform.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ExperienceLevelAlt struct {
	NDeltaXP DT_INT64
}

func (t *ExperienceLevelAlt) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NDeltaXP.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_7535b2ad struct {
	ETier       DT_ENUM
	Unk_395d1e7 DT_INT
}

func (t *Type_7535b2ad) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_395d1e7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ColorCorrectionParams struct {
	Unk_ba29200 DT_TAGMAP[*DT_ENUM]
}

func (t *ColorCorrectionParams) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ba29200.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIMinimapArtStyle struct {
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
}

func (t *UIMinimapArtStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_75ca18d0 struct {
	HTemplate           UIControlHandle
	BActive             DT_INT
	BAcceptInitialFocus DT_INT
	Unk_17cfa96         DT_INT
	SzOnInit            DT_CSTRING[*DT_BYTE]
	SzOnOpen            DT_CSTRING[*DT_BYTE]
	SzOnClose           DT_CSTRING[*DT_BYTE]
	SzOnDispose         DT_CSTRING[*DT_BYTE]
	SzOnUpdate          DT_CSTRING[*DT_BYTE]
	SzOnSelChange       DT_CSTRING[*DT_BYTE]
	SzIDNext            DT_CSTRING[*DT_BYTE]
	SnoOnOpenSound      DT_SNO
	Unk_33fa5cf         DT_SNO
	SnoOnCloseSound     DT_SNO
	Unk_8ab8d6          DT_CSTRING[*DT_BYTE]
	Unk_2509b49         DT_CSTRING[*DT_BYTE]
	Unk_a2ead70         DT_CSTRING[*DT_BYTE]
	Unk_868283          DT_CSTRING[*DT_BYTE]
	Unk_785d371         DT_INT
	Unk_192fb51         DT_INT
	Unk_5251749         DT_INT
	Unk_1cfa0b8         DT_CSTRING[*DT_BYTE]
	Unk_1cfa0b9         DT_CSTRING[*DT_BYTE]
	Unk_513b522         DT_ENUM
	Unk_f0a3845         DT_INT
	Unk_40ae369         DT_INT
	Unk_7d6fa47         DT_INT
}

func (t *Type_75ca18d0) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.HTemplate.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.BActive.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.BAcceptInitialFocus.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_17cfa96.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnInit.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnOpen.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnClose.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnDispose.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnUpdate.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnSelChange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzIDNext.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnOpenSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_33fa5cf.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnCloseSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8ab8d6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2509b49.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a2ead70.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_868283.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_785d371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_192fb51.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5251749.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1cfa0b8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1cfa0b9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_513b522.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f0a3845.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_40ae369.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7d6fa47.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEvent struct {
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
}

func (t *TriggerEvent) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AICellData struct {
	Unk_f169594 AABB
	Unk_9a685b8 AABB
	Unk_c225718 DT_UINT
	M_cellId    DT_INT64
	Unk_179f850 DT_INT64
}

func (t *AICellData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f169594.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a685b8.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c225718.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_cellId.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_179f850.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayMusicOverlayMessage struct {
	THeader  RequiredMessageHeader
	SnoMusic DT_SNO
}

func (t *PlayMusicOverlayMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMusic.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 62,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BannerMaskOnly struct {
	SzName  DT_UINT
	HLabel  StringLabelHandleEx
	SnoMask DT_SNO
	HIcon   Type_6b1c5d9c
}

func (t *BannerMaskOnly) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.HLabel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMask.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DeathFadeTimeMessage struct {
	THeader                RequiredMessageHeader
	Ann                    DT_ACD_NETWORK_NAME
	NTimeUntilFade         DT_INT
	NFadeTime              DT_INT
	BRecurseForAttachments DT_INT
}

func (t *DeathFadeTimeMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NTimeUntilFade.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFadeTime.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.BRecurseForAttachments.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorGizmoData struct {
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
}

func (t *ActorGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type FlagLookup struct {
	NIndex        DT_INT
	SzLabel       DT_CHARARRAY
	SzDescription DT_CHARARRAY
}

func (t *FlagLookup) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLabel.UnmarshalD4(r, &Options{
		ArrayLength: 128,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzDescription.UnmarshalD4(r, &Options{
		ArrayLength: 256,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+388, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventAddRope struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType              DT_UINT
	TConditions         TriggerConditions
	FGenerated          DT_INT
	Unk_6cba752         DT_INT
	Unk_e560b0b         DT_UINT
	TDuration           DT_FLOAT
	DwTriggerFlags      DT_UINT
	DwTriggerFlagsEx    DT_UINT
	TCleanup            TriggerCleanup
	Unk_49e9257         DT_INT
	Unk_5490979         DT_INT
	DwPad               DT_UINT
	DwID                DT_UINT
	SnoRope             DT_SNO
	SnoPowerEffectParam DT_SNO
	Unk_f0a4c41         DT_FIXEDARRAY[*Type_1f843277]
	Unk_825667e         DT_VARIABLEARRAY[*Type_1f843277]
	VecScalar           DT_VECTOR2D
}

func (t *TriggerEventAddRope) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRope.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 32,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerEffectParam.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f0a4c41.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_825667e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GenericBlobResponseMessage struct {
	THeader   Type_ad008e7e
	UBlobSize DT_WORD
}

func (t *GenericBlobResponseMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.UBlobSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupActorPositionTrack struct {
	// Inherits EffectGroupTrack
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
}

func (t *EffectGroupActorPositionTrack) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WorldEventStartingMessage struct {
	THeader        RequiredMessageHeader
	SnoQuest       DT_SNO
	BIsWorldEvent  DT_INT
	SnoWorld       DT_SNO
	SnoSubzone     DT_SNO
	SnoReward      DT_SNO
	ERewardQuality DT_ENUM
	Unk_576b41d    DT_INT64
	WpLocation     DT_VECTOR3D
}

func (t *WorldEventStartingMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsWorldEvent.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSubzone.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoReward.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.ERewardQuality.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_576b41d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpLocation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ImbueRecipe struct {
	Unk_c3af77b          DT_ENUM
	EItemQualityModifier DT_ENUM
	Unk_7f93f1d          DT_ENUM
	SnoRecipe            DT_SNO
}

func (t *ImbueRecipe) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c3af77b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EItemQualityModifier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7f93f1d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRecipe.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 49,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NecroArmyUnitMessage struct {
	THeader   RequiredMessageHeader
	EUnitType DT_ENUM
}

func (t *NecroArmyUnitMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EUnitType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SpeakerDefinition struct {
	Unk_ca1a658    DT_INT
	PtVOParameters DT_VARIABLEARRAY[*WwiseGameParameter]
}

func (t *SpeakerDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ca1a658.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtVOParameters.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventSetWeaponSheathed struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
	Unk_279aa5a DT_INT
	DwActorID   DT_UINT
	BSheathed   DT_INT
}

func (t *TriggerEventSetWeaponSheathed) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_279aa5a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwActorID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.BSheathed.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_77a79111 struct {
	Unk_ca89bd3       DT_FLOAT
	Unk_fb082e6       DT_FLOAT
	Unk_eb94539       DT_UINT
	Unk_bcdffc9       DT_FLOAT
	Unk_bb3a1d        DT_FLOAT
	FlCompressorSlope DT_FLOAT
	Unk_fcaf78b       DT_FLOAT
	Unk_eb919f7       DT_FLOAT
	Unk_ba7b0e0       DT_FLOAT
	Unk_5419989       DT_FLOAT
	ECompressorMode   DT_ENUM
	Unk_34d0352       DT_ENUM
}

func (t *Type_77a79111) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ca89bd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fb082e6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eb94539.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bcdffc9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bb3a1d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlCompressorSlope.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fcaf78b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eb919f7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ba7b0e0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5419989.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECompressorMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_34d0352.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_77aada63 struct {
	TValueMin DT_FLOAT
	TValueMax DT_FLOAT
	TTime     DT_FLOAT
}

func (t *Type_77aada63) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TValueMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TValueMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_77e24bbd struct {
	TValueMin DT_INT
	TValueMax DT_INT
	TTime     DT_FLOAT
}

func (t *Type_77e24bbd) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TValueMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TValueMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnInterruptPowerCallback struct {
	// Inherits PowerCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	BCouldHaveRagdolled   DT_INT
}

func (t *OnInterruptPowerCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCouldHaveRagdolled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_78541b1a struct {
	Unk_70a927c DT_INT
	FlDelta     DT_FLOAT
}

func (t *Type_78541b1a) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_70a927c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDelta.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnCreatePowerCallback struct {
	// Inherits PowerCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	BCouldHaveRagdolled   DT_INT
}

func (t *OnCreatePowerCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCouldHaveRagdolled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ACDGroupMessage struct {
	THeader RequiredMessageHeader
	Ann     DT_ACD_NETWORK_NAME
	AGroups DT_FIXEDARRAY[*DT_GBID]
}

func (t *ACDGroupMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.AGroups.UnmarshalD4(r, &Options{
		ArrayLength: 8,
		Flags:       9,
		Group:       24,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_78854e88 struct {
	SnoMusic   DT_SNO
	SnoAmbient DT_SNO
	SnoReverb  DT_SNO
	SnoWeather DT_SNO
}

func (t *Type_78854e88) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMusic.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 62,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAmbient.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 5,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoReverb.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 60,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWeather.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 47,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_78a562aa struct {
	ArSlots  DT_VARIABLEARRAY[*Type_58fbb94c]
	ArPowers DT_VARIABLEARRAY[*Type_27c7c537]
}

func (t *Type_78a562aa) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSlots.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPowers.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerClassResourceData struct {
	EType                      DT_ENUM
	FlBase                     DT_FLOAT
	FlRegen                    DT_FLOAT
	FlPowerFormulaTablesResult DT_FLOAT
	Unk_171732b                DT_FLOAT
	Unk_8694d05                DT_FLOAT
	Unk_b19aa73                DT_FLOAT
	Unk_bf2b603                DT_FLOAT
}

func (t *PlayerClassResourceData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlBase.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRegen.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPowerFormulaTablesResult.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_171732b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8694d05.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b19aa73.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bf2b603.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerCleanup struct {
	Unk_80dc73  DT_ENUM
	Unk_f216739 DT_ENUM
	Unk_8047af2 DT_ENUM
	Unk_4690732 DT_ENUM
	Unk_2041ce1 DT_ENUM
	Unk_c5ce3af DT_ENUM
}

func (t *TriggerCleanup) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_80dc73.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f216739.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8047af2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4690732.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2041ce1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c5ce3af.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ClientDebugLogMessage struct {
	THeader     RequiredMessageHeader
	SzLogString DT_CHARARRAY
}

func (t *ClientDebugLogMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLogString.UnmarshalD4(r, &Options{
		ArrayLength: 1000,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1016, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActivityReward struct{}

func (t *ActivityReward) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+1, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerPhasePreplay struct {
	// Inherits PowerPhaseBase
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TPhaseName  DT_UINT
	Unk_fcb7313 DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	Unk_d0d932b DT_INT
	Unk_9a8200e DT_INT
}

func (t *PowerPhasePreplay) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPhaseName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fcb7313.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0d932b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a8200e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamQuestName struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType      DT_UINT
	EParamType  DT_ENUM
	DwPad       DT_UINT
	DwQuestHash DT_UINT
	SzQuest     DT_CSTRING[*DT_BYTE]
}

func (t *ScriptEventParamQuestName) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwQuestHash.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzQuest.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CurrentLevelAreaSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType       DT_UINT
	BNegate      DT_INT
	DwPad        DT_UINT
	SnoLevelArea DT_SNO
	Unk_c7b2b18  DT_ENUM
}

func (t *CurrentLevelAreaSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelArea.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c7b2b18.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalMarkerActorWaypointData struct {
	// Inherits GlobalMarkerActorData
	// Inherits PolymorphicBase
	DwType            DT_UINT
	DwPad             DT_UINT
	DwEntranceName    DT_STARTLOC_NAME
	HZoneLabel        DT_UINT
	Unk_92edf50       DT_SNO
	ArWaypointEffects DT_FIXEDARRAY[*WaypointEffectInfo]
}

func (t *GlobalMarkerActorWaypointData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwEntranceName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.HZoneLabel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_92edf50.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArWaypointEffects.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+896, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PrivateGameSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType  DT_UINT
	BNegate DT_INT
	DwPad   DT_UINT
}

func (t *PrivateGameSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerInstanceChunk struct {
	PtInstanceGroups DT_VARIABLEARRAY[*MarkerInstanceGroup]
	Unk_7934bc2      Type_cd5b4347
	Unk_2f217b0      DT_INT
	AabbBounds       AABB
}

func (t *MarkerInstanceChunk) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtInstanceGroups.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7934bc2.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2f217b0.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.AabbBounds.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_7a02a8d6 struct {
	NLevel           DT_INT
	SnoCondition     DT_SNO
	HDisplayedString DT_UINT
}

func (t *Type_7a02a8d6) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.HDisplayedString.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamMonsterRarity struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType         DT_UINT
	EParamType     DT_ENUM
	DwPad          DT_UINT
	EMonsterRarity DT_ENUM
}

func (t *ScriptEventParamMonsterRarity) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMonsterRarity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerInstanceGroup struct {
	SnoAppearance           DT_SNO
	SzLookName              DT_UINT
	DwShaderMapOverride     DT_UINT
	ECullingLevel           DT_ENUM
	EInstanceType           DT_ENUM
	PtInstances             DT_VARIABLEARRAY[*Type_8b32a937]
	Unk_7934bc2             Type_2d02bd94
	DwFlags                 DT_UINT
	PtRunTimeMaterialValues DT_VARIABLEARRAY[*RunTimeMaterialValues]
}

func (t *MarkerInstanceGroup) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAppearance.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 9,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLookName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwShaderMapOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECullingLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EInstanceType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtInstances.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7934bc2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtRunTimeMaterialValues.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PrefetchQuestMessage struct {
	THeader    RequiredMessageHeader
	SnoQuest   DT_SNO
	Unk_a61d97 DT_INT
}

func (t *PrefetchQuestMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a61d97.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_7a954650 struct {
	TComponent SerialDataInfo
}

func (t *Type_7a954650) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TComponent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupDefinition struct {
	FlDuration          DT_FLOAT
	DwEffectFlags       DT_UINT
	Unk_4327903         DT_FLOAT
	Unk_9cf7635         DT_FLOAT
	Unk_30364bd         DT_FLOAT
	Unk_e8602d3         DT_FLOAT
	Unk_7d5553e         DT_FLOAT
	Unk_19bdc57         DT_FLOAT
	Unk_7c79fc2         DT_FLOAT
	Unk_43960c1         DT_ENUM
	TFallbackEffect     EffectItem
	PtEffects           DT_VARIABLEARRAY[*EffectItem]
	Unk_50a2c90         DT_VARIABLEARRAY[*DT_INT]
	NEffectWeightMethod DT_ENUM
	SnoPower            DT_SNO
	SnoPowerEffectParam DT_SNO
	SnoConversation     DT_SNO
	Unk_e7c25e0         DT_ENUM
	Unk_51077dd         DT_RANGE[*DT_FLOAT]
	FPlayedBit          DT_FIXEDARRAY[*DT_UINT]
	PtHardpoints        DT_VARIABLEARRAY[*EffectGroupHardpoint]
	Unk_4f7a18a         DT_UINT
	Unk_adf7def         DT_ENUM
}

func (t *EffectGroupDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDuration.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwEffectFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4327903.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9cf7635.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_30364bd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e8602d3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7d5553e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_19bdc57.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7c79fc2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_43960c1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFallbackEffect.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtEffects.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_50a2c90.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.NEffectWeightMethod.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+236, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerEffectParam.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+244, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoConversation.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 12,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e7c25e0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+252, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_51077dd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.FPlayedBit.UnmarshalD4(r, &Options{ArrayLength: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+328, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtHardpoints.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+344, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4f7a18a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+348, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_adf7def.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+352, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CurrencyModifiedMessage struct {
	THeader       RequiredMessageHeader
	BPlayEffects  DT_INT
	NAmount       DT_INT64
	ECurrencyType DT_ENUM
	EReason       DT_ENUM
}

func (t *CurrencyModifiedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BPlayEffects.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECurrencyType.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.EReason.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_7ab1e0b4 struct {
	EListBoxStyle    DT_ENUM
	SnoHighlightAnim DT_SNO
	SnoHoverAnim     DT_SNO
	Unk_62dd471      DT_INT
	Unk_8aa16e       DT_INT
	TMargins         UIMargins
	Unk_4ce228f      UIControlHandle
	BToggleSelection DT_INT
	Unk_ccb7997      DT_CSTRING[*DT_BYTE]
	Unk_53e61d6      DT_ENUM
	Unk_26fb7aa      DT_FLOAT
	EBlendEasing     DT_ENUM
	Unk_ba769f2      DT_FLOAT
	Unk_7111989      DT_ENUM
	Unk_784f6fe      DT_INT
	Unk_1e24eb1      DT_INT
	NPageIncrement   DT_INT
	Unk_f28083a      DT_INT
}

func (t *Type_7ab1e0b4) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EListBoxStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoHighlightAnim.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 7,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoHoverAnim.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 7,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_62dd471.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8aa16e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMargins.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4ce228f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.BToggleSelection.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ccb7997.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_53e61d6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_26fb7aa.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ba769f2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7111989.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_784f6fe.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1e24eb1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPageIncrement.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f28083a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_7aba675a struct {
	SnoItem         DT_SNO
	BDrawSockets    DT_INT
	Unk_6ca9d52     DT_INT
	BDrawBackground DT_INT
	Unk_c67f281     DT_INT
	Unk_ce38d55     DT_INT
	Unk_a29eae9     DT_INT
}

func (t *Type_7aba675a) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItem.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.BDrawSockets.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6ca9d52.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.BDrawBackground.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c67f281.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ce38d55.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a29eae9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_7ac3d650 struct {
	THeader      RequiredMessageHeader
	NCrafterType DT_INT
}

func (t *Type_7ac3d650) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCrafterType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_7acab63b struct {
	Unk_f28e177            DT_SNO
	Unk_da03493            DT_SNO
	PathVignetteColor      Type_560ae4cf
	PathVignetteIntensity  Type_cbfdd2ea
	PathVignetteSmoothness Type_cbfdd2ea
	VecVignetteCenter      DT_VECTOR2D
	Unk_af3caab            DT_VECTOR2D
}

func (t *Type_7acab63b) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f28e177.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_da03493.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathVignetteColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathVignetteIntensity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathVignetteSmoothness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecVignetteCenter.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af3caab.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OctreePrimitive struct {
	UUserData DT_INT64
}

func (t *OctreePrimitive) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.UUserData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DebugProjectileCollisionCheck struct {
	FlRadius DT_OPTIONAL[*DT_FLOAT]
	BOverlap DT_OPTIONAL[*DT_INT]
	Wp1      DT_OPTIONAL[*DT_VECTOR3D]
	Wp2      DT_OPTIONAL[*DT_VECTOR3D]
}

func (t *DebugProjectileCollisionCheck) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.BOverlap.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wp1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wp2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerPortalDestGizmoData struct {
	DwEntranceName DT_STARTLOC_NAME
	Unk_7d1b2c3    DT_INT
	Unk_eb1dc3b    DT_SNO
	DwPortalType   DT_UINT
}

func (t *MarkerPortalDestGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwEntranceName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7d1b2c3.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eb1dc3b.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPortalType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ItemSourceWorldTierSubcondition struct {
	// Inherits Type_d3c3637f
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType        DT_UINT
	BNegate       DT_INT
	EComparisonOp DT_ENUM
	DwPad         DT_UINT
	EWorldTier    DT_ENUM
}

func (t *ItemSourceWorldTierSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.EWorldTier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ItemUpgradeCountSubcondition struct {
	// Inherits Type_d3c3637f
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType        DT_UINT
	BNegate       DT_INT
	EComparisonOp DT_ENUM
	DwPad         DT_UINT
	NUpgradeCount DT_INT
}

func (t *ItemUpgradeCountSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.NUpgradeCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NPCHairColors struct {
	DwID                 DT_UINT
	RgbaColors           DT_FIXEDARRAY[*DT_RGBACOLOR]
	FlHairColorInfluence DT_FLOAT
	SzLabel              DT_CSTRING[*DT_BYTE]
}

func (t *NPCHairColors) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaColors.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHairColorInfluence.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLabel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnResourceGainedBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnResourceGainedBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_7b962e40 struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType        DT_UINT
	EParamType    DT_ENUM
	DwPad         DT_UINT
	TMarkerHandle MarkerHandle
}

func (t *Type_7b962e40) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMarkerHandle.UnmarshalD4(r, &Options{Flags: 513}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_7ba7c20f struct {
	// Inherits GlobalMarkerActorData
	// Inherits PolymorphicBase
	DwType       DT_UINT
	DwPad        DT_UINT
	SnoSubzone   DT_SNO
	SnoLevelArea DT_SNO
}

func (t *Type_7ba7c20f) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSubzone.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelArea.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type FoleyMaterialTag struct {
	SzTag DT_UINT
}

func (t *FoleyMaterialTag) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzTag.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_7bed253b struct {
	Unk_a73baf8 DT_FIXEDARRAY[*Type_197fc9d9]
}

func (t *Type_7bed253b) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a73baf8.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamConversation struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType          DT_UINT
	EParamType      DT_ENUM
	DwPad           DT_UINT
	SnoConversation DT_SNO
}

func (t *ScriptEventParamConversation) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoConversation.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 12,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SubObjectAppearance struct {
	DwFlags             DT_UINT
	SnoMaterial         DT_SNO
	SnoOverrideMaterial DT_SNO
	SnoCloth            DT_SNO
	Unk_3ca0753         DT_SNO
	Unk_1f70f66         DT_SNO
	SnoEffectGroup      DT_SNO
	Unk_3f71565         DT_VARIABLEARRAY[*AnimationClothOverride]
	ArVariantMaterials  DT_VARIABLEARRAY[*DT_SNO]
}

func (t *SubObjectAppearance) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMaterial.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 57,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOverrideMaterial.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 57,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCloth.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 11,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3ca0753.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 11,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1f70f66.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 11,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3f71565.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArVariantMaterials.UnmarshalD4(r, &Options{Group: 57}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionIsValidForWeaponExpertise struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType      DT_UINT
	BInverse    DT_INT
	DwPad       DT_UINT
	SnoItemType DT_SNO
	Unk_882d30e DT_INT
}

func (t *PowerConditionIsValidForWeaponExpertise) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItemType.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 98,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_882d30e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnBerserkRemovedCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	Unk_224db6f           DT_ENUM
	DwRemovalReasons      DT_UINT
}

func (t *OnBerserkRemovedCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_224db6f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwRemovalReasons.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimSetOverrideEntry struct {
	Unk_8c0de6e        DT_GBID
	SnoAnimSetOverride DT_SNO
}

func (t *AnimSetOverrideEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8c0de6e.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 53,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAnimSetOverride.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CollisionMesh struct {
	Unk_fb873e2       Type_c1ddc6d3
	PtDominoVertices  DT_VARIABLEARRAY[*Type_e5e3d6d6]
	PtDominoTriangles DT_VARIABLEARRAY[*Type_2f8b25ef]
	PtDominoNodes     DT_VARIABLEARRAY[*Type_b8e1451f]
	Unk_b2f6ec8       DT_INT
	UFlags            DT_UINT
	UMaterial         DT_UINT
	UGroupIndex       DT_WORD
	Unk_732e0b0       DT_VARIABLEARRAY[*DT_UINT]
}

func (t *CollisionMesh) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fb873e2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtDominoVertices.UnmarshalD4(r, &Options{Flags: 2097153}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtDominoTriangles.UnmarshalD4(r, &Options{Flags: 2097153}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtDominoNodes.UnmarshalD4(r, &Options{Flags: 2097153}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b2f6ec8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.UFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.UMaterial.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.UGroupIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_732e0b0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SkillTreeNode struct {
	DwID                  DT_UINT
	GbidReward            DT_GBID
	NExclusiveGroupId     DT_INT
	VPosition             DT_VECTOR2D
	BRootNode             DT_INT
	NMinimumEarnedBlocked DT_UINT
	Unk_bb82ad1           DT_INT
	ArConnections         DT_VARIABLEARRAY[*SkillTreeNodePersonalConnection]
	ArnAllowGameBalance   DT_VARIABLEARRAY[*Type_9a30831a]
}

func (t *SkillTreeNode) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidReward.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 43,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NExclusiveGroupId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.VPosition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BRootNode.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMinimumEarnedBlocked.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bb82ad1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConnections.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArnAllowGameBalance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_7d803492 struct {
	THeader RequiredMessageHeader
	AnnKey  DT_ACD_NETWORK_NAME
	BLeader DT_INT
}

func (t *Type_7d803492) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnKey.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.BLeader.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamFloatRangeEntered struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
	FlMinValue DT_FLOAT
	FlMaxValue DT_FLOAT
}

func (t *ScriptEventParamFloatRangeEntered) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMinValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMaxValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_7de8fcbd struct {
	TDropRange      DT_RANGE[*DT_INT]
	Unk_6a86924     DT_FLOAT
	FlExpectedValue DT_FLOAT
	Unk_6a86826     DT_FLOAT
	NWeights        DT_FIXEDARRAY[*DT_INT]
}

func (t *Type_7de8fcbd) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDropRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6a86924.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlExpectedValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6a86826.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NWeights.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorCombatData struct {
	Unk_f13a861            DT_SNO
	EWeaponHitsound        DT_ENUM
	ArHitReactionOverrides DT_VARIABLEARRAY[*HitReactionOverride]
	Unk_5909501            DT_FLOAT
	ArJitterJoints         DT_VARIABLEARRAY[*ActorJitterJoint]
	ArRotationJoints       DT_VARIABLEARRAY[*Type_3d4fd272]
}

func (t *ActorCombatData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f13a861.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EWeaponHitsound.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArHitReactionOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5909501.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArJitterJoints.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArRotationJoints.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_7e0a5501 struct {
	Unk_180e380 DT_UINT
	Unk_11cfeb2 DT_UINT
	Unk_8c3326b DT_UINT
	Unk_31f2130 DT_CHARARRAY
	Unk_e1de6e4 DT_INT64
	Unk_35d179b DT_INT64
	Unk_eb81e70 DT_UINT
	NGiftsPoint DT_INT
	SzDebugMsg  DT_CHARARRAY
	DwFlags     DT_UINT
}

func (t *Type_7e0a5501) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_180e380.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_11cfeb2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8c3326b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_31f2130.UnmarshalD4(r, &Options{
		ArrayLength: 100,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e1de6e4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_35d179b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eb81e70.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.NGiftsPoint.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzDebugMsg.UnmarshalD4(r, &Options{
		ArrayLength: 256,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+392, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+400, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_7e418ba8 struct {
	// Inherits PolymorphicBase
	DwType       DT_UINT
	Unk_2de4987  DT_UINT
	ArConditions DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	BEnd         DT_INT
	DwPad        DT_UINT
}

func (t *Type_7e418ba8) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2de4987.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEnd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameTestingActorDeathSamplingStartMessage struct {
	THeader          RequiredMessageHeader
	SnoActor         DT_SNO
	SnoDeathOverride DT_SNO
	UCount           DT_UINT
}

func (t *GameTestingActorDeathSamplingStartMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDeathOverride.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.UCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WorldEvent struct {
	TMarkerHandle MarkerHandle
	SnoWorldState DT_SNO
	NValue        DT_INT
	SnoScene      DT_SNO
}

func (t *WorldEvent) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMarkerHandle.UnmarshalD4(r, &Options{Flags: 513}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorldState.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 86,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.NValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoScene.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 33,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DeathLookTemplate struct{}

func (t *DeathLookTemplate) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+1, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_7fb46e7a struct {
	ArNodes     DT_VARIABLEARRAY[*StoryboardPlayStoryboardNode]
	Unk_36cc429 DT_VARIABLEARRAY[*DT_INT]
}

func (t *Type_7fb46e7a) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArNodes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_36cc429.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HirelingInfo struct {
	EClass           DT_ENUM
	GbidName         DT_GBID
	FDead            DT_INT
	ArnPowerKeyParam DT_FIXEDARRAY[*DT_INT]
}

func (t *HirelingInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EClass.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDead.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArnPowerKeyParam.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_7fc234c1 struct {
	LocalTransform Type_5f527528
	Scale          DT_VECTOR4D
	Radius1        DT_FLOAT
	Radius2        DT_FLOAT
	Height         DT_FLOAT
	Stiffness      DT_FLOAT
	BoneIndex      DT_WORD
	Padding        DT_FIXEDARRAY[*DT_WORD]
}

func (t *Type_7fc234c1) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.LocalTransform.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Scale.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Radius1.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Radius2.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Height.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Stiffness.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.BoneIndex.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+66, io.SeekStart); err != nil {
		return err
	}
	if err := t.Padding.UnmarshalD4(r, &Options{ArrayLength: 7}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HiddenCacheGizmoData struct {
	// Inherits NamedGizmoData
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
	SnoTreasureClass             DT_SNO
	NXPTier                      DT_INT
	GbidHiddenCache              DT_GBID
}

func (t *HiddenCacheGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTreasureClass.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.NXPTier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidHiddenCache.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 28,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SurfaceWorldConstraints struct {
	// Inherits Type_7e418ba8
	// Inherits PolymorphicBase
	DwType       DT_UINT
	Unk_2de4987  DT_UINT
	ArConditions DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	BEnd         DT_INT
	DwPad        DT_UINT
}

func (t *SurfaceWorldConstraints) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2de4987.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEnd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventCameraStayOnSpline struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType              DT_UINT
	TConditions         TriggerConditions
	FGenerated          DT_INT
	Unk_6cba752         DT_INT
	Unk_e560b0b         DT_UINT
	TDuration           DT_FLOAT
	DwTriggerFlags      DT_UINT
	DwTriggerFlagsEx    DT_UINT
	TCleanup            TriggerCleanup
	Unk_49e9257         DT_INT
	Unk_5490979         DT_INT
	DwPad               DT_UINT
	SzSplineName        DT_UINT
	Unk_30b49c2         DT_ENUM
	Unk_8781d26         DT_UINT
	Unk_9a31592         DT_UINT
	FlFirstPercent      DT_FLOAT
	FlLastPercent       DT_FLOAT
	FlFirstDistance     DT_FLOAT
	FlLastDistance      DT_FLOAT
	Unk_71c05df         DT_INT
	Unk_325b1ab         DT_INT
	EProximityType      DT_ENUM
	Unk_72c9d37         DT_UINT
	Unk_ed13c17         HardpointLink
	Unk_264c534         DT_UINT
	VecProximityOffset  DT_VECTOR3D
	Unk_8ff6495         DT_INT
	Unk_983a265         DT_INT
	FlNodeDistance      DT_FLOAT
	Unk_215cc14         DT_FLOAT
	Unk_802b7b          DT_INT
	Unk_e27112b         DT_SNO
	EOrientationMode    DT_ENUM
	Unk_daebe18         DT_ENUM
	Unk_6101673         DT_UINT
	Unk_8470ffc         HardpointLink
	Unk_46c8459         DT_UINT
	VecTargetOffset     DT_VECTOR3D
	EMicrophoneMode     DT_ENUM
	VecMicrophoneOffset DT_VECTOR3D
	EBlendEasing        DT_ENUM
}

func (t *TriggerEventCameraStayOnSpline) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzSplineName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_30b49c2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8781d26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a31592.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFirstPercent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLastPercent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFirstDistance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLastDistance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_71c05df.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_325b1ab.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.EProximityType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_72c9d37.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ed13c17.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_264c534.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecProximityOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8ff6495.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_983a265.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlNodeDistance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_215cc14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_802b7b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e27112b.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 26,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.EOrientationMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+228, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_daebe18.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6101673.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+236, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8470ffc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+244, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_46c8459.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecTargetOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMicrophoneMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecMicrophoneOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ParticleDefinition struct {
	EType                             DT_ENUM
	DwFlags                           DT_UINT
	DwFlagsEx                         DT_UINT
	DwFlagsEx2                        DT_UINT
	TSystemDuration                   DT_FLOAT
	TOutroDuration                    DT_FLOAT
	TPrepumpDuration                  DT_FLOAT
	ERenderDistance                   DT_ENUM
	Unk_d59152e                       DT_ENUM
	TSystemDurationScalar             InterpolationScalar
	PathSystemScale                   DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathSystemCount                   DT_VARIABLEARRAY[*Type_cc354444]
	Unk_63560e2                       DT_VARIABLEARRAY[*Type_cc354444]
	PathSystemAlpha                   DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathSystemAlphaAux                DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathParticleDuration              DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathInitialScale                  DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathInitialSourceRelativeSpread   DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathInitialSourceRelativeVelocity DT_VARIABLEARRAY[*VectorPath]
	PathInitialWorldRelativeVelocity  DT_VARIABLEARRAY[*VectorPath]
	PathInitialAngularVelocity        DT_VARIABLEARRAY[*VectorPath]
	PathSystemSpawnRate               DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathSystemSpeedSpawnRate          DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathSystemSpeedDurationFactor     DT_VARIABLEARRAY[*Type_cbfdd2ea]
	Unk_e44919                        DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathNoiseFrequency                DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathNoiseSmoothness               DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathNoiseAmplitude                DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathNoiseAmplitudeRange           DT_VARIABLEARRAY[*VectorPath]
	Unk_24aa41d                       DT_VARIABLEARRAY[*Type_cbfdd2ea]
	SnoMaterial                       DT_SNO
	SnoHoudini                        DT_SNO
	SnoPhysics                        DT_SNO
	Unk_172022                        DT_SNO
	FlNormalBias                      DT_FLOAT
	FlWindFactor                      DT_FLOAT
	FlExplosionFactor                 DT_FLOAT
	FlExplosionFriction               DT_FLOAT
	FlMass                            DT_FLOAT
	DwMaxSystems                      DT_UINT
	Unk_12ce589                       DT_FLOAT
	FlClutterZOffset                  DT_FLOAT
	SnoActor                          DT_SNO
	TLookLink                         LookLink
	DwShaderMapOverride               DT_UINT
	Unk_fabd80a                       bcQuat
	PtEmitter                         DT_POLYMORPHIC_VARIABLEARRAY[*EmitterDataBase]
	PathParticleColor                 DT_VARIABLEARRAY[*Type_560ae4cf]
	Unk_a748ce7                       DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathParticleAlpha                 DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathParticleAlphaAux              DT_VARIABLEARRAY[*Type_cbfdd2ea]
	Unk_ed6436f                       DT_VARIABLEARRAY[*Type_cbfdd2ea]
	Unk_68b6b45                       DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathParticleScale                 DT_VARIABLEARRAY[*Type_cbfdd2ea]
	Unk_b92bb9a                       DT_VARIABLEARRAY[*VectorPath]
	PathAngularPosition               DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathAngularVelocity               DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathOrientationVelocity           DT_VARIABLEARRAY[*Type_cbfdd2ea]
	Unk_2d865ba                       DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathOrientationPosition           DT_VARIABLEARRAY[*Type_cbfdd2ea]
	Unk_8c4fe0                        DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathOrientationAxis               DT_VARIABLEARRAY[*VectorPath]
	Unk_a68a7e0                       DT_VARIABLEARRAY[*VectorPath]
	Unk_a8c5217                       DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathMotionCylinderRadialPos       DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathMotionCylinderRadialVel       DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathMotionCylinderAngleVel        DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathMotionCylinderAxis            DT_VARIABLEARRAY[*VectorPath]
	PathMotionSphereRadialPos         DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathMotionSphereRadialVel         DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathMotionWorldPos                DT_VARIABLEARRAY[*VectorPath]
	PathMotionWorldVel                DT_VARIABLEARRAY[*VectorPath]
	PathMotionWorldAcc                DT_VARIABLEARRAY[*VectorPath]
	PathMotionRelativeCartesianPos    DT_VARIABLEARRAY[*VectorPath]
	PathMotionRelativeCartesianVel    DT_VARIABLEARRAY[*VectorPath]
	PathMotionRelativeCartesianAcc    DT_VARIABLEARRAY[*VectorPath]
	PathMotionAttractorVel            DT_VARIABLEARRAY[*Type_cbfdd2ea]
	PathMotionAttractorPos            DT_VARIABLEARRAY[*Type_cbfdd2ea]
	Unk_15ea201                       DT_VARIABLEARRAY[*Type_cbfdd2ea]
	Unk_afccc6                        DT_VARIABLEARRAY[*VectorPath]
	Unk_8dc0a2c                       DT_VARIABLEARRAY[*VectorPath]
	NFacing                           DT_ENUM
	EAlignment                        DT_ENUM
	WdBoundingRadius                  DT_FLOAT
	Unk_a79a409                       DT_FLOAT
	Unk_daaa964                       DT_FLOAT
	DwMinSize                         DT_UINT
	DwMaxSize                         DT_UINT
	Unk_3e0459a                       DT_FLOAT
	Unk_a0877a9                       DT_FLOAT
	Unk_63d7722                       DT_FLOAT
	SnoVectorField                    DT_SNO
	VecVectorFieldDim                 DT_VECTOR3D
	EVectorFieldAddressMode           DT_ENUM
	FlVectorFieldScrollSpeed          DT_FLOAT
	Unk_8f7c9c1                       DT_VARIABLEARRAY[*Type_cbfdd2ea]
	Unk_cddc4fd                       DT_VARIABLEARRAY[*VectorPath]
	PathVectorFieldRotation           DT_VARIABLEARRAY[*VectorPath]
	Unk_da1d404                       DT_FLOAT
	Unk_5a7f188                       DT_FLOAT
}

func (t *ParticleDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 8912896}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlagsEx.UnmarshalD4(r, &Options{Flags: 8912896}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlagsEx2.UnmarshalD4(r, &Options{Flags: 8912896}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSystemDuration.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.TOutroDuration.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPrepumpDuration.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.ERenderDistance.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d59152e.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSystemDurationScalar.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathSystemScale.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathSystemCount.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_63560e2.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathSystemAlpha.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathSystemAlphaAux.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathParticleDuration.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathInitialScale.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathInitialSourceRelativeSpread.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathInitialSourceRelativeVelocity.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathInitialWorldRelativeVelocity.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathInitialAngularVelocity.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathSystemSpawnRate.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathSystemSpeedSpawnRate.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathSystemSpeedDurationFactor.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e44919.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+320, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathNoiseFrequency.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+336, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathNoiseSmoothness.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+352, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathNoiseAmplitude.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+368, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathNoiseAmplitudeRange.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+384, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_24aa41d.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+400, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMaterial.UnmarshalD4(r, &Options{
		Flags: 8388608,
		Group: 57,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+404, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoHoudini.UnmarshalD4(r, &Options{
		Flags: 8388608,
		Group: 101,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+408, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPhysics.UnmarshalD4(r, &Options{
		Flags: 8388608,
		Group: 28,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+412, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_172022.UnmarshalD4(r, &Options{
		Flags: 8388608,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+416, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlNormalBias.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+420, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlWindFactor.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+424, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlExplosionFactor.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+428, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlExplosionFriction.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+432, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMass.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+436, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMaxSystems.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+440, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_12ce589.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+444, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlClutterZOffset.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+448, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 8388608,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+452, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLookLink.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+456, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwShaderMapOverride.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+460, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fabd80a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+480, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtEmitter.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+504, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathParticleColor.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+520, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a748ce7.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+536, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathParticleAlpha.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+552, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathParticleAlphaAux.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+568, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ed6436f.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+584, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_68b6b45.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+600, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathParticleScale.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+616, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b92bb9a.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+632, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathAngularPosition.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+648, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathAngularVelocity.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+664, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathOrientationVelocity.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+680, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2d865ba.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+696, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathOrientationPosition.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+712, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8c4fe0.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+728, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathOrientationAxis.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+744, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a68a7e0.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+760, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a8c5217.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+776, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathMotionCylinderRadialPos.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+792, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathMotionCylinderRadialVel.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+808, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathMotionCylinderAngleVel.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+824, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathMotionCylinderAxis.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+840, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathMotionSphereRadialPos.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+856, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathMotionSphereRadialVel.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+872, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathMotionWorldPos.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+888, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathMotionWorldVel.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+904, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathMotionWorldAcc.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+920, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathMotionRelativeCartesianPos.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+936, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathMotionRelativeCartesianVel.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+952, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathMotionRelativeCartesianAcc.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+968, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathMotionAttractorVel.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+984, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathMotionAttractorPos.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1000, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_15ea201.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1016, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_afccc6.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1032, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8dc0a2c.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1048, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFacing.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1052, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAlignment.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1056, io.SeekStart); err != nil {
		return err
	}
	if err := t.WdBoundingRadius.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1060, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a79a409.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1064, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_daaa964.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1068, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMinSize.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1072, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMaxSize.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1076, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3e0459a.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1080, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a0877a9.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1084, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_63d7722.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1088, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoVectorField.UnmarshalD4(r, &Options{
		Flags: 8388608,
		Group: 88,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1092, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecVectorFieldDim.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1104, io.SeekStart); err != nil {
		return err
	}
	if err := t.EVectorFieldAddressMode.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1108, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlVectorFieldScrollSpeed.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8f7c9c1.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cddc4fd.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1144, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathVectorFieldRotation.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_da1d404.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5a7f188.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1168, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_7ff0fb14 struct {
	Normal    DT_VECTOR4D
	Area      DT_FLOAT
	I1        DT_WORD
	I2        DT_WORD
	I3        DT_WORD
	Breakable DT_WORD
	Padding   DT_FIXEDARRAY[*DT_WORD]
}

func (t *Type_7ff0fb14) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Normal.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Area.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.I1.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+22, io.SeekStart); err != nil {
		return err
	}
	if err := t.I2.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.I3.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+26, io.SeekStart); err != nil {
		return err
	}
	if err := t.Breakable.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Padding.UnmarshalD4(r, &Options{ArrayLength: 2}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventSetWeaponVisibility struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType        DT_UINT
	DwPad         DT_UINT
	TConditions   TriggerConditions
	FGenerated    DT_INT
	Unk_6cba752   DT_INT
	Unk_e560b0b   DT_UINT
	Unk_279aa5a   DT_INT
	DwActorID     DT_UINT
	Unk_a8ee95c   DT_INT
	Unk_4bec6d2   DT_INT
	BHideSheathed DT_INT
}

func (t *TriggerEventSetWeaponVisibility) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_279aa5a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwActorID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a8ee95c.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4bec6d2.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.BHideSheathed.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SonyConsoleAwardDefinition struct {
	// Inherits ConsoleAwardDefinition
	// Inherits PolymorphicBase
	DwType          DT_UINT
	UProfileAwardId DT_UINT
	DwPad           DT_UINT
}

func (t *SonyConsoleAwardDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.UProfileAwardId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_803e808c struct {
	THeader     RequiredMessageHeader
	Unk_9104406 DT_FIXEDARRAY[*DT_SNO]
	Unk_6ef22d  DT_FIXEDARRAY[*DT_VECTOR3D]
	Unk_b8ec161 DT_FIXEDARRAY[*DT_INT]
	SnoWorld    DT_SNO
}

func (t *Type_803e808c) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9104406.UnmarshalD4(r, &Options{
		ArrayLength: 16,
		Flags:       9,
		Group:       31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6ef22d.UnmarshalD4(r, &Options{
		ArrayLength: 16,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b8ec161.UnmarshalD4(r, &Options{
		ArrayLength: 16,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+348, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+352, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_80554fed struct {
	ArNodes     DT_VARIABLEARRAY[*Type_38be9c1]
	Unk_36cc429 DT_VARIABLEARRAY[*DT_INT]
}

func (t *Type_80554fed) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArNodes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_36cc429.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimPreplayData struct {
	DwAnimPrePlayDataFlags  DT_UINT
	DwServerTimeAnimStarted DT_UINT
	DwSyncedSeed            DT_UINT
	Unk_7e38ab5             DT_OPTIONAL[*DT_FLOAT]
}

func (t *AnimPreplayData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwAnimPrePlayDataFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwServerTimeAnimStarted.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwSyncedSeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7e38ab5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConversationSpeakerSwitchNode struct {
	// Inherits ConversationScopeNode
	// Inherits ConversationTreeNode
	// Inherits PolymorphicBase
	DwType       DT_UINT
	DwPad        DT_UINT
	DwNodeID     DT_UINT
	DwNextNodeID DT_UINT
	Unk_3ef8e38  DT_UINT
	PtNextNode   DT_INT64
	DwFlags      DT_UINT
	SzComment    DT_CSTRING[*DT_BYTE]
	ArChildNodes DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	SnoCondition DT_SNO
	Unk_d8bf9e4  DT_INT
}

func (t *ConversationSpeakerSwitchNode) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNodeID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNextNodeID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3ef8e38.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtNextNode.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzComment.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArChildNodes.UnmarshalD4(r, &Options{Flags: 262145}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d8bf9e4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Hardpoint struct {
	TInfo                    HardpointInfo
	NBoneIndex               DT_INT
	BIgnoreParentOrientation DT_INT
	Transform                PRTransform
}

func (t *Hardpoint) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TInfo.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NBoneIndex.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIgnoreParentOrientation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Transform.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_80fa280c struct {
	ArNodes     DT_VARIABLEARRAY[*Type_6b03fc60]
	Unk_36cc429 DT_VARIABLEARRAY[*DT_INT]
}

func (t *Type_80fa280c) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArNodes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_36cc429.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_80fa3567 struct {
	BWrapSelection DT_INT
	Unk_a27d70b    DT_INT
	Unk_f110353    DT_INT
	Unk_72a545b    DT_INT
	Unk_3f72ed9    DT_INT
	Unk_707e4bc    DT_INT
	Unk_a321618    DT_CSTRING[*DT_BYTE]
	Unk_74f3f9     DT_CSTRING[*DT_BYTE]
}

func (t *Type_80fa3567) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.BWrapSelection.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a27d70b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f110353.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_72a545b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3f72ed9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_707e4bc.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a321618.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_74f3f9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LineSeg2D struct {
	Wr       Ray2D
	WdLength DT_FLOAT
}

func (t *LineSeg2D) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wr.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.WdLength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LineSeg3D struct {
	Wr       Ray3D
	WdLength DT_FLOAT
}

func (t *LineSeg3D) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wr.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.WdLength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Matrix3x3 struct {
	_11 DT_FLOAT
	_12 DT_FLOAT
	_13 DT_FLOAT
	_21 DT_FLOAT
	_22 DT_FLOAT
	_23 DT_FLOAT
	_31 DT_FLOAT
	_32 DT_FLOAT
	_33 DT_FLOAT
}

func (t *Matrix3x3) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t._11.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t._12.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t._13.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t._21.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t._22.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t._23.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t._31.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t._32.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t._33.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Matrix4x4 struct {
	_11 DT_FLOAT
	_12 DT_FLOAT
	_13 DT_FLOAT
	_14 DT_FLOAT
	_21 DT_FLOAT
	_22 DT_FLOAT
	_23 DT_FLOAT
	_24 DT_FLOAT
	_31 DT_FLOAT
	_32 DT_FLOAT
	_33 DT_FLOAT
	_34 DT_FLOAT
	_41 DT_FLOAT
	_42 DT_FLOAT
	_43 DT_FLOAT
	_44 DT_FLOAT
}

func (t *Matrix4x4) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t._11.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t._12.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t._13.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t._14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t._21.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t._22.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t._23.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t._24.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t._31.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t._32.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t._33.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t._34.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t._41.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t._42.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t._43.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t._44.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PeriodicBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	TInterval             DT_STRING_FORMULA
	TIntervalDelta        DT_STRING_FORMULA
	BTriggersImmediately  DT_INT
}

func (t *PeriodicBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TInterval.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TIntervalDelta.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.BTriggersImmediately.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_816e8b4c struct {
	TCapsule         CollisionCapsule
	NAppearanceIndex DT_INT
}

func (t *Type_816e8b4c) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCapsule.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.NAppearanceIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RandomNumberGenerator struct {
	DwSeed  DT_UINT
	DwCarry DT_UINT
}

func (t *RandomNumberGenerator) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwSeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwCarry.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_81807f39 struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
	Unk_7903775      DT_INT
	Unk_2c69731      DT_FLOAT
	AEndFOV          DT_FLOAT
	EBlendEasing     DT_ENUM
}

func (t *Type_81807f39) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7903775.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2c69731.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.AEndFOV.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ANNDataMessage struct {
	THeader RequiredMessageHeader
	Ann     DT_ACD_NETWORK_NAME
}

func (t *ANNDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RunTimeMaterialScalarValueEntry struct {
	TValue Type_a8e85f45
}

func (t *RunTimeMaterialScalarValueEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TValue.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CrowdControlEffects struct {
	SnoEffectGroup      DT_SNO
	DwShaderMapOverride DT_UINT
	SzLookSwitch        DT_UINT
}

func (t *CrowdControlEffects) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwShaderMapOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLookSwitch.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_82008b02 struct {
	DwSeed  DT_UINT
	DwCarry DT_UINT
}

func (t *Type_82008b02) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwSeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwCarry.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamPlayerAlly struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType        DT_UINT
	EParamType    DT_ENUM
	DwPad         DT_UINT
	BIsPlayerAlly DT_INT
}

func (t *ScriptEventParamPlayerAlly) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsPlayerAlly.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_82280ff3 struct {
	SnoPower     DT_SNO
	DwBuffDataID DT_UINT
}

func (t *Type_82280ff3) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwBuffDataID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_822e2895 struct {
	FIsFogged           DT_INT
	PathFogColor        Type_560ae4cf
	Unk_626bdd1         Type_560ae4cf
	Unk_b6d6da5         Type_cbfdd2ea
	Unk_199c08f         Type_cbfdd2ea
	PathFogStart        Type_cbfdd2ea
	Unk_74cb27e         Type_cbfdd2ea
	Unk_a788b48         Type_cbfdd2ea
	PathFogExponent     Type_cbfdd2ea
	Unk_b2aba89         Type_cbfdd2ea
	Unk_72030bc         Type_cbfdd2ea
	Unk_7204f87         Type_cbfdd2ea
	Unk_32d918a         Type_cbfdd2ea
	Unk_f95c9b0         Type_cbfdd2ea
	Unk_aef59b6         Type_560ae4cf
	Unk_f5edab3         Type_cbfdd2ea
	Unk_5014cdd         Type_cbfdd2ea
	Unk_647fc8          Type_cbfdd2ea
	Unk_a8a3bbf         DT_INT
	Unk_68b6393         Type_560ae4cf
	PathGroundFogHeight Type_cbfdd2ea
	Unk_da3c9c0         Type_cbfdd2ea
	Unk_35f6be9         Type_cbfdd2ea
	Unk_3db80f1         Type_cbfdd2ea
	Unk_95c9a3c         Type_cbfdd2ea
	Unk_49c7577         DT_FLOAT
	Unk_2ba647c         DT_FLOAT
	Unk_babc18b         Type_cbfdd2ea
	PathWind            VectorPath
}

func (t *Type_822e2895) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FIsFogged.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathFogColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_626bdd1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b6d6da5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_199c08f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathFogStart.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_74cb27e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+344, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a788b48.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+400, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathFogExponent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+456, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b2aba89.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+512, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_72030bc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+568, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7204f87.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+624, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_32d918a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+680, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f95c9b0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+736, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aef59b6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+792, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f5edab3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+848, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5014cdd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+904, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_647fc8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+960, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a8a3bbf.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+968, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_68b6393.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1024, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathGroundFogHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1080, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_da3c9c0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_35f6be9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1192, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3db80f1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1248, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_95c9a3c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1304, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49c7577.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1308, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2ba647c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1312, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_babc18b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1368, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathWind.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1424, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BlizzconSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType  DT_UINT
	BNegate DT_INT
	DwPad   DT_UINT
}

func (t *BlizzconSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ParticleLifeEvent struct {
	DwParticleIndex DT_WORD
	DwType          DT_WORD
	FlSystemTime    DT_FLOAT
}

func (t *ParticleLifeEvent) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwParticleIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSystemTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestItemCountSubcondition struct {
	// Inherits Type_d3c3637f
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType        DT_UINT
	BNegate       DT_INT
	EComparisonOp DT_ENUM
	DwPad         DT_UINT
	SnoItem       DT_SNO
	NItemCount    DT_INT
	Unk_f0998ad   DT_INT
}

func (t *QuestItemCountSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItem.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.NItemCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f0998ad.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionDamageHasFortified struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
}

func (t *PowerConditionDamageHasFortified) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_835c1731 struct {
	Coeff DT_FIXEDARRAY[*DT_VECTOR4D]
}

func (t *Type_835c1731) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Coeff.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_836c8dab struct {
	BRound      DT_INT
	Unk_a9f149e DT_INT
}

func (t *Type_836c8dab) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.BRound.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a9f149e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type InitiateGroupTransferMessage struct {
	THeader RequiredMessageHeader
}

func (t *InitiateGroupTransferMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AppearanceDefinition struct {
	TStructure            Structure
	DwFlags               DT_UINT
	PtAppearanceLooks     DT_VARIABLEARRAY[*AppearanceLook]
	PtAppearanceMaterials DT_VARIABLEARRAY[*AppearanceMaterial]
	Unk_e79217            DT_SNO
	ArLookVariantMap      DT_VARIABLEARRAY[*LookVariantMap]
	DwLookVariant         DT_UINT
	TFoliageSettings      FoliageSettings
	PtSpeedTreeWind       DT_POLYMORPHIC_VARIABLEARRAY[*SpeedTreeWindBase]
	Unk_6c10d1            DT_VARIABLEARRAY[*Type_6c048b8b]
	Unk_9a6abe3           DT_FLOAT
	FlDeformationScale    DT_FLOAT
}

func (t *AppearanceDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TStructure.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtAppearanceLooks.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtAppearanceMaterials.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e79217.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 24,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArLookVariantMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwLookVariant.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFoliageSettings.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtSpeedTreeWind.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6c10d1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a6abe3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+308, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDeformationScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+312, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WwiseExternalSource struct {
	DwSourceCookie DT_UINT
}

func (t *WwiseExternalSource) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwSourceCookie.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_841ba26f struct {
	PathRadius      Type_cbfdd2ea
	PathHeight      Type_cbfdd2ea
	PathBoxExtents  VectorPath
	EType           DT_ENUM
	SzSubObjectName DT_CHARARRAY
}

func (t *Type_841ba26f) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathBoxExtents.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzSubObjectName.UnmarshalD4(r, &Options{
		ArrayLength: 128,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventChangeLookDuration struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
	DwActorID        DT_UINT
	SnoAppearance    DT_SNO
	TLookLink        LookLink
	Unk_279aa5a      DT_INT
}

func (t *TriggerEventChangeLookDuration) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwActorID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAppearance.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 9,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLookLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_279aa5a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LocalPlayerNetEvent struct {
	USig           DT_UINT
	EEvent         DT_ENUM
	UAccountId     DT_UINT
	UGameAccountId DT_UINT
}

func (t *LocalPlayerNetEvent) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.USig.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EEvent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.UAccountId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.UGameAccountId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_8462796a struct {
	SnoScene                     DT_SNO
	IdSScene                     DT_SHARED_SERVER_DATA_ID
	VWorldPos                    DT_VECTOR3D
	TAABB                        AABB
	TDRLGCreationInfo            Type_95119e98
	SnoLevelArea                 DT_SNO
	SnoLevelAreaDungeonAlternate DT_SNO
	Unk_989f2d7                  DT_ENUM
	ArLabels                     DT_FIXEDARRAY[*DT_GBID]
	ArElevations                 DT_FIXEDARRAY[*DT_INT]
	NElevationsCount             DT_INT
}

func (t *Type_8462796a) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoScene.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 33,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSScene.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.VWorldPos.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAABB.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDRLGCreationInfo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelArea.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelAreaDungeonAlternate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_989f2d7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArLabels.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       9,
		Group:       4,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArElevations.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.NElevationsCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConvexHull struct {
	NVertexCount   DT_INT
	PtVertices     DT_VARIABLEARRAY[*DT_VECTOR3D]
	NTriangleCount DT_INT
	PtTriangles    DT_VARIABLEARRAY[*IndexedTriangle]
	NPlaneCount    DT_INT
	PtPlanes       DT_VARIABLEARRAY[*Plane]
	MInertiaTensor Matrix3x3
	WvCenterOfMass DT_VECTOR3D
	FlArea         DT_FLOAT
	FlVolume       DT_FLOAT
}

func (t *ConvexHull) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NVertexCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtVertices.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NTriangleCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtTriangles.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPlaneCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPlanes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.MInertiaTensor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.WvCenterOfMass.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlArea.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlVolume.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorWeaponData struct {
	EWeaponHitsound  DT_ENUM
	SnoExplosionSno  DT_SNO
	SnoProjectileSno DT_SNO
	Unk_9c45777      DT_SNO
}

func (t *ActorWeaponData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EWeaponHitsound.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoExplosionSno.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoProjectileSno.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c45777.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConditionalMaterialOverride struct {
	SnoCondition                   DT_SNO
	ArLookVariantMaterialOverrides DT_VARIABLEARRAY[*LookVariantMaterialOverride]
}

func (t *ConditionalMaterialOverride) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCondition.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArLookVariantMaterialOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BasicGizmoData struct {
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
}

func (t *BasicGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LabelGBID struct {
	THeader GBIDHeader
	NIndex  DT_INT
}

func (t *LabelGBID) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.NIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type FoleyMaterialTagInfo struct {
	SzTag                DT_UINT
	SnoDefaultSoundTable DT_SNO
}

func (t *FoleyMaterialTagInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzTag.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDefaultSoundTable.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LabelRule struct {
	SzRuleName   DT_CHARARRAY
	NNumToChoose DT_INT
	ArEntries    DT_VARIABLEARRAY[*LabelEntry]
}

func (t *LabelRule) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzRuleName.UnmarshalD4(r, &Options{
		ArrayLength: 128,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.NNumToChoose.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionIsInCombat struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
	ESubject DT_ENUM
}

func (t *PowerConditionIsInCombat) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type InventoryRequestQuickMoveMessage struct {
	THeader   RequiredMessageHeader
	AnnItem   DT_ACD_NETWORK_NAME
	AnnOwner  DT_ACD_NETWORK_NAME
	ESlot     DT_ENUM
	NSlotMinY DT_INT
	NSlotMaxY DT_INT
}

func (t *InventoryRequestQuickMoveMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnItem.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnOwner.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESlot.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSlotMinY.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSlotMaxY.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_857c89cd struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
	BHide       DT_INT
}

func (t *Type_857c89cd) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.BHide.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WwiseInitSoundBank struct {
	// Inherits WwiseSoundBankContentBase
	// Inherits PolymorphicBase
	DwType           DT_UINT
	DwPad            DT_UINT
	PtInitBank       DT_VARIABLEARRAY[*DT_BYTE]
	PtGameParameters DT_VARIABLEARRAY[*WwiseGameParameter]
	PtStateValues    DT_VARIABLEARRAY[*WwiseSwitchValue]
	Unk_7d0510b      DT_VARIABLEARRAY[*WwiseAudioBus]
	Unk_b0f69e7      DT_VARIABLEARRAY[*Type_e1291b50]
}

func (t *WwiseInitSoundBank) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtInitBank.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtGameParameters.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtStateValues.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7d0510b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b0f69e7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WardrobeGizmoData struct {
	// Inherits NamedGizmoData
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
	EDefaultMode                 DT_ENUM
}

func (t *WardrobeGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDefaultMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalRoadGraph struct {
	SnoWorld   DT_SNO
	ArSegments DT_VARIABLEARRAY[*GlobalRoadSegment]
	AabbBounds AABB
	DwRows     DT_UINT
	DwColumns  DT_UINT
	ArGrid     DT_VARIABLEARRAY[*Type_31826a49]
}

func (t *GlobalRoadGraph) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSegments.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.AabbBounds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwRows.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwColumns.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArGrid.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScreenStaticCamps struct {
	SnoTerritory DT_SNO
	ArPoints     DT_VARIABLEARRAY[*DT_VECTOR2D]
}

func (t *ScreenStaticCamps) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTerritory.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 92,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPoints.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WorldSetRemainingReviveCountMessage struct {
	THeader               RequiredMessageHeader
	IdSWorld              DT_SHARED_SERVER_DATA_ID
	NRemainingReviveCount DT_INT
}

func (t *WorldSetRemainingReviveCountMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSWorld.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NRemainingReviveCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_85f15dc7 struct {
	THeader     RequiredMessageHeader
	Unk_dce541c DT_UINT
	SnoPower    DT_SNO
	DwRank      DT_UINT
}

func (t *Type_85f15dc7) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwRank.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnHitEffectTriggeredBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnHitEffectTriggeredBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_8636d92f struct {
	TTexture SerialDataInfo
}

func (t *Type_8636d92f) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTexture.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SpeakerActorOverride struct {
	SnoActor DT_SNO
}

func (t *SpeakerActorOverride) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionHasItemEquipped struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
	ESubject DT_ENUM
	SnoItem  DT_SNO
}

func (t *PowerConditionHasItemEquipped) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItem.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SchedulerGlobalUniqueCategory_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*SchedulerGlobalUniqueCategory]
}

func (t *SchedulerGlobalUniqueCategory_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerIndexMessage struct {
	THeader     RequiredMessageHeader
	Unk_dce541c DT_UINT
}

func (t *PlayerIndexMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DRLGNodeLink struct {
	DwDestNodeId DT_UINT
}

func (t *DRLGNodeLink) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwDestNodeId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_87385a6d struct {
	SzTarget DT_CSTRING[*DT_BYTE]
	ArTracks DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *Type_87385a6d) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArTracks.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AssignArsenalSkillSlotMessage struct {
	THeader  RequiredMessageHeader
	SnoPower DT_SNO
	NSlot    DT_INT
}

func (t *AssignArsenalSkillSlotMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSlot.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DesignerVariablePayload struct {
	NPayloadValue DT_INT
	NResetValue   DT_INT
}

func (t *DesignerVariablePayload) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPayloadValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NResetValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ItemTypeDefinition struct {
	DwFlags         DT_UINT
	EPackSlot       DT_ENUM
	ArBodySlots     DT_VARIABLEARRAY[*DT_ENUM]
	ArItemLabels    DT_VARIABLEARRAY[*DT_ENUM]
	EWeaponClass    DT_ENUM
	Unk_18ee4ac     DT_ENUM
	Unk_b2500f1     DT_FLOAT
	Unk_4811bbe     DT_FLOAT
	Unk_cc5ef53     DT_FLOAT
	Unk_9981e08     DT_INT
	Unk_9e2e500     DT_INT
	Unk_69d0449     DT_INT
	Unk_f03343a     DT_INT
	Unk_9d54616     DT_INT
	Unk_b5a1c2b     DT_INT
	DwItemLabelMask DT_FIXEDARRAY[*DT_UINT]
	Unk_60c6aca     DT_VARIABLEARRAY[*Type_a5df0191]
	Unk_4ec8d93     DT_SNO
}

func (t *ItemTypeDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPackSlot.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArBodySlots.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArItemLabels.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.EWeaponClass.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_18ee4ac.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b2500f1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4811bbe.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cc5ef53.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9981e08.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9e2e500.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_69d0449.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f03343a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9d54616.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b5a1c2b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwItemLabelMask.UnmarshalD4(r, &Options{ArrayLength: 2}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_60c6aca.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4ec8d93.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 27,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_87a7a74d struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType  DT_UINT
	BNegate DT_INT
	DwPad   DT_UINT
}

func (t *Type_87a7a74d) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type FloatDataMessage struct {
	THeader RequiredMessageHeader
	FlData  DT_FLOAT
}

func (t *FloatDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ACDChangeGBHandleMessage struct {
	THeader RequiredMessageHeader
	Ann     DT_ACD_NETWORK_NAME
	HGB     GBHandle
}

func (t *ACDChangeGBHandleMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.HGB.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MailRetrieveMessage struct {
	THeader RequiredMessageHeader
	IdMail  Type_f5ac91bb
}

func (t *MailRetrieveMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdMail.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SceneData struct {
	PtCollisionHeightFields DT_VARIABLEARRAY[*CollisionHeightField]
	Unk_b3a0ae7             DT_INT
	PtSurfaceOctree         DT_VARIABLEARRAY[*Octree]
	PtSurfaceGrid           DT_VARIABLEARRAY[*SurfaceGrid]
	PtFoliageGrid           DT_VARIABLEARRAY[*FoliageGrid]
}

func (t *SceneData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtCollisionHeightFields.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b3a0ae7.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtSurfaceOctree.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtSurfaceGrid.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtFoliageGrid.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LevelScalingData struct {
	NLevelScalingMin             DT_INT
	NLevelScalingMatchUntilLevel DT_INT
	NLevelScalingDelta           DT_INT
	NLevelScalingMax             DT_INT
}

func (t *LevelScalingData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLevelScalingMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLevelScalingMatchUntilLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLevelScalingDelta.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLevelScalingMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MailRetrieveResponseMessage struct {
	THeader RequiredMessageHeader
	IdMail  Type_f5ac91bb
	IdErr   DT_INT
}

func (t *MailRetrieveResponseMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdMail.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdErr.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorGroupData struct {
	THeader GBIDHeader
}

func (t *ActorGroupData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TimeSinceEventSubcondition struct {
	// Inherits Type_d3c3637f
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType        DT_UINT
	BNegate       DT_INT
	EComparisonOp DT_ENUM
	DwPad         DT_UINT
	ETimeEvent    DT_ENUM
	FlValue       DT_FLOAT
	Unk_c7b2b18   DT_ENUM
}

func (t *TimeSinceEventSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETimeEvent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c7b2b18.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LoreMessage struct {
	THeader RequiredMessageHeader
	SnoLore DT_SNO
}

func (t *LoreMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLore.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 59,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_88c1160d struct {
	EIndices DT_FIXEDARRAY[*DT_ENUM]
}

func (t *Type_88c1160d) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EIndices.UnmarshalD4(r, &Options{
		ArrayLength: 8,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActiveSkillSavedData struct {
	SnoSkill DT_SNO
}

func (t *ActiveSkillSavedData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSkill.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_894bd255 struct {
	RgbaDebugColor DT_RGBACOLOR
	SnoTexPattern  DT_SNO
	RgbaColor      DT_RGBACOLOR
	Unk_1626611    DT_FLOAT
	Unk_daf4312    DT_FLOAT
	Unk_74b9406    DT_FLOAT
	Unk_9c8a384    DT_RGBACOLOR
	Unk_b6065b     DT_FLOAT
	Unk_e41f4ef    DT_FLOAT
}

func (t *Type_894bd255) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaDebugColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTexPattern.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1626611.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_daf4312.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_74b9406.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8a384.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b6065b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e41f4ef.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerCallbackBase struct {
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	BCouldHaveRagdolled   DT_INT
}

func (t *PowerCallbackBase) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCouldHaveRagdolled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ProcChanceBuffCallbackBase struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	BAlwaysProcs          DT_INT
	DwPadding             DT_UINT
	TProcChance           DT_STRING_FORMULA
}

func (t *ProcChanceBuffCallbackBase) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.BAlwaysProcs.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPadding.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.TProcChance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameTestingMonsterSamplingStartMessage struct {
	THeader      RequiredMessageHeader
	SzMarkerName DT_CHARARRAY
	SzGroupType  DT_CHARARRAY
	SnoWorld     DT_SNO
	SnoMonster   DT_SNO
	SnoAffix     DT_SNO
	UCount       DT_UINT
}

func (t *GameTestingMonsterSamplingStartMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzMarkerName.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzGroupType.UnmarshalD4(r, &Options{
		ArrayLength: 16,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMonster.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAffix.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 107,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.UCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamGameTime struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType            DT_UINT
	EParamType        DT_ENUM
	DwPad             DT_UINT
	EFilterInequality DT_ENUM
	FlTime            DT_FLOAT
}

func (t *ScriptEventParamGameTime) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EFilterInequality.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Int64DataMessage struct {
	THeader RequiredMessageHeader
	NData   DT_INT64
}

func (t *Int64DataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIItemTagStyle struct {
	// Inherits UIButtonStyle
	// Inherits UITextStyle
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	TFont                     UIControlFont
	Unk_4741819               DT_TAGMAP[*DT_ENUM]
	TIcon                     UIControlIcon
	TClickSounds              Type_98c23c41
	Unk_10f81f0               DT_TAGMAP[*DT_ENUM]
}

func (t *UIItemTagStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFont.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4741819.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.TIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.TClickSounds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_10f81f0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimPayloadData struct {
	PtBoneNames         DT_VARIABLEARRAY[*BoneName]
	Unk_a9ead38         DT_VARIABLEARRAY[*DT_FLOAT]
	Unk_8c9e18f         DT_VARIABLEARRAY[*DT_FLOAT]
	PwvNonlinearOffset  DT_VARIABLEARRAY[*DT_VECTOR3D]
	Unk_5cd81c8         DT_VARIABLEARRAY[*DT_VECTOR3D]
	Unk_fa7ecfb         DT_VARIABLEARRAY[*DT_VECTOR3D]
	Unk_28a8e7b         DT_VARIABLEARRAY[*DT_FLOAT]
	Unk_772730e         DT_VARIABLEARRAY[*DT_FLOAT]
	Unk_7c60205         DT_VARIABLEARRAY[*DT_FLOAT]
	PtDepthOfField      DT_VARIABLEARRAY[*AnimDepthOfField]
	PtTranslationCurves DT_VARIABLEARRAY[*TranslationCurve]
	PtRotationCurves    DT_VARIABLEARRAY[*RotationCurve]
	PtScaleCurves       DT_VARIABLEARRAY[*ScaleCurve]
}

func (t *AnimPayloadData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtBoneNames.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a9ead38.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8c9e18f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.PwvNonlinearOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5cd81c8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fa7ecfb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_28a8e7b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_772730e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7c60205.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtDepthOfField.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtTranslationCurves.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtRotationCurves.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtScaleCurves.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorAIData struct {
	PtAIBroadcasts DT_VARIABLEARRAY[*AIBroadcast]
	GbidAIPropType DT_GBID
	Unk_af0baa5    DT_INT
	Unk_766f08     DT_VARIABLEARRAY[*Type_674e5442]
}

func (t *ActorAIData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtAIBroadcasts.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidAIPropType.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 21,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af0baa5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_766f08.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_89efac1a struct {
	FlScrollerInitialDelay DT_FLOAT
	FlScrollerEndDelay     DT_FLOAT
	FlScrollerRate         DT_FLOAT
	BScrollerHorizontal    DT_INT
	BScrollerRepeat        DT_INT
}

func (t *Type_89efac1a) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlScrollerInitialDelay.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlScrollerEndDelay.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlScrollerRate.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.BScrollerHorizontal.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BScrollerRepeat.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_8a12bdb7 struct {
	Unk_19301ba DT_UINT
	Unk_36c0ef4 DT_UINT
}

func (t *Type_8a12bdb7) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_19301ba.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_36c0ef4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PostFXParams struct {
	FlFilterOffset DT_FIXEDARRAY[*DT_FLOAT]
	FlFilterCoeff  DT_FIXEDARRAY[*DT_FLOAT]
}

func (t *PostFXParams) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFilterOffset.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFilterCoeff.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LevelAreaTagsEntry struct {
	THeader GBIDHeader
}

func (t *LevelAreaTagsEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIListBoxStyle struct {
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	TClickSounds              Type_98c23c41
	TFont                     UIControlFont
	Unk_59693f9               DT_TAGMAP[*DT_ENUM]
}

func (t *UIListBoxStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TClickSounds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFont.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_59693f9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerClassSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType       DT_UINT
	BNegate      DT_INT
	DwPad        DT_UINT
	FPlayerClass DT_FIXEDARRAY[*DT_INT]
}

func (t *PlayerClassSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FPlayerClass.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnGizmoOperatedBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnGizmoOperatedBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionDamageHasVulnerable struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
}

func (t *PowerConditionDamageHasVulnerable) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_8aef87e7 struct {
	Height      DT_FLOAT
	Material    DT_WORD
	GameFlags   DT_BYTE
	Unk_38adf8e DT_BYTE
}

func (t *Type_8aef87e7) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Height.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Material.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+6, io.SeekStart); err != nil {
		return err
	}
	if err := t.GameFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+7, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_38adf8e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AIBroadcast struct {
	SnoAIState   DT_SNO
	FlRadius     DT_FLOAT
	SnoCondition DT_SNO
}

func (t *AIBroadcast) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAIState.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 4,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_8b32a937 struct {
	Transform   PRSTransform
	AabbBounds  AABB
	Unk_d094b9a DT_ENUM
	Unk_334eb2d DT_INT
	DwFlags     DT_UINT
}

func (t *Type_8b32a937) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Transform.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.AabbBounds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d094b9a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_334eb2d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UnassignSkillMessage struct {
	THeader      RequiredMessageHeader
	NSlot        DT_INT
	NEnchantSlot DT_INT
	BIsEnchant   DT_INT
}

func (t *UnassignSkillMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSlot.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NEnchantSlot.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsEnchant.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type VoiceActorEntry_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*VoiceActorEntry]
}

func (t *VoiceActorEntry_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ReputationDefinition struct {
	DwFlags    DT_UINT
	DwMaxValue DT_UINT
}

func (t *ReputationDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMaxValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type IntDataMessage struct {
	THeader RequiredMessageHeader
	NData   DT_INT
}

func (t *IntDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RunTimeMaterialVectorValueEntry struct {
	TValue Type_bbef2266
}

func (t *RunTimeMaterialVectorValueEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TValue.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GroupTransferQueryMessage struct {
	THeader        RequiredMessageHeader
	Unk_ad293f5    DT_UINT
	EQueryType     DT_ENUM
	SnoDestination DT_SNO
}

func (t *GroupTransferQueryMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ad293f5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.EQueryType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDestination.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionHasSkillTag struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType      DT_UINT
	BInverse    DT_INT
	DwPad       DT_UINT
	ArSkillTags DT_VARIABLEARRAY[*DT_GBID]
}

func (t *PowerConditionHasSkillTag) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSkillTags.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 56,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SkillEnchantSavedData struct {
	SnoSkill DT_SNO
}

func (t *SkillEnchantSavedData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSkill.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_8c33d728 struct {
	SnoItem DT_SNO
	SnoDye  DT_SNO
}

func (t *Type_8c33d728) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItem.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDye.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 122,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CampaignArc struct {
	DwID          DT_UINT
	DwFlags       DT_UINT
	SnoReward     DT_SNO
	ArQuestChains DT_VARIABLEARRAY[*CampaignChain]
	Unk_1cc41e6   DT_VARIABLEARRAY[*Type_eda64360]
	Unk_7c3761f   DT_VARIABLEARRAY[*Type_94666cb9]
	Unk_c2e08fe   DT_UINT
	Unk_8705b44   DT_UINT
}

func (t *CampaignArc) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoReward.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArQuestChains.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1cc41e6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7c3761f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c2e08fe.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8705b44.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ReputationSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType  DT_UINT
	BNegate DT_INT
	DwPad   DT_UINT
	TPair   ReputationValuePair
}

func (t *ReputationSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPair.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventShowWarpUI struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
	SnoUI       DT_SNO
}

func (t *TriggerEventShowWarpUI) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoUI.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 46,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameTestingSmokeSamplingStartMessage struct {
	THeader      RequiredMessageHeader
	SnoSubzone   DT_SNO
	UPlayerCount DT_UINT
}

func (t *GameTestingSmokeSamplingStartMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSubzone.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.UPlayerCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ACDChangeActorMessage struct {
	THeader  RequiredMessageHeader
	Ann      DT_ACD_NETWORK_NAME
	SnoActor DT_SNO
}

func (t *ACDChangeActorMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_8d06aec1 struct {
	InvMass DT_VECTOR4D
	Params  DT_VECTOR4D
	Scale   DT_VECTOR4D
	I1      DT_WORD
	I2      DT_WORD
	I3      DT_WORD
	I4      DT_WORD
	Padding DT_FIXEDARRAY[*DT_WORD]
}

func (t *Type_8d06aec1) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.InvMass.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Params.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Scale.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.I1.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+50, io.SeekStart); err != nil {
		return err
	}
	if err := t.I2.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.I3.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+54, io.SeekStart); err != nil {
		return err
	}
	if err := t.I4.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Padding.UnmarshalD4(r, &Options{ArrayLength: 4}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_8d06beff struct {
	THeader        RequiredMessageHeader
	SnoAchievement DT_SNO
}

func (t *Type_8d06beff) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAchievement.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 99,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_8d0e9d57 struct{}

func (t *Type_8d0e9d57) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+1, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LevelScalingDefinition struct {
	NLevel                  DT_INT
	FlHPScalar              DT_FLOAT
	FlXPScalar              DT_FLOAT
	Unk_9592c2b             DT_FLOAT
	Unk_9b9d09c             DT_INT
	NItemPowerDelta         DT_INT
	NBaseItemPower          DT_INT
	Unk_3d92381             DT_INT
	Unk_ba4504c             DT_INT
	Unk_5f945b7             DT_FLOAT
	Unk_d970377             DT_FIXEDARRAY[*DT_FLOAT]
	Unk_f48a6a1             DT_FIXEDARRAY[*DT_FLOAT]
	Unk_16d37a5             DT_FIXEDARRAY[*DT_FLOAT]
	Unk_a2ccfe              DT_FIXEDARRAY[*DT_FLOAT]
	Unk_5addb48             DT_FIXEDARRAY[*DT_FLOAT]
	Unk_21af36c             DT_FIXEDARRAY[*DT_FLOAT]
	Unk_4148916             DT_FIXEDARRAY[*DT_FLOAT]
	Unk_75141dd             DT_FLOAT
	FlClassBaseDamageScalar DT_FIXEDARRAY[*DT_FLOAT]
}

func (t *LevelScalingDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHPScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlXPScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9592c2b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b9d09c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NItemPowerDelta.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NBaseItemPower.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3d92381.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ba4504c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5f945b7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d970377.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f48a6a1.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_16d37a5.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a2ccfe.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5addb48.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_21af36c.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4148916.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_75141dd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlClassBaseDamageScalar.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalCustomizationData struct {
	// Inherits GlobalBase
	// Inherits PolymorphicBase
	DwType                  DT_UINT
	DwPad                   DT_UINT
	ArInitialDyes           DT_VARIABLEARRAY[*DT_SNO]
	ArFaceChoices           DT_VARIABLEARRAY[*DT_SNO]
	ArHairStyleChoices      DT_VARIABLEARRAY[*DT_SNO]
	ArFacialHairChoices     DT_VARIABLEARRAY[*DT_SNO]
	ArHairColorChoices      DT_VARIABLEARRAY[*DT_SNO]
	ArMarkingShapeChoices   DT_VARIABLEARRAY[*DT_SNO]
	ArMarkingColorChoices   DT_VARIABLEARRAY[*DT_SNO]
	ArJewelryChoices        DT_VARIABLEARRAY[*DT_SNO]
	ArEyeColorChoices       DT_VARIABLEARRAY[*DT_SNO]
	ArMakeupChoices         DT_VARIABLEARRAY[*DT_SNO]
	SnoFallbackFace         DT_SNO
	SnoFallbackHairStyle    DT_SNO
	SnoFallbackHairColor    DT_SNO
	SnoFallbackEyeColor     DT_SNO
	SnoFallbackMarkingColor DT_SNO
	NLastAllocatedRewardId  DT_UINT
}

func (t *GlobalCustomizationData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArInitialDyes.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 122,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArFaceChoices.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 140,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArHairStyleChoices.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 138,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArFacialHairChoices.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 139,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArHairColorChoices.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 134,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArMarkingShapeChoices.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 115,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArMarkingColorChoices.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 133,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArJewelryChoices.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 119,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArEyeColorChoices.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 131,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArMakeupChoices.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 132,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFallbackFace.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 140,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFallbackHairStyle.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 138,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFallbackHairColor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 134,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFallbackEyeColor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 131,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFallbackMarkingColor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 133,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLastAllocatedRewardId.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayAnimationMessageSpec struct {
	DwDuration         DT_UINT
	BForever           DT_INT
	SnoAnim            DT_SNO
	SnoPowerAnimKey    DT_SNO
	EWeaponClass       DT_INT
	NPermutationIndex  DT_INT
	FlAnimSpeedScale   DT_FLOAT
	HFluidObjectsImage DT_OPTIONAL[*DT_UINT]
}

func (t *PlayAnimationMessageSpec) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.BForever.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAnim.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 6,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerAnimKey.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EWeaponClass.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPermutationIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAnimSpeedScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.HFluidObjectsImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerProximityData struct {
	PtProxData                DT_POLYMORPHIC_VARIABLEARRAY[*ProximityDataBase]
	Unk_d871dde               DT_RANGE[*DT_FLOAT]
	FProximityDetectorPulse   DT_INT
	FProximityDetectorEffect  DT_INT
	FProximityDetectorOneShot DT_INT
	Unk_3c08644               DT_INT
	Unk_4a90632               DT_INT
	ETriggerBehavior          DT_ENUM
	SnoQuest                  DT_SNO
	SnoConversation           DT_SNO
}

func (t *TriggerProximityData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtProxData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d871dde.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FProximityDetectorPulse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FProximityDetectorEffect.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.FProximityDetectorOneShot.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3c08644.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4a90632.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETriggerBehavior.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoConversation.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 12,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PetType_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*PetType]
}

func (t *PetType_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventShowCaptionUI struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
	SnoUI       DT_SNO
	Unk_6316fe8 DT_TAGMAP[*DT_ENUM]
}

func (t *TriggerEventShowCaptionUI) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoUI.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 46,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6316fe8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MaterialBoolValueDefinition struct {
	// Inherits DefaultMaterialValueDefinition
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
	VValue DT_VECTOR4D
}

func (t *MaterialBoolValueDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.VValue.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AttributeFormulaEntry_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*AttributeFormulaEntry]
}

func (t *AttributeFormulaEntry_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameFoundForTransferMessage struct {
	THeader     RequiredMessageHeader
	IsDungeon   DT_INT
	Unk_70b9617 DT_INT
}

func (t *GameFoundForTransferMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IsDungeon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_70b9617.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerDWordDataMessage struct {
	THeader     RequiredMessageHeader
	DwData      DT_UINT
	Unk_dce541c DT_UINT
}

func (t *PlayerDWordDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WindowPieces struct {
	// Inherits WindowPiecesBase
	// Inherits PolymorphicBase
	DwType       DT_UINT
	DwPad        DT_UINT
	FlImageScale DT_FLOAT
	NPadding     DT_UINT
	HBkgrnd      DT_UINT
	HBorder      DT_UINT
	HCorner      DT_UINT
}

func (t *WindowPieces) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlImageScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPadding.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.HBkgrnd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.HBorder.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.HCorner.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConsoleEvent struct{}

func (t *ConsoleEvent) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+1, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerHealthSubcondition struct {
	// Inherits Type_d3c3637f
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType        DT_UINT
	BNegate       DT_INT
	EComparisonOp DT_ENUM
	DwPad         DT_UINT
	Unk_6ea5eed   DT_FLOAT
}

func (t *PlayerHealthSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6ea5eed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameTestingWorldEventSamplingStartMessage struct {
	THeader      RequiredMessageHeader
	SzMarkerName DT_CHARARRAY
	SnoSubzone   DT_SNO
	SnoQuest     DT_SNO
}

func (t *GameTestingWorldEventSamplingStartMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzMarkerName.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSubzone.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LookLink struct {
	DwLookHash DT_UINT
}

func (t *LookLink) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwLookHash.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerAudioVolumeData struct {
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	SnoContext  DT_SNO
	Unk_a3e2a60 DT_ENUM
	Unk_d415903 DT_SNO
}

func (t *MarkerAudioVolumeData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoContext.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 93,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a3e2a60.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d415903.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerDoorGizmoData struct {
	FDoorOpen     DT_INT
	Unk_ec10912   DT_INT
	DwPrefixValue DT_INT
}

func (t *MarkerDoorGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDoorOpen.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ec10912.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPrefixValue.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerIsMaxLevelSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType  DT_UINT
	BNegate DT_INT
	DwPad   DT_UINT
}

func (t *PlayerIsMaxLevelSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type FlippyMessage struct {
	THeader           RequiredMessageHeader
	AnnLauncher       DT_ACD_NETWORK_NAME
	SnoFlippyParticle DT_SNO
	SnoActorLoot      DT_SNO
	WpSource          DT_VECTOR3D
	WpDest            DT_VECTOR3D
	Unk_18f36c0       DT_INT
	Unk_c00b36a       DT_ENUM
}

func (t *FlippyMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnLauncher.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFlippyParticle.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 27,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActorLoot.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpSource.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpDest.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_18f36c0.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c00b36a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NullProximityData struct {
	// Inherits ProximityDataBase
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
}

func (t *NullProximityData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type VertexDensitySettings struct {
	Unk_9c94172 DT_FLOAT
}

func (t *VertexDensitySettings) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c94172.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GBIDDataMessage struct {
	THeader  RequiredMessageHeader
	GbidData DT_GBID
}

func (t *GBIDDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DecalTemplate struct {
	SzName   DT_CSTRING[*DT_BYTE]
	SnoDecal DT_SNO
}

func (t *DecalTemplate) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDecal.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 27,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerHasFollowerSubcondition struct {
	// Inherits Type_d3c3637f
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType        DT_UINT
	BNegate       DT_INT
	EComparisonOp DT_ENUM
	DwPad         DT_UINT
	NNumFollowers DT_INT
}

func (t *PlayerHasFollowerSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.NNumFollowers.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_8fccfaf2 struct {
	TValueMin DT_UINT
	TValueMax DT_UINT
	TTime     DT_FLOAT
}

func (t *Type_8fccfaf2) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TValueMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TValueMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayNonPositionalSoundMessage struct {
	THeader  RequiredMessageHeader
	SnoSound DT_SNO
}

func (t *PlayNonPositionalSoundMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_904ab211 struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType         DT_UINT
	BInverse       DT_INT
	DwPad          DT_UINT
	SzVariableName DT_UINT
	FlValue        DT_FLOAT
}

func (t *Type_904ab211) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzVariableName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorGroup struct {
	UHash  DT_UINT
	SzName DT_CHARARRAY
}

func (t *ActorGroup) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.UHash.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimTreeDefinition struct {
	DwMachineTime DT_UINT
	DwFlags       DT_UINT
	PtLeaf        DT_VARIABLEARRAY[*AnimTreeLeaf]
	PtNode        DT_VARIABLEARRAY[*AnimTreeNode]
	PtSyncGroup   DT_VARIABLEARRAY[*DT_INT]
	PtSyncGroups  DT_VARIABLEARRAY[*AnimSyncGroup]
	DwRootNode    DT_UINT
	DwNextID      DT_UINT
	Unk_a7fd7f7   DT_ENUM
}

func (t *AnimTreeDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMachineTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtLeaf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtNode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtSyncGroup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtSyncGroups.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwRootNode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNextID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a7fd7f7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SavedTransmog struct {
	BUnlocked       DT_INT
	ArTransmogSlots DT_FIXEDARRAY[*TransmogSlot]
}

func (t *SavedTransmog) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.BUnlocked.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArTransmogSlots.UnmarshalD4(r, &Options{
		ArrayLength: 15,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_9109ba33 struct {
	Unk_d80ac35 DT_INT
	Unk_2707579 DT_VARIABLEARRAY[*DT_INT]
}

func (t *Type_9109ba33) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d80ac35.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2707579.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnRetreatCompleteCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnRetreatCompleteCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionOnChance struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
	TChance  DT_STRING_FORMULA
	ESubject DT_ENUM
}

func (t *PowerConditionOnChance) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TChance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EnchantAffixChoice struct {
	SnoAffix DT_SNO
	DwSeed   DT_UINT
}

func (t *EnchantAffixChoice) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAffix.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 104,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwSeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NPCComponentEntry struct {
	BAny              DT_INT
	PtValidComponents DT_VARIABLEARRAY[*ValidComponent]
}

func (t *NPCComponentEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.BAny.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtValidComponents.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PetDetachMessage struct {
	THeader             RequiredMessageHeader
	AnnPet              DT_ACD_NETWORK_NAME
	BDisplayChatMessage DT_INT
	Unk_70bf7e7         DT_UINT
}

func (t *PetDetachMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnPet.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.BDisplayChatMessage.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_70bf7e7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NPCComponentGroup struct {
	SName        DT_UINT
	ArComponents DT_FIXEDARRAY[*DT_UINT]
	TColorSet    NPCColorSet
}

func (t *NPCComponentGroup) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArComponents.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.TColorSet.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EncounterDefinition struct {
	SnoSymbol DT_SNO
}

func (t *EncounterDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSymbol.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_92704e7b struct {
	NTreeFolderIndent  DT_INT
	NTreeFolderSpacing DT_INT
}

func (t *Type_92704e7b) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NTreeFolderIndent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NTreeFolderSpacing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DungeonSpawningPoolEntry struct {
	THeader GBIDHeader
}

func (t *DungeonSpawningPoolEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ReverbDefinition struct {
	TAuxBus          WwiseName
	Unk_836cb29      DT_FLOAT
	PtStateValues    DT_VARIABLEARRAY[*WwiseSwitchValue]
	PtSwitchValues   DT_VARIABLEARRAY[*WwiseSwitchValue]
	PtGameParameters DT_VARIABLEARRAY[*WwiseGameParameter]
}

func (t *ReverbDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAuxBus.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_836cb29.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtStateValues.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtSwitchValues.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtGameParameters.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ParagonGlyphExperience_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*ParagonGlyphExperience]
}

func (t *ParagonGlyphExperience_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_93828ae3 struct {
	SnoQuest        DT_SNO
	NLastOccurrence DT_INT
}

func (t *Type_93828ae3) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLastOccurrence.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OctreeCube struct {
	WpOrigin DT_VECTOR3D
	WdSize   DT_FLOAT
}

func (t *OctreeCube) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpOrigin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.WdSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OctreeLeaf struct {
	NPrimitiveIndex DT_INT
	NPrimitiveCount DT_INT
}

func (t *OctreeLeaf) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPrimitiveIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPrimitiveCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OctreeNode struct {
	PdwChildren DT_FIXEDARRAY[*DT_UINT]
}

func (t *OctreeNode) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PdwChildren.UnmarshalD4(r, &Options{
		ArrayLength: 8,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalIntensityLevels struct {
	// Inherits GlobalBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	ArParams DT_VARIABLEARRAY[*IntensityParam]
}

func (t *GlobalIntensityLevels) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArParams.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PersistentEventUpdateMessage struct {
	THeader                RequiredMessageHeader
	SnoWorld               DT_SNO
	SnoSubzone             DT_SNO
	SnoQuest               DT_SNO
	WpLocation             DT_VECTOR3D
	SnoMarkerSet           DT_SNO
	NMarkerID              DT_INT
	DwStartTime            DT_INT64
	DwEndTime              DT_INT64
	DwInstanceID           DT_UINT
	GbidSubzoneModifierTag DT_GBID
}

func (t *PersistentEventUpdateMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSubzone.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpLocation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMarkerSet.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 24,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMarkerID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwStartTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwEndTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwInstanceID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidSubzoneModifierTag.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 60,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BroadcastTextMessage struct {
	THeader RequiredMessageHeader
	SzMsg   DT_CHARARRAY
}

func (t *BroadcastTextMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzMsg.UnmarshalD4(r, &Options{
		ArrayLength: 1024,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1040, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_94666cb9 struct {
	DwID         DT_UINT
	SnoCondition DT_SNO
}

func (t *Type_94666cb9) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCondition.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkingShapeDefinition struct {
	EClassRestriction  DT_ENUM
	FlEmissiveStrength DT_FLOAT
	HIconImage         DT_UINT
	SnoMaskFace        DT_SNO
	SnoMaskBody        DT_SNO
	SnoDefaultColor    DT_SNO
}

func (t *MarkingShapeDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EClassRestriction.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlEmissiveStrength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIconImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMaskFace.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMaskBody.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDefaultColor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 133,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MaxKeyedDungeonCompletedSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType  DT_UINT
	BNegate DT_INT
	DwPad   DT_UINT
	NValue  DT_INT
}

func (t *MaxKeyedDungeonCompletedSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_95119e98 struct {
	NBatchId      DT_INT
	DwTilePosHash DT_UINT
	ETileType     DT_ENUM
	DwNodeId      DT_UINT
	DwGroupId     DT_UINT
	DwFlags       DT_UINT
}

func (t *Type_95119e98) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NBatchId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTilePosHash.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETileType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNodeId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwGroupId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_95269030 struct {
	FlDist       DT_FLOAT
	NSlots       DT_INT
	Unk_13fdbf   DT_INT
	SLayer       DT_UINT
	Unk_8680393  DT_INT
	Unk_8337d1e  DT_INT
	Unk_395f1b4  DT_INT
	TValidWindow DT_RANGE[*DT_FLOAT]
	Unk_6ec4d4   DT_INT
	Unk_1281fc2  DT_FLOAT
	Unk_6fb4c8e  DT_FLOAT
	Unk_2392c67  DT_FLOAT
}

func (t *Type_95269030) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDist.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSlots.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_13fdbf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SLayer.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8680393.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8337d1e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_395f1b4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.TValidWindow.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6ec4d4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1281fc2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6fb4c8e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2392c67.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_954deb71 struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *Type_954deb71) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerClassCoreStatBenefitEntry struct {
	Unk_f2e7542          DT_ENUM
	FlContributionScalar DT_FLOAT
	EBenefitCondition    DT_ENUM
	Unk_aae71b4          DT_UINT
}

func (t *PlayerClassCoreStatBenefitEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f2e7542.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlContributionScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBenefitCondition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aae71b4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestCallbackSubcondition struct {
	// Inherits QuestSubconditionBase
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType       DT_UINT
	BNegate      DT_INT
	SnoQuest     DT_SNO
	DwPad        DT_UINT
	NStepUID     DT_INT
	NCallbackUID DT_UINT
	EComp        DT_ENUM
	NCount       DT_UINT
}

func (t *QuestCallbackSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.NStepUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCallbackUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SceneChunk struct {
	Snoname    DT_SNO
	Transform  PRTransform
	TSceneSpec SceneSpecification
}

func (t *SceneChunk) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Snoname.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 33,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Transform.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSceneSpec.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SceneDefinition struct {
	DwFlags         DT_UINT
	AabbBounds      AABB
	AabbLayerBounds AABB
	FlGridSize      DT_FLOAT
	ArLayers        DT_VARIABLEARRAY[*DT_SNO]
	TLookLink       LookLink
	Unk_f60a9cd     DT_VARIABLEARRAY[*Type_9109ba33]
	SnoAppearance   DT_SNO
	SnoAudioContext DT_SNO
	FlTileX         DT_FLOAT
	FlTileY         DT_FLOAT
	PtAIPathData    DT_VARIABLEARRAY[*AIPathData]
	TLevelAreaGrid  Type_ff4098b9
	EDRLGTileType   DT_ENUM
	Unk_29b7731     Type_ff4098b9
	TFogMask        FogMask
}

func (t *SceneDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.AabbBounds.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.AabbLayerBounds.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGridSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArLayers.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 24,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLookLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f60a9cd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAppearance.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 9,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAudioContext.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 93,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTileX.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTileY.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtAIPathData.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLevelAreaGrid.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDRLGTileType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_29b7731.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFogMask.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OperateWorldTierSelectMessage struct {
	THeader  RequiredMessageHeader
	AnnGizmo DT_ACD_NETWORK_NAME
	BSuccess DT_INT
}

func (t *OperateWorldTierSelectMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnGizmo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.BSuccess.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HealthPotionData struct {
	DwID           DT_UINT
	NRequiredLevel DT_INT
	Unk_96f5779    DT_FLOAT
	Unk_fe56814    DT_FLOAT
	Unk_5cc36f7    DT_FLOAT
	Unk_9a29462    DT_FLOAT
	SnoPotionItem  DT_SNO
	Unk_c056f0     DT_UINT
	Unk_6418727    DT_UINT
	Unk_d56915b    DT_UINT
	Unk_4679d19    DT_UINT
	Unk_502de9d    DT_UINT
}

func (t *HealthPotionData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NRequiredLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_96f5779.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fe56814.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5cc36f7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a29462.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPotionItem.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c056f0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6418727.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d56915b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4679d19.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_502de9d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MailDeleteResponseMessage struct {
	THeader RequiredMessageHeader
	IdMail  Type_f5ac91bb
	IdErr   DT_INT
}

func (t *MailDeleteResponseMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdMail.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdErr.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TrickleMessage struct {
	THeader                       RequiredMessageHeader
	Ann                           DT_ACD_NETWORK_NAME
	SnoActor                      DT_SNO
	TPlace                        SharedServerWorldPlace
	Unk_70bf7e7                   DT_OPTIONAL[*DT_UINT]
	SnoLevelArea                  DT_SNO
	FlHealthPercent               DT_OPTIONAL[*DT_FLOAT]
	Unk_c8448e5                   DT_OPTIONAL[*DT_FLOAT]
	Unk_36173ba                   DT_OPTIONAL[*DT_SNO]
	SnoPortalDestLevelArea        DT_OPTIONAL[*DT_SNO]
	SnoItem                       DT_OPTIONAL[*DT_SNO]
	ETeam                         DT_OPTIONAL[*DT_ENUM]
	EConversationIcon             DT_OPTIONAL[*DT_ENUM]
	Unk_cbe0ae6                   DT_OPTIONAL[*DT_SNO]
	Unk_3890c34                   DT_OPTIONAL[*DT_SNO]
	SnoPhasingVisibilityCondition DT_OPTIONAL[*DT_SNO]
	ETrickleInfoType              DT_ENUM
	DwTrickleFlags                DT_UINT
	DwHeadstoneCorpseReviveTime   DT_OPTIONAL[*DT_INT]
	HMinimapIconImage             DT_OPTIONAL[*DT_UINT]
	HMinimapStringLabel           DT_OPTIONAL[*DT_UINT]
	SnoStringList                 DT_OPTIONAL[*DT_SNO]
	FMaxDisplayRangeSq            DT_OPTIONAL[*DT_FLOAT]
	NAction                       DT_OPTIONAL[*DT_INT]
	UEngagedWithRareTime          DT_OPTIONAL[*DT_UINT]
	BInCombat                     DT_OPTIONAL[*DT_INT]
	Unk_c9c5de                    DT_OPTIONAL[*DT_UINT]
}

func (t *TrickleMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPlace.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_70bf7e7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelArea.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHealthPercent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c8448e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_36173ba.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPortalDestLevelArea.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItem.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETeam.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.EConversationIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cbe0ae6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3890c34.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPhasingVisibilityCondition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETrickleInfoType.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTrickleFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwHeadstoneCorpseReviveTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.HMinimapIconImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.HMinimapStringLabel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoStringList.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.FMaxDisplayRangeSq.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.NAction.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.UEngagedWithRareTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInCombat.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c9c5de.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type InterpolationPathHeader struct {
	TLoopPointStart       DT_FLOAT
	TLoopPointEnd         DT_FLOAT
	NDistributionFunction DT_ENUM
	Unk_2312508           DT_ENUM
	ArInterpScalar        DT_VARIABLEARRAY[*InterpolationScalar]
	DwFlags               DT_UINT
}

func (t *InterpolationPathHeader) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLoopPointStart.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLoopPointEnd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NDistributionFunction.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2312508.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArInterpScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TransmogEnableMessage struct {
	THeader RequiredMessageHeader
	ESlot   DT_ENUM
	BEnable DT_INT
}

func (t *TransmogEnableMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESlot.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEnable.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WallPiece struct {
	SnonameObject       DT_SNO_NAME
	SzLookName          DT_UINT
	DwShaderMapOverride DT_UINT
	Unk_189be9b         DT_INT
	Unk_94a2b91         DT_INT
	Unk_d094b9a         DT_ENUM
	FlWeight            DT_FLOAT
	FlFootprint         DT_FLOAT
	EFadeMethod         DT_ENUM
	Unk_da5b372         DT_INT
	Unk_8dea4d9         DT_INT
	NFadeGroup          DT_INT
}

func (t *WallPiece) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnonameObject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLookName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwShaderMapOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_189be9b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_94a2b91.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d094b9a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlWeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFootprint.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.EFadeMethod.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_da5b372.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8dea4d9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFadeGroup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RevealSceneMessage struct {
	THeader               RequiredMessageHeader
	IdSWorld              DT_SHARED_SERVER_DATA_ID
	TSceneSpec            SceneCommonSpecification
	IdSScene              DT_SHARED_SERVER_DATA_ID
	SnoScene              DT_SNO
	SnoExclusiveMarkerSet DT_SNO
	Transform             PRTransform
	ArAppliedLabels       DT_FIXEDARRAY[*DT_GBID]
	ArDRLGTiles           DT_FIXEDARRAY[*Type_b3c2ea5e]
	ArDRLGElevations      DT_FIXEDARRAY[*DT_INT]
	DwSceneFlags          DT_UINT
}

func (t *RevealSceneMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSWorld.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSceneSpec.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+332, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSScene.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+340, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoScene.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 33,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+344, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoExclusiveMarkerSet.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 24,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+348, io.SeekStart); err != nil {
		return err
	}
	if err := t.Transform.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+376, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArAppliedLabels.UnmarshalD4(r, &Options{
		ArrayLength: 256,
		Flags:       9,
		Group:       4,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1404, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArDRLGTiles.UnmarshalD4(r, &Options{
		ArrayLength: 32,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1664, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArDRLGElevations.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1684, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwSceneFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1688, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ExperienceLevel_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*ExperienceLevel]
}

func (t *ExperienceLevel_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnAIUpdatePowerCallback struct {
	// Inherits PowerCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	BCouldHaveRagdolled   DT_INT
}

func (t *OnAIUpdatePowerCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCouldHaveRagdolled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamOwnerParty struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
}

func (t *ScriptEventParamOwnerParty) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MonsterSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType          DT_UINT
	BNegate         DT_INT
	DwPad           DT_UINT
	SnoMonsterActor DT_SNO
	Unk_c7b2b18     DT_ENUM
}

func (t *MonsterSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMonsterActor.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c7b2b18.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type FaceDefinition struct {
	FUsableByClass DT_FIXEDARRAY[*DT_INT]
	Unk_305622d    DT_UINT
}

func (t *FaceDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUsableByClass.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_305622d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_976d0976 struct {
	SnoFont    DT_SNO
	DwFontSize DT_INT
}

func (t *Type_976d0976) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFont.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 19,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFontSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_977100c8 struct {
	TValueMin DT_RGBACOLOR
	TValueMax DT_RGBACOLOR
	TTime     DT_FLOAT
}

func (t *Type_977100c8) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TValueMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TValueMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorMovementPowerData struct {
	Unk_b1f0f4e                  DT_STRING_FORMULA
	Unk_c31445d                  DT_FLOAT
	Unk_6661ef2                  DT_FLOAT
	Unk_f8c5768                  DT_ENUM
	FlSpeedMultiplier            DT_FLOAT
	BIgnorePathfinding           DT_INT
	Unk_81f023c                  DT_INT
	BDisableDynamicAvoidance     DT_INT
	Unk_9d8eaf7                  DT_INT
	BOnlyStopFromStaticCollision DT_INT
	Unk_b804e2d                  DT_ENUM
	Unk_9369802                  DT_FLOAT
	SnoAnimKeyOverride           DT_SNO
	Unk_9ab5680                  DT_GBID
	Unk_f05bba                   DT_STRING_FORMULA
}

func (t *ActorMovementPowerData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b1f0f4e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c31445d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6661ef2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f8c5768.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSpeedMultiplier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIgnorePathfinding.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_81f023c.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.BDisableDynamicAvoidance.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9d8eaf7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.BOnlyStopFromStaticCollision.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b804e2d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9369802.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAnimKeyOverride.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9ab5680.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 34,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f05bba.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type IKFrames struct {
	EIKLimb     DT_ENUM
	ArIKWindows DT_VARIABLEARRAY[*IKWindow]
	Unk_f745539 DT_VARIABLEARRAY[*IKWindow]
}

func (t *IKFrames) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EIKLimb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArIKWindows.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f745539.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MonsterRaritySubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType      DT_UINT
	BNegate     DT_INT
	DwPad       DT_UINT
	ERarity     DT_ENUM
	Unk_c7b2b18 DT_ENUM
}

func (t *MonsterRaritySubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ERarity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c7b2b18.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DemonScrollRewardChoicePickedMessage struct {
	THeader     RequiredMessageHeader
	SnoScroll   DT_SNO
	Unk_14e1214 DT_INT
}

func (t *DemonScrollRewardChoicePickedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoScroll.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 95,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_14e1214.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalSnoTemplatesData struct {
	// Inherits GlobalBase
	// Inherits PolymorphicBase
	DwType                   DT_UINT
	DwPad                    DT_UINT
	TNpcGenerationData       NpcGenerationData
	ArNpcTemplates           DT_VARIABLEARRAY[*NpcTemplate]
	ArNpcArchetypeTemplates  DT_VARIABLEARRAY[*NpcArchetypeTemplate]
	ArNpcLookTemplates       DT_VARIABLEARRAY[*NpcLookTemplate]
	Unk_3733127              DT_VARIABLEARRAY[*Type_14c5741]
	ArNpcFollowerArchetypes  DT_VARIABLEARRAY[*NpcFollowerArchetype]
	ArDecalTemplates         DT_VARIABLEARRAY[*DecalTemplate]
	ArGizmoTemplates         DT_VARIABLEARRAY[*GizmoTemplate]
	ArDeathTemplates         DT_VARIABLEARRAY[*DeathTemplate]
	ArDeathLookTemplates     DT_VARIABLEARRAY[*DeathLookTemplate]
	ArDeathMaterialTemplates DT_VARIABLEARRAY[*DeathMaterialTemplate]
}

func (t *GlobalSnoTemplatesData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TNpcGenerationData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArNpcTemplates.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArNpcArchetypeTemplates.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArNpcLookTemplates.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3733127.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArNpcFollowerArchetypes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArDecalTemplates.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArGizmoTemplates.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArDeathTemplates.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArDeathLookTemplates.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArDeathMaterialTemplates.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PS4ConsoleAwardDefinition struct {
	// Inherits SonyConsoleAwardDefinition
	// Inherits ConsoleAwardDefinition
	// Inherits PolymorphicBase
	DwType          DT_UINT
	UProfileAwardId DT_UINT
	DwPad           DT_UINT
}

func (t *PS4ConsoleAwardDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.UProfileAwardId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActivityDefinition struct {
	TMetadata   ActivityMetadata
	TLinks      ActivityLinks
	Snoname     DT_SNO_NAME
	Unk_a0a2ac5 DT_UINT
	Unk_c2e08fe DT_UINT
}

func (t *ActivityDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMetadata.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLinks.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Snoname.UnmarshalD4(r, &Options{Flags: 513}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a0a2ac5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c2e08fe.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AngularAxisParams struct {
	Unk_9b43ddf DT_FLOAT
	Unk_a4ff40  DT_FLOAT
	AMaxSpeed   DT_FLOAT
}

func (t *AngularAxisParams) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b43ddf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a4ff40.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.AMaxSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActivateDungeonKeyMessage struct {
	THeader RequiredMessageHeader
	AnnKey  DT_ACD_NETWORK_NAME
}

func (t *ActivateDungeonKeyMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnKey.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionHasBuff struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType       DT_UINT
	BInverse     DT_INT
	DwPad        DT_UINT
	ESubject     DT_ENUM
	SnoPower     DT_SNO
	DwBuffDataID DT_UINT
}

func (t *PowerConditionHasBuff) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwBuffDataID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_984657e7 struct {
	EStat   DT_ENUM
	NAmount DT_INT
}

func (t *Type_984657e7) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EStat.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_98c23c41 struct {
	Unk_eae7586 DT_TAGMAP[*DT_ENUM]
}

func (t *Type_98c23c41) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eae7586.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type VisualInventoryMessage struct {
	THeader    RequiredMessageHeader
	Ann        DT_ACD_NETWORK_NAME
	TEquipment VisualEquipment
}

func (t *VisualInventoryMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEquipment.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIRActorStyle struct {
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	Unk_ff11bff               DT_TAGMAP[*DT_ENUM]
}

func (t *UIRActorStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ff11bff.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AppBone struct {
	DwBoneHash DT_UINT
}

func (t *AppBone) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwBoneHash.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ZoneProgressClaimRewardsMessage struct {
	THeader      RequiredMessageHeader
	EZone        DT_ENUM
	NRewardIndex DT_INT
}

func (t *ZoneProgressClaimRewardsMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EZone.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NRewardIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RecipeDefinition struct {
	TSpecificItem   ItemSpecifierData
	NPotionTier     DT_INT
	TSigilTierRange DT_RANGE[*DT_INT]
	SnoItem         DT_SNO
	ECrafterType    DT_ENUM
	ERecipeType     DT_ENUM
	DwFlags         DT_UINT
	NItemPowerBonus DT_INT
	NCost           DT_UINT
	Unk_3046a06     DT_GBID
	Unk_86b80f6     DT_GBID
	ArIngredients   DT_VARIABLEARRAY[*RecipeIngredient]
	Unk_c05e260     DT_VARIABLEARRAY[*Type_78541b1a]
}

func (t *RecipeDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSpecificItem.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPotionTier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSigilTierRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItem.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECrafterType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ERecipeType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.NItemPowerBonus.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCost.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3046a06.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_86b80f6.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArIngredients.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c05e260.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_991d0313 struct {
	EScrollbarStyle         DT_ENUM
	BScrollbarVertical      DT_INT
	Unk_5360c2              DT_INT
	Unk_bdf8b74             DT_CSTRING[*DT_BYTE]
	Unk_3f3a302             DT_SNO
	SnoScrollbarClickSound  DT_SNO
	EScrollbarVisibility    DT_ENUM
	Unk_58496c              DT_FLOAT
	Unk_26fb7aa             DT_FLOAT
	EBlendEasing            DT_ENUM
	Unk_ce2abaa             DT_FLOAT
	Unk_aea1165             DT_INT
	FlMouseWheelScaleFactor DT_FLOAT
}

func (t *Type_991d0313) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EScrollbarStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.BScrollbarVertical.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5360c2.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bdf8b74.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3f3a302.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoScrollbarClickSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.EScrollbarVisibility.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_58496c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_26fb7aa.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ce2abaa.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aea1165.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMouseWheelScaleFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ACDTranslateDetPathSpiralMessage struct {
	THeader     RequiredMessageHeader
	Ann         DT_ACD_NETWORK_NAME
	EDPath      DT_ENUM
	VStartPos   DT_VECTOR3D
	VTargetPos  DT_VECTOR3D
	UMoveFlags  DT_UINT
	FlVar0      DT_FLOAT
	FlVar1      DT_FLOAT
	TSinData    DPathSinData
	FlSpeedMult DT_FLOAT
}

func (t *ACDTranslateDetPathSpiralMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDPath.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.VStartPos.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.VTargetPos.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.UMoveFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlVar0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlVar1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSinData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSpeedMult.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_9934af2e struct {
	Unk_fbd632           DT_INT
	Unk_dba8ed           DT_FLOAT
	Unk_9a547e8          DT_FLOAT
	Unk_729492a          DT_FLOAT
	Unk_5d592f           DT_FLOAT
	Unk_fa1f9f           DT_RGBACOLOR
	RgbaInvalidAlbedo    DT_RGBACOLOR
	Unk_8569aab          DT_RGBACOLOR
	Unk_b634a56          DT_FLOAT
	Unk_504f06f          DT_FLOAT
	Unk_339f2a2          DT_FLOAT
	Unk_b4b9b18          DT_RGBACOLOR
	RgbaInvalidMetalness DT_RGBACOLOR
}

func (t *Type_9934af2e) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fbd632.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dba8ed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a547e8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_729492a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5d592f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fa1f9f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaInvalidAlbedo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8569aab.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b634a56.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_504f06f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_339f2a2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4b9b18.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaInvalidMetalness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_993e31cf struct {
	TComponentId  DT_UINT
	EFootstepType DT_ENUM
}

func (t *Type_993e31cf) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TComponentId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EFootstepType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Environment struct {
	TPostFXParams        PostFXParams
	SnoSkyboxActor       DT_SNO
	SnoAudioContext      DT_SNO
	SnoWeather           DT_SNO
	Unk_4c76230          DT_SNO
	Unk_afd6821          bcQuat
	SnoOceanMaterial     DT_SNO
	SnoGroundFogMaterial DT_SNO
	FlFarPlaneCap        DT_FLOAT
	SnoOceanAmbient      DT_SNO
	Unk_31e7772          DT_SNO
	SnoRiverAmbient      DT_SNO
	SnoStreamAmbient     DT_SNO
	SnoCliffEdgeAmbient  DT_SNO
	Unk_f4f9d6f          DT_INT
	Unk_55eead1          DT_FLOAT
	Unk_a7ebd97          DT_INT
}

func (t *Environment) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPostFXParams.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSkyboxActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAudioContext.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 93,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWeather.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 47,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4c76230.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_afd6821.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOceanMaterial.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 57,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoGroundFogMaterial.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 57,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFarPlaneCap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOceanAmbient.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 5,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_31e7772.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 5,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRiverAmbient.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 5,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoStreamAmbient.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 5,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCliffEdgeAmbient.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 5,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f4f9d6f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_55eead1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a7ebd97.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConversationLineSetNode struct {
	// Inherits ConversationScopeNode
	// Inherits ConversationTreeNode
	// Inherits PolymorphicBase
	DwType               DT_UINT
	DwPad                DT_UINT
	DwNodeID             DT_UINT
	DwNextNodeID         DT_UINT
	Unk_3ef8e38          DT_UINT
	PtNextNode           DT_INT64
	DwFlags              DT_UINT
	SzComment            DT_CSTRING[*DT_BYTE]
	ArChildNodes         DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	SnoCondition         DT_SNO
	Unk_d8bf9e4          DT_INT
	SnoSpeaker           DT_SNO
	Unk_acdb8a3          DT_INT
	Unk_ecabee0          DT_INT
	Unk_2e54e3c          DT_INT
	SnonameAnim          DT_SNO_NAME
	FlDurationAdjustment DT_FLOAT
	ArListenerReactions  DT_VARIABLEARRAY[*ListenerReaction]
	Unk_aae0113          DT_VARIABLEARRAY[*DT_SNO]
	Unk_f95422b          DT_VARIABLEARRAY[*DT_SNO]
	Unk_8cbb06b          DT_SNO_NAME
	Unk_5b42409          DT_SNO_NAME
	Unk_b882e13          DT_INT
	Unk_748463e          DT_INT
	Unk_76d4bd           DT_INT
}

func (t *ConversationLineSetNode) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNodeID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNextNodeID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3ef8e38.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtNextNode.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzComment.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArChildNodes.UnmarshalD4(r, &Options{Flags: 262145}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d8bf9e4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSpeaker.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 72,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_acdb8a3.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ecabee0.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2e54e3c.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnonameAnim.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDurationAdjustment.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArListenerReactions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aae0113.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 72,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f95422b.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 72,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8cbb06b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5b42409.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b882e13.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_748463e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_76d4bd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_998a6b26 struct {
	THeader  RequiredMessageHeader
	Ann      DT_ACD_NETWORK_NAME
	FlRadius DT_FLOAT
}

func (t *Type_998a6b26) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIHotkeyStyle struct {
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	Unk_4688828               DT_TAGMAP[*DT_ENUM]
}

func (t *UIHotkeyStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4688828.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerScriptParam struct {
	EType DT_ENUM
}

func (t *PowerScriptParam) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_99d2f9b4 struct {
	THeader     RequiredMessageHeader
	Ann         DT_ACD_NETWORK_NAME
	Unk_d8a1f3b DT_FIXEDARRAY[*Type_a9417475]
}

func (t *Type_99d2f9b4) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d8a1f3b.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DisplayGameTextMessage struct {
	THeader         RequiredMessageHeader
	SzMsg           DT_CHARARRAY
	FlTimeUntilFade DT_OPTIONAL[*DT_FLOAT]
	NParam1         DT_OPTIONAL[*DT_INT]
	NParam2         DT_OPTIONAL[*DT_INT]
	FIsWarning      DT_OPTIONAL[*DT_INT]
}

func (t *DisplayGameTextMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzMsg.UnmarshalD4(r, &Options{
		ArrayLength: 1024,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1040, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTimeUntilFade.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1048, io.SeekStart); err != nil {
		return err
	}
	if err := t.NParam1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1056, io.SeekStart); err != nil {
		return err
	}
	if err := t.NParam2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1064, io.SeekStart); err != nil {
		return err
	}
	if err := t.FIsWarning.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1072, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DungeonAffixFamilyEntry_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*DungeonAffixFamilyEntry]
}

func (t *DungeonAffixFamilyEntry_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnOtherBuffRemovedCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	Unk_880879b           DT_VARIABLEARRAY[*Type_82280ff3]
}

func (t *OnOtherBuffRemovedCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_880879b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerLimitedActorType_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*PowerLimitedActorType]
}

func (t *PowerLimitedActorType_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_9a30831a struct {
	GbidRankReward      DT_GBID
	DwRequiredSkillRank DT_UINT
}

func (t *Type_9a30831a) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidRankReward.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 43,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwRequiredSkillRank.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PRTransform struct {
	Q  bcQuat
	Wp DT_VECTOR3D
}

func (t *PRTransform) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Q.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AVParams struct {
	TPitch         AngularAxisParams
	TYaw           AngularAxisParams
	TRoll          AngularAxisParams
	TTurret        AngularAxisParams
	TFOV           AngularAxisParams
	TMovementSpeed LinearAxisParams
	Unk_8023fd7    LinearAxisParams
	Unk_6399d3e    DT_FLOAT
	Unk_4256dac    DT_FLOAT
	Unk_125c54c    DT_FLOAT
	Unk_3294a2     DT_FLOAT
	Unk_2f6e0dd    DT_FLOAT
	Unk_ff7e332    DT_FLOAT
	Unk_6e6acb6    DT_FLOAT
	BInvertPan     DT_INT
	Unk_71789fc    DT_INT
}

func (t *AVParams) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPitch.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.TYaw.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TRoll.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTurret.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFOV.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMovementSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8023fd7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6399d3e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4256dac.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_125c54c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3294a2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2f6e0dd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ff7e332.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6e6acb6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInvertPan.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_71789fc.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type VectorPath struct {
	TPathData Type_41b30aaa
}

func (t *VectorPath) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPathData.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HirelingSavedData struct {
	THireling            DT_FIXEDARRAY[*HirelingInfo]
	EActiveHireling      DT_ENUM
	DwAvailableHirelings DT_UINT
}

func (t *HirelingSavedData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THireling.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.EActiveHireling.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwAvailableHirelings.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type IncludePath struct {
	SzPath DT_CSTRING[*DT_BYTE]
}

func (t *IncludePath) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzPath.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DyeDefinition struct {
	Unk_1290fc4    DT_INT
	ArColorSamples DT_FIXEDARRAY[*DT_RGBACOLORVALUE]
	FlRoughness    DT_FIXEDARRAY[*DT_FLOAT]
	Unk_f04c7fb    DT_FIXEDARRAY[*DT_RGBACOLOR]
}

func (t *DyeDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1290fc4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArColorSamples.UnmarshalD4(r, &Options{ArrayLength: 24}); err != nil {
		return err
	}
	if _, err := r.Seek(p+396, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRoughness.UnmarshalD4(r, &Options{
		ArrayLength: 8,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+428, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f04c7fb.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+444, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NPCInteractOptionsMessage struct {
	THeader         RequiredMessageHeader
	AnnTalkingTo    DT_ACD_NETWORK_NAME
	TNPCInteraction DT_FIXEDARRAY[*NPCInteraction]
	EPreferredMenu  DT_ENUM
}

func (t *NPCInteractOptionsMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnTalkingTo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TNPCInteraction.UnmarshalD4(r, &Options{
		ArrayLength: 30,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+748, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPreferredMenu.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+752, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RopeEffectMessageACDToACD struct {
	THeader           RequiredMessageHeader
	SnoRope           DT_SNO
	AnnFrom           DT_ACD_NETWORK_NAME
	EPositionFrom     DT_ENUM
	AnnTo             DT_ACD_NETWORK_NAME
	AnnOrigin         DT_ACD_NETWORK_NAME
	EPositionTo       DT_ENUM
	BIgnoreOwnerAlpha DT_INT
}

func (t *RopeEffectMessageACDToACD) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRope.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 32,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnFrom.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPositionFrom.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnTo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnOrigin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPositionTo.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIgnoreOwnerAlpha.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_9b106a7f struct {
	TComponentId      DT_UINT
	ArTorsoComponents DT_VARIABLEARRAY[*DT_UINT]
	ArLegComponents   DT_VARIABLEARRAY[*DT_UINT]
	ArHelmComponents  DT_VARIABLEARRAY[*DT_UINT]
}

func (t *Type_9b106a7f) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TComponentId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArTorsoComponents.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArLegComponents.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArHelmComponents.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionIsMonsterRarity struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType            DT_UINT
	BInverse          DT_INT
	DwPad             DT_UINT
	ESubject          DT_ENUM
	ArMonsterRarities DT_VARIABLEARRAY[*DT_ENUM]
}

func (t *PowerConditionIsMonsterRarity) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArMonsterRarities.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DynamicPortalInfo struct {
	SzName  DT_UINT
	TInfo   PortalInfo
	DwValue DT_UINT
}

func (t *DynamicPortalInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TInfo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventFadeMonsters struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
}

func (t *TriggerEventFadeMonsters) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RewardDefinition struct {
	UID             DT_UINT
	TType           DT_ENUM
	UFlags          DT_UINT
	TCurrency       DT_ENUM
	UQuantity       DT_UINT
	SnoItem         DT_SNO
	SnoPlayerTitle  DT_SNO
	SnoStoreProduct DT_SNO
}

func (t *RewardDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.UID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.UFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCurrency.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.UQuantity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItem.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPlayerTitle.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 120,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoStoreProduct.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 110,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_9bc33fb9 struct {
	THeader Type_b0f2a959
}

func (t *Type_9bc33fb9) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIDateTimeStyle struct {
	// Inherits UITextStyle
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	TFont                     UIControlFont
	Unk_4741819               DT_TAGMAP[*DT_ENUM]
	Unk_f97174                DT_ENUM
	TDefaultSettings          Type_b2d29bdc
	Unk_4af6a2e               Type_b2d29bdc
}

func (t *UIDateTimeStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFont.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4741819.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f97174.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDefaultSettings.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4af6a2e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NPCColorSet struct {
	ArEquipmentDyes DT_FIXEDARRAY[*DT_SNO]
	NHairColor      DT_INT
	NSkinColor      DT_INT
}

func (t *NPCColorSet) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArEquipmentDyes.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
		Group:       122,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NHairColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSkinColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerResourceCost struct {
	EType            DT_ENUM
	TMinRequired     DT_STRING_FORMULA
	TInitialCost     DT_STRING_FORMULA
	TChannellingCost DT_STRING_FORMULA
}

func (t *PowerResourceCost) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMinRequired.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.TInitialCost.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.TChannellingCost.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ACDLookAtMessage struct {
	THeader   RequiredMessageHeader
	AnnSrc    DT_ACD_NETWORK_NAME
	AnnTarget DT_ACD_NETWORK_NAME
}

func (t *ACDLookAtMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnSrc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorFaceHelper struct {
	TContent Type_f5c4e3ed
}

func (t *ActorFaceHelper) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TContent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MailReadMessage struct {
	THeader RequiredMessageHeader
	IdMail  Type_f5ac91bb
}

func (t *MailReadMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdMail.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type FloatingAmountMessage struct {
	THeader RequiredMessageHeader
	WpPlace SharedServerWorldPlace
	UAmount DT_INT64
	EType   DT_ENUM
}

func (t *FloatingAmountMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpPlace.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.UAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SpeedTreeWind struct {
	// Inherits SpeedTreeWindBase
	// Inherits PolymorphicBase
	DwType  DT_UINT
	DwPad   DT_UINT
	TParams SpeedTreeWindParams
}

func (t *SpeedTreeWind) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TParams.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1376, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SkillDeclaration struct {
	SnoPower  DT_SNO
	NLevelMod DT_INT
}

func (t *SkillDeclaration) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLevelMod.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PrefetchActorMessage struct {
	THeader           RequiredMessageHeader
	Ann               DT_ACD_NETWORK_NAME
	SnoActor          DT_SNO
	Unk_a61d97        DT_INT
	Unk_39ae9c2       DT_FIXEDARRAY[*DT_SNO_NAME]
	TBaseACDInfo      DT_OPTIONAL[*BaseACDInfo]
	TPlayerACDInfo    DT_OPTIONAL[*PlayerACDInfo]
	TMountACDInfo     DT_OPTIONAL[*MountACDInfo]
	TMonsterACDInfo   DT_OPTIONAL[*MonsterACDInfo]
	TNPCACDInfo       DT_OPTIONAL[*NPCACDInfo]
	EActorGender      DT_OPTIONAL[*DT_ENUM]
	EWeaponClass      DT_OPTIONAL[*DT_ENUM]
	EActorVariantType DT_OPTIONAL[*DT_ENUM]
}

func (t *PrefetchActorMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a61d97.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_39ae9c2.UnmarshalD4(r, &Options{
		ArrayLength: 32,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+292, io.SeekStart); err != nil {
		return err
	}
	if err := t.TBaseACDInfo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPlayerACDInfo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1188, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMountACDInfo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1208, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMonsterACDInfo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1268, io.SeekStart); err != nil {
		return err
	}
	if err := t.TNPCACDInfo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1296, io.SeekStart); err != nil {
		return err
	}
	if err := t.EActorGender.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1304, io.SeekStart); err != nil {
		return err
	}
	if err := t.EWeaponClass.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1312, io.SeekStart); err != nil {
		return err
	}
	if err := t.EActorVariantType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1320, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SerializeData struct {
	DwOffset       DT_INT
	DwSizeAndFlags DT_INT
}

func (t *SerializeData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwSizeAndFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalEmblems struct {
	// Inherits GlobalBase
	// Inherits PolymorphicBase
	DwType           DT_UINT
	DwPad            DT_UINT
	ArInitialEmblems DT_VARIABLEARRAY[*DT_SNO]
}

func (t *GlobalEmblems) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArInitialEmblems.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 121,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestSideQuestAbandonedMessage struct {
	THeader     RequiredMessageHeader
	Unk_dce541c DT_UINT
	SnoQuest    DT_SNO
}

func (t *QuestSideQuestAbandonedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DebugEventLogMetaData struct {
	THeader       RequiredMessageHeader
	EMetaDataType DT_INT
	NIntData      DT_INT
	FlFloatData   DT_FLOAT
	Ann           DT_ACD_NETWORK_NAME
	WpStartData   SharedServerWorldPlace
	WpEndData     SharedServerWorldPlace
	Bounds        DT_VECTOR3D
	RgbaColor     DT_RGBACOLOR
	Unk_8273480   DT_UINT
}

func (t *DebugEventLogMetaData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMetaDataType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NIntData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFloatData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpStartData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpEndData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Bounds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8273480.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventFadePlayers struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
}

func (t *TriggerEventFadePlayers) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerDecalData struct {
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType                  DT_UINT
	DwPad                   DT_UINT
	Unk_1e3c3c3             DT_UINT
	FlAngleThreshold        DT_FLOAT
	Unk_18f0908             DT_INT
	BDieOverride            DT_INT
	PtRunTimeMaterialValues DT_VARIABLEARRAY[*RunTimeMaterialValues]
}

func (t *MarkerDecalData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1e3c3c3.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAngleThreshold.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_18f0908.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.BDieOverride.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtRunTimeMaterialValues.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventSetWeaponVisibilityDuration struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
	Unk_279aa5a      DT_INT
	DwActorID        DT_UINT
	Unk_a8ee95c      DT_INT
	Unk_4bec6d2      DT_INT
	BHideSheathed    DT_INT
}

func (t *TriggerEventSetWeaponVisibilityDuration) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_279aa5a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwActorID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a8ee95c.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4bec6d2.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.BHideSheathed.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NPCInteraction struct {
	EType    DT_ENUM
	EIcon    DT_ENUM
	DwData   DT_UINT
	DwFlags  DT_UINT
	DwOwners DT_UINT
	SnoQuest DT_SNO
}

func (t *NPCInteraction) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwOwners.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_9e555889 struct {
	DwMarkerPathID DT_UINT
	Unk_b1f8d85    DT_INT
	NDamageState   DT_INT
}

func (t *Type_9e555889) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMarkerPathID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b1f8d85.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NDamageState.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_9e8134dc struct {
	SzBoneName   DT_UINT
	PtOffsetList DT_VARIABLEARRAY[*PRTransform]
}

func (t *Type_9e8134dc) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzBoneName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtOffsetList.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_9ea8dcb4 struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	Unk_7f4b6d5           DT_INT
	Unk_a639294           DT_INT
	DwCCTypes             DT_UINT
}

func (t *Type_9ea8dcb4) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7f4b6d5.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a639294.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwCCTypes.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GizmoConditionData struct {
	SnoGizmoCondition DT_SNO
}

func (t *GizmoConditionData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoGizmoCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type FacialHairDefinition struct {
	FUsableByClass DT_FIXEDARRAY[*DT_INT]
	Unk_259d5a4    DT_SNO
	Unk_259d59d    DT_SNO
	Unk_2ab2122    DT_INT
}

func (t *FacialHairDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUsableByClass.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_259d5a4.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 57,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_259d59d.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 57,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2ab2122.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ClothData struct {
	Unk_3c1684f         Type_3a911960
	PtBindVertices      DT_VARIABLEARRAY[*DT_VECTOR4D]
	PtBindNormals       DT_VARIABLEARRAY[*DT_VECTOR4D]
	Unk_f3049dd         DT_VARIABLEARRAY[*DT_FLOAT]
	PtBlendWeights      DT_VARIABLEARRAY[*DT_FLOAT]
	Unk_6b5f617         DT_VARIABLEARRAY[*DT_FLOAT]
	PtDeltaFrames       DT_VARIABLEARRAY[*Type_b88f4265]
	PtLevels            DT_VARIABLEARRAY[*DT_WORD]
	PtAttachmentLengths DT_VARIABLEARRAY[*DT_FLOAT]
	PtParentIndices     DT_VARIABLEARRAY[*DT_WORD]
	PtKinematicRoots    DT_VARIABLEARRAY[*DT_WORD]
	PtTangentIndices    DT_VARIABLEARRAY[*DT_WORD]
	PtWeights           DT_VARIABLEARRAY[*DT_VECTOR4D]
	PtDriverInfluences  DT_VARIABLEARRAY[*DT_WORD]
	PtFollowerIndices   DT_VARIABLEARRAY[*DT_WORD]
	PtTriangles         DT_VARIABLEARRAY[*DT_WORD]
	PtConstraintIndices DT_VARIABLEARRAY[*DT_WORD]
	PtConstraintLengths DT_VARIABLEARRAY[*DT_FLOAT]
	Unk_8ecbb2b         DT_VARIABLEARRAY[*DT_WORD]
	Unk_9f71907         DT_VARIABLEARRAY[*DT_FLOAT]
	Unk_93f4433         DT_VARIABLEARRAY[*Type_fd884ad3]
	Unk_250faf          DT_VARIABLEARRAY[*Type_fd884ad3]
	Unk_4213ccc         DT_VARIABLEARRAY[*Type_fd884ad3]
	Unk_4bbdfb2         DT_VARIABLEARRAY[*Type_fd884ad3]
	PtCapsuleDefs       DT_VARIABLEARRAY[*Type_4c2dc82]
	PtPlaneDefs         DT_VARIABLEARRAY[*Type_da38fe05]
	Unk_94dfc4          DT_VARIABLEARRAY[*Type_f1fed2b7]
	PtDriverMap         DT_VARIABLEARRAY[*DT_WORD]
}

func (t *ClothData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3c1684f.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtBindVertices.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtBindNormals.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+320, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f3049dd.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+336, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtBlendWeights.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+352, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6b5f617.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+368, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtDeltaFrames.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+384, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtLevels.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+400, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtAttachmentLengths.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+416, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtParentIndices.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+432, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtKinematicRoots.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+448, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtTangentIndices.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+464, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtWeights.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+480, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtDriverInfluences.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+496, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtFollowerIndices.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+512, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtTriangles.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+528, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtConstraintIndices.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+544, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtConstraintLengths.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+560, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8ecbb2b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+576, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9f71907.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+592, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_93f4433.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+608, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_250faf.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+624, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4213ccc.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+640, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4bbdfb2.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+656, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtCapsuleDefs.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+672, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPlaneDefs.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+688, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_94dfc4.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+704, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtDriverMap.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+720, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerLevelMessage struct {
	THeader          RequiredMessageHeader
	Unk_dce541c      DT_UINT
	NNewLevel        DT_INT
	DwNewSkillPoints DT_UINT
	Unk_1e075bd      DT_INT
}

func (t *PlayerLevelMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NNewLevel.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNewSkillPoints.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1e075bd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorSoundTableData struct {
	SzMonsterCategory  DT_UINT
	Unk_6190c70        DT_INT
	Unk_fc3dcfc        DT_INT
	SnoRunSoundTable   DT_SNO
	SnoWalkSoundTable  DT_SNO
	Unk_e4e1d2         DT_SNO
	SnoLandSoundTable  DT_SNO
	Unk_8dbf009        DT_SNO
	Unk_7dfd883        DT_SNO
	Unk_e270225        DT_SNO
	Unk_87b2493        DT_SNO
	Unk_f1b3d91        DT_SNO
	Unk_608d70b        DT_SNO
	Unk_16fd1ad        DT_SNO
	Unk_6a4231b        DT_SNO
	Unk_10a92fc        DT_SNO
	Unk_5e2d9d6        DT_SNO
	Unk_c8a2dd8        DT_SNO
	Unk_67e25e6        DT_SNO
	SnoVoiceSoundTable DT_SNO
	ArFoleyOverrides   DT_VARIABLEARRAY[*ActorFoleySoundOverride]
}

func (t *ActorSoundTableData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzMonsterCategory.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6190c70.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fc3dcfc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRunSoundTable.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWalkSoundTable.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e4e1d2.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLandSoundTable.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8dbf009.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7dfd883.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e270225.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87b2493.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f1b3d91.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_608d70b.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_16fd1ad.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6a4231b.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_10a92fc.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5e2d9d6.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c8a2dd8.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_67e25e6.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoVoiceSoundTable.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 79,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArFoleyOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type VictimMessage struct {
	THeader              RequiredMessageHeader
	Unk_7dbf108          DT_UINT
	NKillerLevel         DT_INT
	Unk_e37feff          DT_UINT
	EKillerMonsterRarity DT_ENUM
	SnoKillerActor       DT_SNO
	BUseAlternateName    DT_INT
	EKillerTeam          DT_ENUM
	PKillerRareNameGBIDs DT_FIXEDARRAY[*DT_GBID]
	SnoPowerDmgSource    DT_SNO
}

func (t *VictimMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7dbf108.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NKillerLevel.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e37feff.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.EKillerMonsterRarity.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoKillerActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.BUseAlternateName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.EKillerTeam.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.PKillerRareNameGBIDs.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
		Group:       7,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerDmgSource.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PortedToPlayerMessage struct {
	THeader     RequiredMessageHeader
	Unk_a51c96a DT_UINT
	Unk_2a8dda3 DT_UINT
}

func (t *PortedToPlayerMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a51c96a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2a8dda3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BaseACDInfo struct {
	SnoQuest     DT_SNO
	SnoMarkerSet DT_SNO
}

func (t *BaseACDInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMarkerSet.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 24,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WorldStateFullUpdateMessage struct {
	THeader   RequiredMessageHeader
	ArUpdates DT_FIXEDARRAY[*WorldStateUpdateData]
}

func (t *WorldStateFullUpdateMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArUpdates.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+532, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type JewelryDefinition struct {
	EClassRestriction DT_ENUM
	Unk_305622d       DT_UINT
	Unk_59b49ef       DT_INT
	HIconImage        DT_UINT
}

func (t *JewelryDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EClassRestriction.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_305622d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_59b49ef.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIconImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TerritoryDefinition struct {
	Color DT_RGBACOLOR
}

func (t *TerritoryDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Color.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventSpawnObject struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	TConditions               TriggerConditions
	FGenerated                DT_INT
	Unk_6cba752               DT_INT
	Unk_e560b0b               DT_UINT
	DwID                      DT_UINT
	Snoname                   DT_SNO_NAME
	THardpointLinks           DT_FIXEDARRAY[*HardpointLink]
	DwTriggerFlags            DT_UINT
	DwTriggerFlagsEx          DT_UINT
	FRandomLook               DT_INT
	TLookLink                 LookLink
	Unk_48fd494               DT_INT
	Unk_6b8bffc               DT_ENUM
	DwSegmentsStep            DT_UINT
	DwShaderMapOverride       DT_UINT
	FlScale                   DT_FLOAT
	DwSeed                    DT_UINT
	Unk_b0f4eeb               DT_UINT
	VecScalar                 DT_VECTOR2D
	Transform                 PRTransform
	TEffectGroupHardpointLink HardpointLink
	Unk_c7fa18a               DT_RANGE[*DT_FLOAT]
	SnoPowerEffectParam       DT_SNO
	DwSpawnedActorLife        DT_FLOAT
	TNPCComponentInstanceData NPCComponentInstanceData
	PtLightInstanceData       DT_VARIABLEARRAY[*LightInstanceData]
}

func (t *TriggerEventSpawnObject) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Snoname.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLinks.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.FRandomLook.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLookLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_48fd494.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6b8bffc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwSegmentsStep.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwShaderMapOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwSeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b0f4eeb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Transform.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEffectGroupHardpointLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c7fa18a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerEffectParam.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwSpawnedActorLife.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.TNPCComponentInstanceData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtLightInstanceData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LookVariantOverride struct {
	TBaseLook     LookLink
	TOverrideLook LookLink
}

func (t *LookVariantOverride) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TBaseLook.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TOverrideLook.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionIsActorUnstoppable struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
	ESubject DT_ENUM
}

func (t *PowerConditionIsActorUnstoppable) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_a1889860 struct {
	SnoPowerFrom DT_SNO
	Unk_857b0b4  DT_FLOAT
}

func (t *Type_a1889860) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerFrom.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_857b0b4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MountClearMessage struct {
	THeader     RequiredMessageHeader
	Unk_70bf7e7 DT_UINT
}

func (t *MountClearMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_70bf7e7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventCameraChangeTarget struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType               DT_UINT
	TConditions          TriggerConditions
	FGenerated           DT_INT
	Unk_6cba752          DT_INT
	Unk_e560b0b          DT_UINT
	TDuration            DT_FLOAT
	DwTriggerFlags       DT_UINT
	DwTriggerFlagsEx     DT_UINT
	TCleanup             TriggerCleanup
	Unk_49e9257          DT_INT
	Unk_5490979          DT_INT
	DwPad                DT_UINT
	ETargetType          DT_ENUM
	Unk_96c6da9          DT_UINT
	THardpointLinkTarget HardpointLink
	DwTargetID           DT_UINT
	VecTargetOffset      DT_VECTOR3D
	EMicrophoneMode      DT_ENUM
	VecMicrophoneOffset  DT_VECTOR3D
	EBlendEasing         DT_ENUM
}

func (t *TriggerEventCameraChangeTarget) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETargetType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_96c6da9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLinkTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTargetID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecTargetOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMicrophoneMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecMicrophoneOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SNOBlocklistDataChanged struct {
	THeader      RequiredMessageHeader
	TBlockedSnos DT_FIXEDARRAY[*DT_SNO_NAME]
	Unk_729a938  DT_FIXEDARRAY[*DT_UINT]
}

func (t *SNOBlocklistDataChanged) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TBlockedSnos.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+532, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_729a938.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+792, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionIsTrackedActor struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
	ESubject DT_ENUM
}

func (t *PowerConditionIsTrackedActor) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_a1e2d5ab struct {
	TFirstReward    Type_a50877b0
	TSecondReward   Type_a50877b0
	NStaticXPAmount DT_INT
	NXPTier         DT_INT
}

func (t *Type_a1e2d5ab) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFirstReward.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSecondReward.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.NStaticXPAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.NXPTier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type StarsSettings struct {
	Unk_1d0c343 DT_TAGMAP[*DT_ENUM]
}

func (t *StarsSettings) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1d0c343.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LoudnessParams struct{}

func (t *LoudnessParams) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+1, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventEnableRagdollAnimationOverride struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
}

func (t *TriggerEventEnableRagdollAnimationOverride) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DesignerVariable_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*DesignerVariable]
}

func (t *DesignerVariable_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type StartPowerMessage struct {
	THeader            Type_b0f2a959
	SnoPower           DT_SNO
	SnoTriggeringPower DT_OPTIONAL[*DT_SNO]
	TAnimPreplayData   DT_OPTIONAL[*AnimPreplayData]
	AStartFacing       DT_OPTIONAL[*DT_FLOAT]
	AnnTargetName      DT_OPTIONAL[*DT_ACD_NETWORK_NAME]
	WpTarget           DT_OPTIONAL[*SharedServerWorldPlace]
	WpTargetOffset     DT_OPTIONAL[*DT_VECTOR3D]
}

func (t *StartPowerMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggeringPower.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAnimPreplayData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.AStartFacing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnTargetName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpTargetOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionParagonGlyphAffixIsActive struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType               DT_UINT
	BInverse             DT_INT
	DwPad                DT_UINT
	ESubject             DT_ENUM
	SnoParagonGlyphAffix DT_SNO
}

func (t *PowerConditionParagonGlyphAffixIsActive) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoParagonGlyphAffix.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 112,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_a2b0fc96 struct {
	SzVariableName DT_CHARARRAY
	Unk_9e7b180    DT_INT
	EVariableType  DT_ENUM
	TMarkerHandle  MarkerHandle
	GbidActorGroup DT_GBID
	Unk_5b5276a    DT_GBID
	Unk_f5a5252    DT_CHARARRAY
	SnoReference   DT_SNO_NAME
	Unk_86254e0    DT_ENUM
	Unk_a33b274    DT_INT
}

func (t *Type_a2b0fc96) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzVariableName.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9e7b180.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.EVariableType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMarkerHandle.UnmarshalD4(r, &Options{Flags: 513}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidActorGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 24,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5b5276a.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f5a5252.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoReference.UnmarshalD4(r, &Options{Flags: 513}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_86254e0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a33b274.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ParagonGlyphIntoSocketMessage struct {
	THeader     RequiredMessageHeader
	SnoGlyph    DT_SNO
	DwNodeIndex DT_UINT
}

func (t *ParagonGlyphIntoSocketMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoGlyph.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 111,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNodeIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerClassRogueData struct {
	ArRogueSpecData DT_FIXEDARRAY[*RogueSpecializationGlobalData]
	Unk_239d877     DT_FLOAT
}

func (t *PlayerClassRogueData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArRogueSpecData.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_239d877.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Circle struct {
	WpCenter DT_VECTOR2D
	WdRadius DT_FLOAT
}

func (t *Circle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpCenter.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.WdRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RotationKey struct {
	NFrame DT_INT
	Q16    Quaternion16
}

func (t *RotationKey) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFrame.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Q16.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ACDTranslateAckMessage struct {
	THeader   RequiredMessageHeader
	UAckValue DT_UINT
}

func (t *ACDTranslateAckMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.UAckValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NPCACDInfo struct {
	Unk_4fa6b4f  DT_FIXEDARRAY[*DT_UINT]
	ComponentSet DT_SNO
}

func (t *NPCACDInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4fa6b4f.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.ComponentSet.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 2,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionHasFortifiedHealth struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
	ESubject DT_ENUM
}

func (t *PowerConditionHasFortifiedHealth) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionIsCrowdControlled struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType              DT_UINT
	BInverse            DT_INT
	DwPad               DT_UINT
	ESubject            DT_ENUM
	DwCrowdControlTypes DT_UINT
}

func (t *PowerConditionIsCrowdControlled) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwCrowdControlTypes.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConsoleCommandResultsMessage struct {
	THeader   RequiredMessageHeader
	UsMessage DT_CHARARRAY
}

func (t *ConsoleCommandResultsMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.UsMessage.UnmarshalD4(r, &Options{
		ArrayLength: 1024,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1040, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_a48e11e6 struct {
	SnoPowerTo          DT_SNO
	FlBlendTimeOverride DT_FLOAT
}

func (t *Type_a48e11e6) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerTo.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlBlendTimeOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerVariableIsSetSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType               DT_UINT
	BNegate              DT_INT
	DwPad                DT_UINT
	GbidDesignerVariable DT_GBID
}

func (t *PlayerVariableIsSetSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidDesignerVariable.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 45,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConversationSample struct {
	SzLabel       DT_UINT
	SnoSpeaker    DT_SNO
	FlDuration    DT_FLOAT
	ESampleSource DT_ENUM
	Unk_1d3e4c1   Type_bac3964d
}

func (t *ConversationSample) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLabel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSpeaker.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 72,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESampleSource.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1d3e4c1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Anim2DFrame struct {
	HImage    DT_UINT
	RgbaColor DT_RGBACOLOR
}

func (t *Anim2DFrame) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.HImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorCollisionFlags struct {
	UDynamicFlagsNoOverlap DT_UINT
	UDynamicMyFlags        DT_UINT
}

func (t *ActorCollisionFlags) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.UDynamicFlagsNoOverlap.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.UDynamicMyFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_a4f1387e struct {
	SnoPlayerActor     DT_SNO
	SnoAnimSetOverride DT_SNO
}

func (t *Type_a4f1387e) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPlayerActor.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAnimSetOverride.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_a50877b0 struct {
	ERewardType       DT_ENUM
	SnoItemReward     DT_SNO
	SnoTrackedReward  DT_SNO
	NGoldTier         DT_INT
	NStaticGoldAmount DT_INT
}

func (t *Type_a50877b0) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ERewardType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItemReward.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTrackedReward.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 126,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.NGoldTier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NStaticGoldAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ShaderMapOverride struct {
	SzOverrideName DT_UINT
	NSortPriority  DT_INT
	Unk_d39db42    DT_INT
	DwValue        DT_UINT
}

func (t *ShaderMapOverride) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOverrideName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSortPriority.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d39db42.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_a539118b struct {
	SnoPower          DT_SNO
	DwDataID          DT_UINT
	SzName            DT_CHARARRAY
	AnnACDSource      DT_OPTIONAL[*DT_ACD_NETWORK_NAME]
	Unk_5806b77       DT_OPTIONAL[*DT_UINT]
	SnoEffectGroup    DT_OPTIONAL[*DT_SNO]
	SnoDOTEffectGroup DT_OPTIONAL[*DT_SNO]
	Unk_8e5694d       DT_OPTIONAL[*DT_UINT]
	DwStartTick       DT_OPTIONAL[*DT_UINT]
	DwDuration        DT_OPTIONAL[*DT_UINT]
	NUINumber         DT_OPTIONAL[*DT_INT]
}

func (t *Type_a539118b) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwDataID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{
		ArrayLength: 32,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnACDSource.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5806b77.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEffectGroup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDOTEffectGroup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8e5694d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwStartTick.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.NUINumber.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_a5410c31 struct {
	THeader     RequiredMessageHeader
	Unk_606dae5 DT_UINT
	Bonus       DT_CHARARRAY
}

func (t *Type_a5410c31) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_606dae5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Bonus.UnmarshalD4(r, &Options{
		ArrayLength: 32,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionIsDamageType struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType      DT_UINT
	BInverse    DT_INT
	DwPad       DT_UINT
	EDamageType DT_ENUM
}

func (t *PowerConditionIsDamageType) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDamageType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GenericBlobMessage struct {
	THeader   RequiredMessageHeader
	UBlobSize DT_WORD
}

func (t *GenericBlobMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.UBlobSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerEnterKnownMessage struct {
	THeader     RequiredMessageHeader
	Unk_dce541c DT_UINT
	Ann         DT_ACD_NETWORK_NAME
}

func (t *PlayerEnterKnownMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_a5a3cb02 struct {
	ArPlatforms DT_FIXEDARRAY[*DT_UINT]
}

func (t *Type_a5a3cb02) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPlatforms.UnmarshalD4(r, &Options{
		ArrayLength: 8,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerActorData struct {
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType                  DT_UINT
	DwPad                   DT_UINT
	SzLookName              DT_UINT
	DwShaderMapOverride     DT_UINT
	DwMarkerActorFlags      DT_UINT
	EFadeMethod             DT_ENUM
	NFadeGroup              DT_INT
	Unk_d094b9a             DT_ENUM
	Unk_529dc44             DT_ENUM
	EActorType              DT_ENUM
	EGizmoType              DT_ENUM
	Unk_940ff8e             DT_ENUM
	PtServerData            DT_VARIABLEARRAY[*MarkerServerData]
	PtMonsterActorData      DT_VARIABLEARRAY[*MarkerMonsterActorData]
	PtActorGizmoData        DT_VARIABLEARRAY[*MarkerActorGizmoData]
	PtNPCActorData          DT_VARIABLEARRAY[*MarkerNPCActorData]
	Unk_df84c5d             DT_VARIABLEARRAY[*MarkerBoneTransform]
	Unk_ff96acb             DT_ENUM
	PtRunTimeMaterialValues DT_VARIABLEARRAY[*RunTimeMaterialValues]
	Unk_c627b16             DT_INT
}

func (t *MarkerActorData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLookName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwShaderMapOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMarkerActorFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.EFadeMethod.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFadeGroup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d094b9a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_529dc44.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.EActorType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.EGizmoType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_940ff8e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtServerData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtMonsterActorData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtActorGizmoData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtNPCActorData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_df84c5d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ff96acb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtRunTimeMaterialValues.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c627b16.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SpeedTreeWindBase struct {
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
}

func (t *SpeedTreeWindBase) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_a5c62f55 struct {
	Params  DT_VECTOR4D
	Scale   DT_VECTOR4D
	I1      DT_WORD
	I2      DT_WORD
	Padding DT_FIXEDARRAY[*DT_WORD]
}

func (t *Type_a5c62f55) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Params.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Scale.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.I1.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+34, io.SeekStart); err != nil {
		return err
	}
	if err := t.I2.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Padding.UnmarshalD4(r, &Options{ArrayLength: 6}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_a5df0191 struct {
	EAttribute DT_ENUM
	FlBonus    DT_FLOAT
}

func (t *Type_a5df0191) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAttribute.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlBonus.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RepairResultsMessage struct {
	THeader RequiredMessageHeader
}

func (t *RepairResultsMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RemovedBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	Unk_224db6f           DT_ENUM
	DwRemovalReasons      DT_UINT
}

func (t *RemovedBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_224db6f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwRemovalReasons.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GroupRegionEntry_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*GroupRegionEntry]
}

func (t *GroupRegionEntry_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventDetachObject struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType         DT_UINT
	DwPad          DT_UINT
	TConditions    TriggerConditions
	FGenerated     DT_INT
	Unk_6cba752    DT_INT
	Unk_e560b0b    DT_UINT
	Unk_adbc22e    DT_INT
	DwActorID      DT_UINT
	DwID           DT_UINT
	FEnableRagdoll DT_INT
	TRagdollParams EnableRagdollParams
}

func (t *TriggerEventDetachObject) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_adbc22e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwActorID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.FEnableRagdoll.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.TRagdollParams.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type KeyedDungeonTierEntry_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*KeyedDungeonTierEntry]
}

func (t *KeyedDungeonTierEntry_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerClassSorcererData struct {
	NUnlockQuestLevel DT_INT
	SnoUnlockQuest    DT_SNO
	Unk_99110e9       DT_UINT
	Unk_490df55       DT_VARIABLEARRAY[*Type_525de28e]
}

func (t *PlayerClassSorcererData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NUnlockQuestLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoUnlockQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_99110e9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_490df55.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ClassInfoDataArray struct {
	Unk_db96ab2 DT_INT
	HClassTitle DT_UINT
	HOverview   DT_UINT
	HResource   DT_UINT
	ArPlayStyle DT_VARIABLEARRAY[*ClassInfoPlayStyle]
}

func (t *ClassInfoDataArray) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_db96ab2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.HClassTitle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.HOverview.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.HResource.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPlayStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GBIDHeader struct {
	SzName DT_CHARARRAY
	Gbid   DT_GBID
}

func (t *GBIDHeader) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{
		ArrayLength: 256,
		Flags:       5,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.Gbid.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HotbarButtonData struct {
	Unk_4ba1909 DT_SNO
	Unk_ebcb8cb DT_SNO
	M_annItem   DT_ACD_NETWORK_NAME
}

func (t *HotbarButtonData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4ba1909.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ebcb8cb.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_annItem.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type StoryboardDefinition struct {
	TRootTracks     Type_36030d2d
	ArChildControls DT_VARIABLEARRAY[*Type_87385a6d]
	ArGenericTracks DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *StoryboardDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TRootTracks.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArChildControls.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArGenericTracks.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamFloatRangeInside struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
	FlRange    DT_FLOAT
}

func (t *ScriptEventParamFloatRangeInside) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UITutorialStyle struct {
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
}

func (t *UITutorialStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CurrencyItem struct {
	SnoItem    DT_SNO
	UMinAmount DT_INT64
}

func (t *CurrencyItem) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItem.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.UMinAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIKeyMappingButtonStyle struct {
	// Inherits UIButtonStyle
	// Inherits UITextStyle
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	TFont                     UIControlFont
	Unk_4741819               DT_TAGMAP[*DT_ENUM]
	TIcon                     UIControlIcon
	TClickSounds              Type_98c23c41
	Unk_10f81f0               DT_TAGMAP[*DT_ENUM]
	Unk_94ea125               DT_TAGMAP[*DT_ENUM]
}

func (t *UIKeyMappingButtonStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFont.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4741819.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.TIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.TClickSounds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_10f81f0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_94ea125.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerNoSpawnVolumeData struct {
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	Unk_77fbbf4 DT_ENUM
	Unk_29b00b2 DT_VARIABLEARRAY[*DT_GBID]
	Unk_158fc1a DT_INT
	Unk_b823428 DT_FIXEDARRAY[*DT_INT]
}

func (t *MarkerNoSpawnVolumeData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77fbbf4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_29b00b2.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 20,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158fc1a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b823428.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimTreeNodeBase struct {
	// Inherits PolymorphicBase
	DwType               DT_UINT
	DwPad                DT_UINT
	DwID                 DT_UINT
	ENodeType            DT_ENUM
	EAnimLayer           DT_ENUM
	PtChildren           DT_VARIABLEARRAY[*AnimTreeNodeChild]
	EBlendParam          DT_ENUM
	ESecondaryBlendParam DT_ENUM
	Unk_5733828          DT_VARIABLEARRAY[*AnimTreeBlendTriangle]
	TMinBlend            DT_VECTOR2D
	TMaxBlend            DT_VECTOR2D
	TBlendIn             BlendSettings
	TBlendOut            BlendSettings
	Unk_dd1cd6f          DT_INT
	NSyncGroupIndex      DT_INT
}

func (t *AnimTreeNodeBase) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.ENodeType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAnimLayer.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtChildren.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendParam.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESecondaryBlendParam.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5733828.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMinBlend.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMaxBlend.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.TBlendIn.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.TBlendOut.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dd1cd6f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSyncGroupIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SkillTreeNodeMessage struct {
	THeader     RequiredMessageHeader
	DwNodeIndex DT_UINT
}

func (t *SkillTreeNodeMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNodeIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorPreloadHelper struct {
	SnoActor       DT_SNO
	TCustomization ActorCustomizationHelper
	TSlot          SerialDataInfo
}

func (t *ActorPreloadHelper) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCustomization.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSlot.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventRestoreCamera struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
}

func (t *TriggerEventRestoreCamera) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_a8e85f45 struct {
	SnoMaterialValue DT_SNO
	Value            DT_FLOAT
	Unk_2362b28      DT_INT
}

func (t *Type_a8e85f45) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMaterialValue.UnmarshalD4(r, &Options{Group: 81}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Value.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2362b28.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIScrollbarStyle struct {
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	Unk_171f018               DT_TAGMAP[*DT_ENUM]
}

func (t *UIScrollbarStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_171f018.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_a9417475 struct {
	IdQuestID     DT_ENUM
	SnoQuest      DT_SNO
	DwPhaseUID    DT_UINT
	DwCallbackUID DT_UINT
}

func (t *Type_a9417475) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdQuestID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPhaseUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwCallbackUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ValidComponent struct {
	TComponent DT_UINT
}

func (t *ValidComponent) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TComponent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_a9bcdb53 struct{}

func (t *Type_a9bcdb53) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+1, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_aa55cd98 struct {
	SzData DT_CSTRING[*DT_BYTE]
}

func (t *Type_aa55cd98) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupKeyData struct {
	// Inherits PolymorphicBase
	DwType     DT_UINT
	DwPad      DT_UINT
	ArKeyItems DT_VARIABLEARRAY[*EffectGroupKey]
}

func (t *EffectGroupKeyData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArKeyItems.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PreApplyBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *PreApplyBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LayerInstanceChunk struct {
	Unk_7934bc2 Type_cd5b4347
	Unk_2f217b0 DT_INT
}

func (t *LayerInstanceChunk) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7934bc2.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2f217b0.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ReputationValuePair struct {
	SnoReputation DT_SNO
	NValue        DT_INT
}

func (t *ReputationValuePair) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoReputation.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 105,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnEndPowerCallback struct {
	// Inherits PowerCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	BCouldHaveRagdolled   DT_INT
}

func (t *OnEndPowerCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCouldHaveRagdolled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ItemSalvageLevel_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*ItemSalvageLevel]
}

func (t *ItemSalvageLevel_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_ab8347fa struct {
	SnoActor           DT_SNO
	SnoObserver        DT_SNO
	ERenderContext     DT_ENUM
	BRotationEnabled   DT_INT
	BStaticActor       DT_INT
	BFullScreenElement DT_INT
}

func (t *Type_ab8347fa) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoObserver.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 26,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ERenderContext.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.BRotationEnabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BStaticActor.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BFullScreenElement.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorCritterData struct {
	FScaredOfPlayers           DT_INT
	FlSpeedWander              DT_FLOAT
	FlSpeedRun                 DT_FLOAT
	TWanderDelayRange          DT_RANGE[*DT_FLOAT]
	FlWanderTooLongTime        DT_FLOAT
	TWanderRadiusRange         DT_RANGE[*DT_FLOAT]
	FlScaredRadius             DT_FLOAT
	TScaredTimeRange           DT_RANGE[*DT_FLOAT]
	FCanBeSquished             DT_INT
	Unk_d8c8fc5                DT_RANGE[*DT_FLOAT]
	FRunAnimWhenScared         DT_INT
	FlLethalExplosionMagnitude DT_FLOAT
}

func (t *ActorCritterData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FScaredOfPlayers.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSpeedWander.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSpeedRun.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.TWanderDelayRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlWanderTooLongTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TWanderRadiusRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlScaredRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.TScaredTimeRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FCanBeSquished.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d8c8fc5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FRunAnimWhenScared.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLethalExplosionMagnitude.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestCallbackRegion struct {
	EType              DT_ENUM
	VPolygonPoints     DT_VARIABLEARRAY[*DT_VECTOR2D]
	VCenterPos         DT_VECTOR2D
	FlRadius           DT_FLOAT
	BValid             DT_INT
	BManuallySpecified DT_INT
}

func (t *QuestCallbackRegion) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.VPolygonPoints.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.VCenterPos.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.BValid.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.BManuallySpecified.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_abec9f65 struct {
	Unk_cb247f0 DT_INT
	Unk_511d1b4 DT_INT
}

func (t *Type_abec9f65) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cb247f0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_511d1b4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NPCItems struct {
	SnoMainHand DT_SNO
	SnoOffHand  DT_SNO
}

func (t *NPCItems) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMainHand.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOffHand.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_ac1cf1ab struct {
	Unk_bbb329e DT_CSTRING[*DT_BYTE]
	TStyle      DT_POLYMORPHIC_VARIABLEARRAY[*UIControlStyle]
}

func (t *Type_ac1cf1ab) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bbb329e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_ac30acdf struct {
	M_aVertices               DT_INT64
	M_aFaces                  DT_INT64
	M_aDistanceConstraints    DT_INT64
	M_aBendingConstraints     DT_INT64
	M_aVertexMap              DT_INT64
	M_aCapsules               DT_INT64
	M_aPlanes                 DT_INT64
	Unk_15437b6               DT_INT64
	M_aAnchorMap              DT_INT64
	M_name                    DT_FIXEDARRAY[*DT_BYTE]
	M_vertexCount             DT_INT
	M_faceCount               DT_INT
	Unk_d4fc6fe               DT_INT
	M_distanceConstraintCount DT_INT
	M_bendingConstraintCount  DT_INT
	Unk_4c2d410               DT_INT
	Unk_5f25c6                DT_INT
	M_boneCount               DT_INT
	M_anchorCount             DT_INT
	M_capsuleCount            DT_INT
	M_planeCount              DT_INT
	M_area                    DT_FLOAT
}

func (t *Type_ac30acdf) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_aVertices.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_aFaces.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_aDistanceConstraints.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_aBendingConstraints.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_aVertexMap.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_aCapsules.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_aPlanes.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_15437b6.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_aAnchorMap.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_name.UnmarshalD4(r, &Options{ArrayLength: 32}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_vertexCount.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_faceCount.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d4fc6fe.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_distanceConstraintCount.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_bendingConstraintCount.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4c2d410.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5f25c6.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_boneCount.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_anchorCount.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_capsuleCount.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_planeCount.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_area.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIRadioButtonGroupStyle struct {
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	Unk_c8d49ac               DT_TAGMAP[*DT_ENUM]
}

func (t *UIRadioButtonGroupStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c8d49ac.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_ac560e08 struct {
	THeader      RequiredMessageHeader
	DwItemAmount DT_INT64
}

func (t *Type_ac560e08) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwItemAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MaterialBoolValue struct {
	Value DT_INT
}

func (t *MaterialBoolValue) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Value.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventSetHelmVisibility struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
	Unk_279aa5a DT_INT
	DwActorID   DT_UINT
	BHideHelm   DT_INT
}

func (t *TriggerEventSetHelmVisibility) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_279aa5a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwActorID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.BHideHelm.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SubzoneModifierTagsEntry_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*SubzoneModifierTagsEntry]
}

func (t *SubzoneModifierTagsEntry_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameVariableValueSubcondition struct {
	// Inherits Type_d3c3637f
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType               DT_UINT
	BNegate              DT_INT
	EComparisonOp        DT_ENUM
	DwPad                DT_UINT
	GbidDesignerVariable DT_GBID
	NValue               DT_INT
}

func (t *GameVariableValueSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidDesignerVariable.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 45,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.NValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_aced015b struct {
	VGravity                                DT_VECTOR3D
	FlGravityPadding                        DT_FLOAT
	Unk_cc27d12                             DT_VECTOR3D
	Unk_92fd45                              DT_FLOAT
	PtInvTransform                          DT_VECTOR4D
	BoneIndex                               DT_WORD
	NIterations                             DT_INT
	Unk_88a73dd                             DT_FLOAT
	Unk_3313228                             DT_FLOAT
	FlStretchingStiffness                   DT_FLOAT
	FlHorizontalStiffness                   DT_FLOAT
	FlShearStiffness                        DT_FLOAT
	FlBendingStiffness                      DT_FLOAT
	FlExplosionFactor                       DT_FLOAT
	FlImpulseCap                            DT_FLOAT
	FlImpulseFactor                         DT_FLOAT
	FlWindFactor                            DT_FLOAT
	FlDragFactor                            DT_FLOAT
	FlLiftFactor                            DT_FLOAT
	FlDampingFactor                         DT_FLOAT
	FlSkinOffset                            DT_FLOAT
	FlSkinExponent                          DT_FLOAT
	FlSkinStiffness                         DT_FLOAT
	FlAttachmentStiffness                   DT_FLOAT
	Unk_914f7cd                             DT_FLOAT
	Unk_b5ff484                             DT_FLOAT
	PtAttackersPerPlayerThrottlingThreshold DT_FLOAT
	Unk_602c192                             DT_FLOAT
	FlDensity                               DT_FLOAT
	FlFrictionScale                         DT_FLOAT
	FFlatten                                DT_INT
	Unk_1e00090                             DT_INT
	FIsStatic                               DT_INT
	Unk_cb063a7                             DT_INT
	Unk_73a63cf                             DT_INT
	ESolverOverride                         DT_ENUM
	EBendModel                              DT_ENUM
	FlStructurePadding1                     DT_FLOAT
	FlStructurePadding2                     DT_FLOAT
}

func (t *Type_aced015b) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.VGravity.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGravityPadding.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cc27d12.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_92fd45.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtInvTransform.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.BoneIndex.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.NIterations.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_88a73dd.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3313228.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlStretchingStiffness.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHorizontalStiffness.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlShearStiffness.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlBendingStiffness.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlExplosionFactor.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlImpulseCap.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlImpulseFactor.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlWindFactor.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDragFactor.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLiftFactor.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDampingFactor.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSkinOffset.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSkinExponent.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSkinStiffness.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAttachmentStiffness.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_914f7cd.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b5ff484.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtAttackersPerPlayerThrottlingThreshold.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_602c192.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDensity.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFrictionScale.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.FFlatten.UnmarshalD4(r, &Options{Flags: 8388624}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1e00090.UnmarshalD4(r, &Options{Flags: 8388624}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.FIsStatic.UnmarshalD4(r, &Options{Flags: 8388624}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cb063a7.UnmarshalD4(r, &Options{Flags: 8388624}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_73a63cf.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESolverOverride.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBendModel.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlStructurePadding1.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlStructurePadding2.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GeoSet struct {
	PtSubObjects  DT_VARIABLEARRAY[*SubObject]
	Unk_9d1d596   DT_VARIABLEARRAY[*DT_INT]
	Unk_79283f    DT_INT
	Unk_af1153d   DT_INT
	FlLODDistance DT_FLOAT
}

func (t *GeoSet) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtSubObjects.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9d1d596.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_79283f.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af1153d.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLODDistance.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_ad008e7e struct {
	THeader RequiredMessageHeader
	UToken  DT_UINT
	EError  DT_ENUM
}

func (t *Type_ad008e7e) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.UToken.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.EError.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_ad4d33a9 struct {
	NWidth      DT_INT
	NHeight     DT_INT
	NDepth      DT_INT
	FlGridSize  DT_FLOAT
	WpOrigin    DT_VECTOR3D
	Unk_aa0958e DT_VARIABLEARRAY[*DT_WORD]
	Unk_aa09583 DT_VARIABLEARRAY[*DT_WORD]
	Unk_aa0957e DT_VARIABLEARRAY[*DT_WORD]
	Unk_dd3cf4b DT_VARIABLEARRAY[*DT_WORD]
	Unk_dd3cf40 DT_VARIABLEARRAY[*DT_WORD]
	Unk_dd3cf3b DT_VARIABLEARRAY[*DT_WORD]
}

func (t *Type_ad4d33a9) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NWidth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NDepth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGridSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpOrigin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aa0958e.UnmarshalD4(r, &Options{Flags: 2097153}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aa09583.UnmarshalD4(r, &Options{Flags: 2097153}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aa0957e.UnmarshalD4(r, &Options{Flags: 2097153}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dd3cf4b.UnmarshalD4(r, &Options{Flags: 2097153}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dd3cf40.UnmarshalD4(r, &Options{Flags: 2097153}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dd3cf3b.UnmarshalD4(r, &Options{Flags: 2097153}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MountACDInfo struct {
	SnoMountPower DT_SNO
	SnoItems      DT_FIXEDARRAY[*DT_SNO]
}

func (t *MountACDInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMountPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItems.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       9,
		Group:       73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerTradeMessage struct {
	THeader        RequiredMessageHeader
	UGameAccountId DT_OPTIONAL[*DT_UINT]
	UTradeId       DT_OPTIONAL[*DT_UINT]
	AnnItem        DT_OPTIONAL[*DT_ACD_NETWORK_NAME]
	Currency       DT_OPTIONAL[*Currency]
	Quantity       DT_OPTIONAL[*DT_INT64]
}

func (t *PlayerTradeMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.UGameAccountId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.UTradeId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnItem.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Currency.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Quantity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DesignerVariableChanged struct {
	THeader              RequiredMessageHeader
	GbidDesignerVariable DT_GBID
	TPayload             DesignerVariablePayload
}

func (t *DesignerVariableChanged) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidDesignerVariable.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 45,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPayload.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_adde70b7 struct {
	THeader      RequiredMessageHeader
	DwItemAmount DT_INT64
}

func (t *Type_adde70b7) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwItemAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_adf79afe struct {
	// Inherits Type_4e43aa7a
	DwType      DT_UINT
	Unk_9b2bc26 Type_80fa280c
	Unk_77ed19a DT_ENUM
	DwPad       DT_UINT
}

func (t *Type_adf79afe) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b2bc26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77ed19a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SetIdleAnimationMessage struct {
	THeader         RequiredMessageHeader
	Ann             DT_ACD_NETWORK_NAME
	SnoPowerAnimKey DT_SNO
	Unk_fefc30f     DT_OPTIONAL[*DT_INT]
}

func (t *SetIdleAnimationMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerAnimKey.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fefc30f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_ae75ccfd struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType       DT_UINT
	DwPad        DT_UINT
	TConditions  TriggerConditions
	FGenerated   DT_INT
	Unk_6cba752  DT_INT
	Unk_e560b0b  DT_UINT
	Unk_77f81b0  StringLabelHandleEx
	SnoPOICamera DT_SNO
}

func (t *Type_ae75ccfd) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77f81b0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPOICamera.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 46,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AmbientSoundDefinition struct {
	SnoBackground         DT_SNO
	TRandomSounds         DT_VARIABLEARRAY[*RandomAmbientSoundParams]
	TDynamicGameParameter DynamicGameParameter
	TDynamicAudioState    DynamicAudioState
}

func (t *AmbientSoundDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoBackground.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TRandomSounds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDynamicGameParameter.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDynamicAudioState.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HeroDetailsArray struct {
	ArEntries DT_VARIABLEARRAY[*HeroDetailsEntry]
}

func (t *HeroDetailsArray) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptMessageMap struct {
	EEventType        DT_ENUM
	DwListenerFlags   DT_UINT
	SnoCondition      DT_SNO
	Unk_c3ba01d       DT_INT
	FlCooldownSeconds DT_FLOAT
	ArEventFilters    DT_VARIABLEARRAY[*ScriptMessageMapFilter]
	Unk_492729e       DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	Unk_9927fd3       DT_UINT
}

func (t *ScriptMessageMap) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EEventType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwListenerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c3ba01d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlCooldownSeconds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArEventFilters.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_492729e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9927fd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_aef2f516 struct {
	NFrameStart     DT_INT
	NFrameEnd       DT_INT
	Unk_a45e6bd     DT_FLOAT
	Unk_36bc3de     DT_FLOAT
	BUseTargetActor DT_INT
	Unk_737a63      DT_INT
	Unk_e3bef92     DT_UINT
	Unk_8dadb11     DT_VECTOR3D
	FlZoom          DT_FLOAT
}

func (t *Type_aef2f516) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFrameStart.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFrameEnd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a45e6bd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_36bc3de.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BUseTargetActor.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_737a63.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e3bef92.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8dadb11.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlZoom.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HeroDetailsEntry struct {
	DwID        DT_UINT
	ECurrency   DT_ENUM
	BShowLimit  DT_INT
	ArValues    DT_VARIABLEARRAY[*HeroDetailsValue]
	Unk_6ae314e DT_INT
	BIsCoreStat DT_INT
	Unk_40ddaae DT_FIXEDARRAY[*DT_INT]
}

func (t *HeroDetailsEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECurrency.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.BShowLimit.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArValues.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6ae314e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsCoreStat.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_40ddaae.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WorldStateSubcondition struct {
	// Inherits Type_d3c3637f
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType        DT_UINT
	BNegate       DT_INT
	EComparisonOp DT_ENUM
	DwPad         DT_UINT
	SnoWorldState DT_SNO
	NValue        DT_INT
}

func (t *WorldStateSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorldState.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 86,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.NValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionHasDot struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType      DT_UINT
	BInverse    DT_INT
	DwPad       DT_UINT
	ESubject    DT_ENUM
	EDamageType DT_ENUM
	Unk_9d0a7aa DT_INT
}

func (t *PowerConditionHasDot) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDamageType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9d0a7aa.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_af47e1c0 struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType      DT_UINT
	BInverse    DT_INT
	DwPad       DT_UINT
	ESubject    DT_ENUM
	SnoPower    DT_SNO
	Unk_e0aad12 DT_UINT
}

func (t *Type_af47e1c0) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e0aad12.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MaterialValueDefinition struct{}

func (t *MaterialValueDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_af6042ce struct {
	SzDrawHook DT_CSTRING[*DT_BYTE]
}

func (t *Type_af6042ce) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzDrawHook.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_af6bc267 struct {
	FlHaze      DT_FLOAT
	Unk_b61e136 DT_FLOAT
	Unk_6fc9e50 DT_RGBACOLOR
	Unk_3a37ef6 DT_RGBACOLOR
	Unk_bbf28fc DT_INT
	Unk_98f5aef DT_FLOAT
	Unk_c4c9235 DT_FLOAT
	Unk_d79b9ce DT_FLOAT
	Unk_cb0e626 DT_FLOAT
	Unk_cb0e528 DT_FLOAT
	Unk_467a561 DT_FLOAT
	Unk_d4fb023 DT_FLOAT
}

func (t *Type_af6bc267) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHaze.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b61e136.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6fc9e50.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3a37ef6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bbf28fc.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_98f5aef.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c4c9235.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d79b9ce.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cb0e626.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cb0e528.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_467a561.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d4fb023.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_af6f9d33 struct {
	// Inherits PowerCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	BCouldHaveRagdolled   DT_INT
}

func (t *Type_af6f9d33) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCouldHaveRagdolled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_af88dbb5 struct {
	// Inherits PowerCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	BCouldHaveRagdolled   DT_INT
}

func (t *Type_af88dbb5) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCouldHaveRagdolled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type IKBone struct {
	NBoneIndex DT_INT
}

func (t *IKBone) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NBoneIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type IKData struct {
	Unk_77f305a DT_FLOAT
	Unk_31b7df8 DT_FLOAT
	ArIKLimbs   DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	Unk_b317460 Type_5535d75
	Unk_871eac9 Type_357c091e
}

func (t *IKData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77f305a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_31b7df8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArIKLimbs.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b317460.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_871eac9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ACDTranslateFacingMessage struct {
	THeader     RequiredMessageHeader
	Ann         DT_ACD_NETWORK_NAME
	ADesiredYaw DT_FLOAT
	BSnapFacing DT_INT
}

func (t *ACDTranslateFacingMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ADesiredYaw.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.BSnapFacing.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerLink struct {
	NMarkerID    DT_INT
	DwGroupHash  DT_UINT
	NMarkerIndex DT_INT
}

func (t *MarkerLink) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMarkerID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwGroupHash.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMarkerIndex.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HeroDetailsValue struct {
	TFormula    DT_STRING_FORMULA
	Unk_d55170  DT_UINT
	Unk_62967bd DT_INT
	Unk_9554429 DT_INT
	Unk_395cf3a DT_ENUM
}

func (t *HeroDetailsValue) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFormula.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d55170.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_62967bd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9554429.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_395cf3a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionHasDamage struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
}

func (t *PowerConditionHasDamage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionIsAutoCast struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
}

func (t *PowerConditionIsAutoCast) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EyeColorDefinition struct {
	Unk_509016f              DT_RGBACOLOR
	NSortOrder               DT_INT
	FUsableByClass           DT_FIXEDARRAY[*DT_INT]
	RgbaIrisInner            DT_RGBACOLOR
	RgbaIrisOuter            DT_RGBACOLOR
	FlIrisBrightness         DT_FLOAT
	FlIrisRotation           DT_FLOAT
	FlIrisRoughness          DT_FLOAT
	FlIrisShadowIntensity    DT_FLOAT
	Unk_ca1b6fd              DT_FLOAT
	FlLimbusBlur             DT_FLOAT
	FlLimbusBrightness       DT_FLOAT
	FlLimbusThickness        DT_FLOAT
	FlPupilSize              DT_FLOAT
	Unk_ef6e5d4              DT_FLOAT
	Unk_cde5290              DT_FLOAT
	FlScleraBrightness       DT_FLOAT
	FlScleraRoughness        DT_FLOAT
	FlScleraEmissiveStrength DT_FLOAT
	SnoEmissiveMask          DT_SNO
}

func (t *EyeColorDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_509016f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSortOrder.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUsableByClass.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaIrisInner.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaIrisOuter.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlIrisBrightness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlIrisRotation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlIrisRoughness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlIrisShadowIntensity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ca1b6fd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLimbusBlur.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLimbusBrightness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLimbusThickness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPupilSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ef6e5d4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cde5290.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlScleraBrightness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlScleraRoughness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlScleraEmissiveStrength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEmissiveMask.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DungeonAffixRange struct {
	TTierRange DT_RANGE[*DT_INT]
}

func (t *DungeonAffixRange) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTierRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerKickTimerMessage struct {
	THeader              RequiredMessageHeader
	DwLastKickAttempt    DT_UINT
	DwLastSuccessfulKick DT_UINT
}

func (t *PlayerKickTimerMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwLastKickAttempt.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwLastSuccessfulKick.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b0ba2b42 struct {
	SzOnL1             DT_CSTRING[*DT_BYTE]
	SzOnL2             DT_CSTRING[*DT_BYTE]
	SzOnL3             DT_CSTRING[*DT_BYTE]
	SzOnR1             DT_CSTRING[*DT_BYTE]
	SzOnR2             DT_CSTRING[*DT_BYTE]
	SzOnR3             DT_CSTRING[*DT_BYTE]
	SzOnButton1        DT_CSTRING[*DT_BYTE]
	SzOnButton2        DT_CSTRING[*DT_BYTE]
	SzOnButton3        DT_CSTRING[*DT_BYTE]
	SzOnButton4        DT_CSTRING[*DT_BYTE]
	SzOnDPadUp         DT_CSTRING[*DT_BYTE]
	SzOnDPadRight      DT_CSTRING[*DT_BYTE]
	SzOnDPadLeft       DT_CSTRING[*DT_BYTE]
	SzOnDPadDown       DT_CSTRING[*DT_BYTE]
	SzOnBack           DT_CSTRING[*DT_BYTE]
	SzOnStart          DT_CSTRING[*DT_BYTE]
	Unk_e959ede        DT_CSTRING[*DT_BYTE]
	Unk_e1fae12        DT_CSTRING[*DT_BYTE]
	Unk_4cbd064        DT_CSTRING[*DT_BYTE]
	Unk_4dde8e5        DT_CSTRING[*DT_BYTE]
	Unk_4f00166        DT_CSTRING[*DT_BYTE]
	Unk_2cac42a        DT_CSTRING[*DT_BYTE]
	Unk_2dcdcab        DT_CSTRING[*DT_BYTE]
	Unk_2eef52c        DT_CSTRING[*DT_BYTE]
	Unk_24240f4        DT_CSTRING[*DT_BYTE]
	Unk_2545975        DT_CSTRING[*DT_BYTE]
	Unk_26671f6        DT_CSTRING[*DT_BYTE]
	Unk_2788a77        DT_CSTRING[*DT_BYTE]
	Unk_8d1cc85        DT_CSTRING[*DT_BYTE]
	Unk_9e50fde        DT_CSTRING[*DT_BYTE]
	Unk_e5c70eb        DT_CSTRING[*DT_BYTE]
	Unk_54f4918        DT_CSTRING[*DT_BYTE]
	Unk_aaebdb8        DT_CSTRING[*DT_BYTE]
	SzFirstActiveChild DT_CSTRING[*DT_BYTE]
	Unk_c0f151b        DT_CSTRING[*DT_BYTE]
	Unk_3b59e4f        DT_CSTRING[*DT_BYTE]
	Unk_9a1cd2f        DT_INT
	Unk_c7baf30        DT_INT
	Unk_f559131        DT_INT
	Unk_e2699f5        DT_INT
	Unk_1007bf6        DT_INT
	Unk_3da5df7        DT_INT
	Unk_b3c98bf        DT_INT
	Unk_e167ac0        DT_INT
	Unk_f05cc1         DT_INT
	Unk_3ca3ec2        DT_INT
	Unk_6edded0        DT_INT
	Unk_be404a9        DT_INT
	Unk_9877a36        DT_INT
	Unk_f32fde3        DT_INT
	Unk_b338683        DT_INT
	Unk_e016b80        DT_INT
	Unk_3087066        DT_INT
	Unk_3a9209a        DT_INT
	SzLStickHandler    DT_CSTRING[*DT_BYTE]
	Unk_5e4bcce        DT_CSTRING[*DT_BYTE]
	SzRStickHandler    DT_CSTRING[*DT_BYTE]
	Unk_9b3146         DT_CSTRING[*DT_BYTE]
	Unk_69bea99        DT_CSTRING[*DT_BYTE]
	Unk_4d22020        DT_CSTRING[*DT_BYTE]
	Unk_d7b653         DT_CSTRING[*DT_BYTE]
}

func (t *Type_b0ba2b42) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnL1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnL2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnL3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnR1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnR2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnR3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnButton1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnButton2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnButton3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnButton4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnDPadUp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnDPadRight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnDPadLeft.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnDPadDown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnBack.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnStart.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e959ede.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e1fae12.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4cbd064.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4dde8e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+320, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4f00166.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+336, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2cac42a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+352, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2dcdcab.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+368, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2eef52c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+384, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_24240f4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+400, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2545975.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+416, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_26671f6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+432, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2788a77.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+448, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8d1cc85.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+464, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9e50fde.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+480, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e5c70eb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+496, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54f4918.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+512, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aaebdb8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+528, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzFirstActiveChild.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+544, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c0f151b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+560, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3b59e4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+576, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a1cd2f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+580, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c7baf30.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+584, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f559131.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+588, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e2699f5.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+592, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1007bf6.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+596, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3da5df7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+600, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b3c98bf.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+604, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e167ac0.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+608, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f05cc1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+612, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3ca3ec2.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+616, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6edded0.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+620, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_be404a9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+624, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9877a36.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+628, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f32fde3.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+632, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b338683.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+636, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e016b80.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+640, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3087066.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+644, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3a9209a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+648, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLStickHandler.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+664, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5e4bcce.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+680, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzRStickHandler.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+696, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b3146.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+712, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_69bea99.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+728, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4d22020.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+744, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d7b653.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+760, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIColorPickerStyle struct {
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	Unk_6f50cd1               DT_TAGMAP[*DT_ENUM]
}

func (t *UIColorPickerStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6f50cd1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b0f0e8cd struct {
	// Inherits Type_303dbf00
	DwType      DT_UINT
	Unk_9b2bc26 Type_340f2b52
	Unk_77ed19a DT_ENUM
	DwPad       DT_UINT
}

func (t *Type_b0f0e8cd) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b2bc26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77ed19a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b0f2a959 struct {
	THeader       RequiredMessageHeader
	UCommandFrame DT_UINT
}

func (t *Type_b0f2a959) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.UCommandFrame.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WeaponExpertiseRanks_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*WeaponExpertiseRanks]
}

func (t *WeaponExpertiseRanks_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b14ea0b3 struct {
	THeader                RequiredMessageHeader
	Unk_b4ca56             DT_ENUM
	ECrafterLevelCondition DT_ENUM
	SnoPowerAdded          DT_SNO
	SnoPowerRemoved        DT_SNO
}

func (t *Type_b14ea0b3) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4ca56.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECrafterLevelCondition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerAdded.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerRemoved.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestFollower struct {
	SnoActor       DT_SNO
	TSpawnBehavior Type_da8a2315
	ArPhases       DT_VARIABLEARRAY[*Type_bc83f219]
}

func (t *QuestFollower) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSpawnBehavior.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPhases.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RotationCurve struct {
	PtKeysComp DT_VARIABLEARRAY[*DT_BYTE]
}

func (t *RotationCurve) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtKeysComp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestPhasePreloadHelper struct {
	TSNONames SerialDataInfo
}

func (t *QuestPhasePreloadHelper) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSNONames.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BountyData struct {
	SnoQuest         DT_SNO
	SnoWorldState    DT_SNO
	NValue           DT_INT
	EBountyType      DT_ENUM
	SnoBountySubzone DT_SNO
}

func (t *BountyData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorldState.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 86,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBountyType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoBountySubzone.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CarryableGizmoData struct {
	// Inherits NamedGizmoData
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
	SnoCarryablePower            DT_SNO
	Unk_aa86ba7                  DT_INT
	FAttachCarryableToPlayer     DT_INT
	THardpointLink               HardpointLink
}

func (t *CarryableGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCarryablePower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aa86ba7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.FAttachCarryableToPlayer.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b1bdda39 struct {
	// Inherits Type_d4213c9b
	DwType      DT_UINT
	Unk_9b2bc26 Type_80554fed
	Unk_77ed19a DT_ENUM
	DwPad       DT_UINT
}

func (t *Type_b1bdda39) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b2bc26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77ed19a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b1cccfae struct {
	ArCamps          DT_VARIABLEARRAY[*DT_SNO]
	ArDungeons       DT_VARIABLEARRAY[*DT_SNO]
	GbidHiddenCaches DT_VARIABLEARRAY[*DT_GBID]
	ArSideQuests     DT_VARIABLEARRAY[*DT_SNO]
	ArWaypoints      DT_VARIABLEARRAY[*DT_SNO]
	ArFogOfWar       DT_VARIABLEARRAY[*DT_SNO]
	ArRewardData     DT_FIXEDARRAY[*Type_a1e2d5ab]
}

func (t *Type_b1cccfae) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCamps.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArDungeons.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidHiddenCaches.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 28,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSideQuests.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArWaypoints.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArFogOfWar.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 123,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArRewardData.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+336, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerAxeMapIconData struct {
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
}

func (t *MarkerAxeMapIconData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OffHandItemLabelSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType     DT_UINT
	BNegate    DT_INT
	DwPad      DT_UINT
	NItemLabel DT_ENUM
}

func (t *OffHandItemLabelSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NItemLabel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConstraintLink struct {
	DwHash DT_UINT
}

func (t *ConstraintLink) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwHash.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MapRevealSceneMessage struct {
	THeader      RequiredMessageHeader
	SnoScene     DT_SNO
	Aabb         AABB
	IdSWorld     DT_SHARED_SERVER_DATA_ID
	BRevealed    DT_INT
	Unk_8a2f554  DT_BYTE
	BExterior    DT_INT
	Unk_6646a2   DT_FIXEDARRAY[*DT_SNO]
	SnoLevelArea DT_OPTIONAL[*DT_SNO]
}

func (t *MapRevealSceneMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoScene.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 33,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Aabb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSWorld.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.BRevealed.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8a2f554.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.BExterior.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6646a2.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       9,
		Group:       22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelArea.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestChainStep struct {
	DwID     DT_UINT
	SnoQuest DT_SNO
}

func (t *QuestChainStep) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SummonActorEntry struct {
	DwWeight       DT_UINT
	SnoSummonActor DT_SNO
	TSummonRange   DT_RANGE[*DT_UINT]
	Unk_100c8cd    DT_UINT
	SnoCondition   DT_SNO
}

func (t *SummonActorEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwWeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSummonActor.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSummonRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_100c8cd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type InvLoc struct {
	AnnOwner DT_ACD_NETWORK_NAME
	ESlot    DT_ENUM
	NSlotX   DT_INT
	NSlotY   DT_INT
}

func (t *InvLoc) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnOwner.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESlot.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSlotX.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSlotY.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type InventoryRequestMoveMessage struct {
	THeader   RequiredMessageHeader
	AnnItem   DT_ACD_NETWORK_NAME
	TLocation InvLoc
}

func (t *InventoryRequestMoveMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnItem.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLocation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b2d29bdc struct {
	Unk_a8652e7 DT_INT64
	Unk_e037d99 DT_ENUM
	Unk_cc3458a DT_ENUM
	EStyle      DT_ENUM
}

func (t *Type_b2d29bdc) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a8652e7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e037d99.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cc3458a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ShaderPermutation struct {
	Unk_e3331b5 DT_VARIABLEARRAY[*DT_ENUM]
	Unk_a2b58a8 DT_VARIABLEARRAY[*DT_ENUM]
	TPrograms   DT_FIXEDARRAY[*Type_6b603dda]
}

func (t *ShaderPermutation) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e3331b5.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a2b58a8.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPrograms.UnmarshalD4(r, &Options{ArrayLength: 5}); err != nil {
		return err
	}
	if _, err := r.Seek(p+472, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BossDoorInstanceData struct {
	SnoNonParticipatingEffectGroup DT_SNO
	SnoParticipatingEffectGroup    DT_SNO
}

func (t *BossDoorInstanceData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoNonParticipatingEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoParticipatingEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimTreeOverride struct {
	PtNodeOverrides DT_VARIABLEARRAY[*AnimTreeNodeOverrideWrapper]
}

func (t *AnimTreeOverride) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtNodeOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LevelAreaTagSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType      DT_UINT
	BNegate     DT_INT
	DwPad       DT_UINT
	Unk_fb4d244 DT_GBID
}

func (t *LevelAreaTagSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fb4d244.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 55,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BountyDataMessage struct {
	THeader       RequiredMessageHeader
	SnoBounty     DT_SNO
	SnoRewardItem DT_SNO
	DwEndTime     DT_INT64
}

func (t *BountyDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoBounty.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRewardItem.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwEndTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b3c2ea5e struct {
	DwTilePosHash DT_UINT
	ETileType     DT_ENUM
}

func (t *Type_b3c2ea5e) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTilePosHash.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETileType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AxialCylinder struct {
	WpBase   DT_VECTOR3D
	WdHeight DT_FLOAT
	WdRadius DT_FLOAT
}

func (t *AxialCylinder) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpBase.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.WdHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.WdRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b3d7f019 struct {
	THeader    RequiredMessageHeader
	WpLocation DT_VECTOR3D
}

func (t *Type_b3d7f019) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpLocation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventObjectMoveToLocator struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
	DwObjectID       DT_UINT
	SzLocatorName    DT_UINT
	EOrientationMode DT_ENUM
	Unk_daebe18      DT_ENUM
	Unk_6101673      DT_UINT
	Unk_8470ffc      HardpointLink
	Unk_46c8459      DT_UINT
	EBlendEasing     DT_ENUM
	EMoveRate        DT_ENUM
	Unk_3c71266      DT_ENUM
	Unk_c751343      DT_INT
	Unk_23237e1      DT_INT
	Unk_f1b6afc      DT_FLOAT
}

func (t *TriggerEventObjectMoveToLocator) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwObjectID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLocatorName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.EOrientationMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_daebe18.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6101673.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8470ffc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_46c8459.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMoveRate.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3c71266.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c751343.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_23237e1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f1b6afc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b3f69894 struct {
	Unk_d93e026 DT_FLOAT
	Unk_a346cdd DT_INT
}

func (t *Type_b3f69894) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d93e026.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a346cdd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b3ff0077 struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType            DT_UINT
	DwPad             DT_UINT
	TConditions       TriggerConditions
	FGenerated        DT_INT
	Unk_6cba752       DT_INT
	Unk_e560b0b       DT_UINT
	BOverridePosition DT_INT
	VecPosition       DT_VECTOR2D
	SzText            DT_CSTRING[*DT_BYTE]
}

func (t *Type_b3ff0077) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.BOverridePosition.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecPosition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzText.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerSetCameraDefaultsMessage struct {
	THeader RequiredMessageHeader
}

func (t *PlayerSetCameraDefaultsMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ParagonBoardDefinition struct {
	NWidth    DT_UINT
	ArEntries DT_VARIABLEARRAY[*DT_SNO]
}

func (t *ParagonBoardDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NWidth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArEntries.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 106,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PreloadHelper struct {
	ArActorPreloadHelpers                 DT_VARIABLEARRAY[*ActorPreloadHelper]
	ArItemPreloadHelpers                  DT_VARIABLEARRAY[*ItemPreloadHelper]
	ArActorVariantPreloadHelpers          DT_VARIABLEARRAY[*ActorVariantPreloadHelper]
	ArSummonedActorPreloadHelpers         DT_VARIABLEARRAY[*SummonedActorsPreloadHelper]
	ArSceneSubzoneMarkerSetPreloadHelpers DT_VARIABLEARRAY[*SceneSubzoneMarkerSetPreloadHelper]
	ArActorSlotHelpers                    DT_VARIABLEARRAY[*ActorSlotHelper]
	ArActorFaceHelpers                    DT_VARIABLEARRAY[*ActorFaceHelper]
	Unk_71df495                           DT_VARIABLEARRAY[*Type_8636d92f]
	Unk_b3ee7d3                           DT_VARIABLEARRAY[*Type_f5c4e3ed]
	ArTextureContents                     DT_VARIABLEARRAY[*TextureContent]
	ArEffectGroupPreloadHelpers           DT_VARIABLEARRAY[*EffectGroupPreloadHelper]
	ArEffectGroupActorVariants            DT_VARIABLEARRAY[*EffectGroupActorVariant]
	ArActorAnimSetPreloadHelpers          DT_VARIABLEARRAY[*ActorAnimSetPreloadHelper]
	ArAnimSetAnimPreloadHelpers           DT_VARIABLEARRAY[*AnimSetAnimPreloadHelper]
	Unk_1d69326                           DT_VARIABLEARRAY[*Type_d4235100]
	ArQuestPreloadHelpers                 DT_VARIABLEARRAY[*QuestPreloadHelper]
	ArQuestPhasePreloadHelpers            DT_VARIABLEARRAY[*QuestPhasePreloadHelper]
	ArNPCComponentSetPreloadHelpers       DT_VARIABLEARRAY[*NPCComponentSetPreloadHelper]
	Unk_7ef3a56                           DT_VARIABLEARRAY[*Type_7a954650]
	ArFoleyOverridePreloadHelpers         DT_VARIABLEARRAY[*FoleyOverridePreloadHelper]
	Unk_ddc0c8b                           DT_VARIABLEARRAY[*DT_BYTE]
	ArSNOs                                DT_VARIABLEARRAY[*DT_SNO]
	ArSNONames                            DT_VARIABLEARRAY[*DT_SNO_NAME]
}

func (t *PreloadHelper) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArActorPreloadHelpers.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArItemPreloadHelpers.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArActorVariantPreloadHelpers.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSummonedActorPreloadHelpers.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSceneSubzoneMarkerSetPreloadHelpers.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArActorSlotHelpers.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArActorFaceHelpers.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_71df495.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b3ee7d3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArTextureContents.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArEffectGroupPreloadHelpers.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArEffectGroupActorVariants.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArActorAnimSetPreloadHelpers.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArAnimSetAnimPreloadHelpers.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1d69326.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArQuestPreloadHelpers.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArQuestPhasePreloadHelpers.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArNPCComponentSetPreloadHelpers.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7ef3a56.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArFoleyOverridePreloadHelpers.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+320, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ddc0c8b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+336, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSNOs.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+352, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSNONames.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+368, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SerialDataInfo struct {
	DwOffset DT_UINT
	DwCount  DT_UINT
}

func (t *SerialDataInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PresetNPCComponent struct {
	Component DT_CSTRING[*DT_BYTE]
	SnoDye    DT_SNO
}

func (t *PresetNPCComponent) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Component.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDye.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 122,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TransmogSaveSnapshotMessage struct {
	THeader        RequiredMessageHeader
	NSnapshotIndex DT_INT
	ArTransmogs    DT_FIXEDARRAY[*TransmogSlotData]
}

func (t *TransmogSaveSnapshotMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSnapshotIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArTransmogs.UnmarshalD4(r, &Options{
		ArrayLength: 16,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIRechargeTimerStyle struct {
	// Inherits UITimerStyle
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
}

func (t *UIRechargeTimerStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b48524d3 struct {
	EAttribute  DT_ENUM
	NParam      DT_INT
	Unk_5439402 DT_INT
}

func (t *Type_b48524d3) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAttribute.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NParam.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5439402.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b493176d struct {
	HImageHandle DT_UINT
}

func (t *Type_b493176d) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.HImageHandle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SpeedTreeWind8Params struct {
	FStrengthResponse  DT_FLOAT
	FDirectionResponse DT_FLOAT
	FGustFrequency     DT_FLOAT
	FGustStrengthMin   DT_FLOAT
	FGustStrengthMax   DT_FLOAT
	FGustDurationMin   DT_FLOAT
	FGustDurationMax   DT_FLOAT
	FGustRiseScalar    DT_FLOAT
	FGustFallScalar    DT_FLOAT
	FGlobalHeight      DT_FLOAT
	Unk_34cfdfe        DT_FLOAT
	FFullRipple        DT_FLOAT
	VBoundingBoxMin    DT_VECTOR3D
	VBoundingBoxMax    DT_VECTOR3D
	FRefreshSecondary  DT_FLOAT
	Unk_fbebc6e        DT_FLOAT
	Unk_6009911        DT_FLOAT
	Unk_19eb4fb        DT_FLOAT
	SShared            Type_cc139f31
	SBranch            Type_cc139f31
	SRipple            SpeedTree8RippleGroup
	FIsGrass           DT_FLOAT
}

func (t *SpeedTreeWind8Params) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FStrengthResponse.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDirectionResponse.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGustFrequency.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGustStrengthMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGustStrengthMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGustDurationMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGustDurationMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGustRiseScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGustFallScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGlobalHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_34cfdfe.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FFullRipple.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.VBoundingBoxMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.VBoundingBoxMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.FRefreshSecondary.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fbebc6e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6009911.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_19eb4fb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SShared.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+412, io.SeekStart); err != nil {
		return err
	}
	if err := t.SBranch.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+736, io.SeekStart); err != nil {
		return err
	}
	if err := t.SRipple.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+980, io.SeekStart); err != nil {
		return err
	}
	if err := t.FIsGrass.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+984, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b4c55066 struct {
	Q       bcQuat
	Wp      DT_VECTOR3D
	FlScale DT_FLOAT
}

func (t *Type_b4c55066) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Q.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type XboxConsoleAwardDefinition struct {
	// Inherits ConsoleAwardDefinition
	// Inherits PolymorphicBase
	DwType          DT_UINT
	UProfileAwardId DT_UINT
	DwPad           DT_UINT
}

func (t *XboxConsoleAwardDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.UProfileAwardId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PortedToWaypointMessage struct {
	THeader      RequiredMessageHeader
	Unk_dce541c  DT_UINT
	SnoLevelArea DT_SNO
}

func (t *PortedToWaypointMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelArea.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b5721766 struct {
	Value                   DT_RGBACOLOR
	BIsDungeonRewardMessage DT_INT
	Unk_411da82             Type_560ae4cf
}

func (t *Type_b5721766) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Value.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsDungeonRewardMessage.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_411da82.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b58061b6 struct {
	ECheckboxStyle               DT_ENUM
	Unk_a7d70e6                  Type_6b1c5d9c
	Unk_3f146a2                  Type_6b1c5d9c
	Unk_8aa2175                  Type_6b1c5d9c
	Unk_2aa2ac9                  Type_6b1c5d9c
	Unk_28bd9a5                  Type_6b1c5d9c
	Unk_eece018                  Type_6b1c5d9c
	SnoTiledStyleCheckedNormal   DT_SNO
	Unk_d3af33f                  DT_SNO
	SnoTiledStyleCheckedDisabled DT_SNO
	Unk_2f237c6                  DT_SNO
	Unk_4f32182                  DT_SNO
	Unk_16c2055                  DT_SNO
}

func (t *Type_b58061b6) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECheckboxStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a7d70e6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3f146a2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8aa2175.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2aa2ac9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_28bd9a5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eece018.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTiledStyleCheckedNormal.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 103,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d3af33f.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 103,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTiledStyleCheckedDisabled.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 103,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2f237c6.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 103,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4f32182.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 103,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_16c2055.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 103,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b593e3c8 struct {
	SnoAmbient         DT_SNO
	EPlacementStrategy DT_ENUM
	FlSpacing          DT_FLOAT
	ArSurfaces         DT_VARIABLEARRAY[*DT_SNO]
}

func (t *Type_b593e3c8) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAmbient.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 5,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPlacementStrategy.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSpacing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSurfaces.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 43,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerServerData struct {
	FHiddenUntilUnlocked          DT_INT
	SnoScript                     DT_VARIABLEARRAY[*DT_SNO]
	Unk_ebb20cd                   DT_SNO
	Unk_cb8d889                   DT_SNO
	Unk_6bf9013                   DT_SNO
	Unk_6bc1c5f                   DT_SNO
	Unk_cdb454b                   DT_SNO
	ArActorGroups                 DT_VARIABLEARRAY[*DT_GBID]
	ArPrefabScopedActorGroups     DT_VARIABLEARRAY[*DT_GBID]
	FStartDisabled                DT_INT
	SnoPhasingVisibilityCondition DT_SNO
	SnoPowerDeathOverride         DT_SNO
}

func (t *MarkerServerData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FHiddenUntilUnlocked.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoScript.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 35,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ebb20cd.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 12,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cb8d889.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 13,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6bf9013.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 62,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6bc1c5f.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cdb454b.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArActorGroups.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 24,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPrefabScopedActorGroups.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.FStartDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPhasingVisibilityCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerDeathOverride.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DebugDrawPrimMessage struct {
	THeader          RequiredMessageHeader
	UID              DT_UINT
	EType            DT_ENUM
	IdSWorld         DT_SHARED_SERVER_DATA_ID
	VecPos           DT_FIXEDARRAY[*DT_VECTOR3D]
	FlLength         DT_FLOAT
	FlRadius         DT_FLOAT
	FlHeight         DT_FLOAT
	ULifetimeInTicks DT_UINT
	RgbaColor        DT_RGBACOLOR
	SzText           DT_CHARARRAY
	Unk_7fff437      DT_INT
	BNoZ             DT_INT
}

func (t *DebugDrawPrimMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.UID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSWorld.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecPos.UnmarshalD4(r, &Options{
		ArrayLength: 8,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.ULifetimeInTicks.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzText.UnmarshalD4(r, &Options{
		ArrayLength: 128,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7fff437.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+284, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNoZ.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EmitterSphericalCapData struct {
	// Inherits EmitterDataBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	DwPad      DT_UINT
	EFacing    DT_ENUM
	ACone      DT_FLOAT
	PathRadius Type_cbfdd2ea
}

func (t *EmitterSphericalCapData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EFacing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.ACone.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HirelingRequestLearnSkillMessage struct {
	THeader  RequiredMessageHeader
	Ann      DT_ACD_NETWORK_NAME
	SnoSkill DT_SNO
}

func (t *HirelingRequestLearnSkillMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSkill.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIControlHandle struct {
	SnoUI         DT_SNO
	SzControlName DT_UINT
}

func (t *UIControlHandle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoUI.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 42,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzControlName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b6c1006c struct {
	// Inherits TexAnim
	// Inherits PolymorphicBase
	DwType           DT_UINT
	DwPad            DT_UINT
	FlUScale         DT_FLOAT
	FlVScale         DT_FLOAT
	TFrameAnim       FrameAnim
	Unk_f7b62d6      Type_cc354444
	TDuration        DT_RANGE[*DT_FLOAT]
	FScaleUVsToFrame DT_INT
}

func (t *Type_b6c1006c) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlUScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlVScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFrameAnim.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f7b62d6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.FScaleUVsToFrame.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CollisionSettings struct {
	SnoCollision     DT_SNO
	TCustomCollFlags ActorCollisionFlags
	Unk_a882afd      DT_INT
	Unk_54403ff      DT_INT
}

func (t *CollisionSettings) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCollision.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 127,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCustomCollFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a882afd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54403ff.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestCallback struct {
	Unk_b185921          DT_ENUM
	Unk_5342cc0          DT_ENUM
	DwUID                DT_UINT
	DwFlags              DT_UINT
	NNeeded              DT_UINT
	TScriptMessageMap    ScriptMessageMap
	DwLinesSeconds       DT_INT
	Unk_47705e2          DT_INT
	EIndicatorType       DT_ENUM
	Unk_9c1ea4f          DT_UINT
	SnoWorld             DT_SNO
	Unk_e879cce          DT_SNO
	FDebugDisable        DT_INT
	TRegionDefault       QuestCallbackRegion
	ArRegionOverrides    DT_VARIABLEARRAY[*QuestCallbackRegion]
	Unk_6a71535          DT_INT
	ArLevelAreas         DT_VARIABLEARRAY[*DT_SNO]
	ArSubzones           DT_VARIABLEARRAY[*DT_SNO]
	ArSnonameTokens      DT_VARIABLEARRAY[*DT_SNO_NAME]
	TReputationObjective ReputationValuePair
}

func (t *QuestCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b185921.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5342cc0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NNeeded.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TScriptMessageMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwLinesSeconds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_47705e2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.EIndicatorType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c1ea4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e879cce.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 12,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDebugDisable.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.TRegionDefault.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArRegionOverrides.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6a71535.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArLevelAreas.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSubzones.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSnonameTokens.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.TReputationObjective.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b6de0233 struct {
	EAttribute  DT_ENUM
	TValue      DT_STRING_FORMULA
	NParam      DT_INT
	Unk_dffdf28 DT_STRING_FORMULA
}

func (t *Type_b6de0233) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAttribute.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.NParam.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dffdf28.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionIsChannelled struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
}

func (t *PowerConditionIsChannelled) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestKillAllMonstersUpdatedMessage struct {
	THeader          RequiredMessageHeader
	IdQuest          DT_ENUM
	NMonstersSpawned DT_INT
	NMonstersKilled  DT_INT
	Unk_736a201      DT_INT
}

func (t *QuestKillAllMonstersUpdatedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdQuest.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMonstersSpawned.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMonstersKilled.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_736a201.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Transmog struct {
	SnoItem DT_SNO
	SnoDye  DT_SNO
}

func (t *Transmog) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItem.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDye.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 122,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RareItemNameMessage struct {
	THeader       RequiredMessageHeader
	Ann           DT_ACD_NETWORK_NAME
	TRareItemName RareItemName
}

func (t *RareItemNameMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TRareItemName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ChairGizmoData struct {
	// Inherits NamedGizmoData
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
}

func (t *ChairGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamPrimaryGroup struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType        DT_UINT
	EParamType    DT_ENUM
	DwPad         DT_UINT
	TPrimaryGroup ActorGroup
}

func (t *ScriptEventParamPrimaryGroup) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPrimaryGroup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b76a31b5 struct {
	M_transform1 Type_5f527528
	M_transform2 Type_5f527528
	M_localFrame Type_5f527528
	M_normal     DT_VECTOR4D
	M_stiffness  DT_FLOAT
	M_friction   DT_FLOAT
	M_boneIndex  DT_WORD
	M_padding    DT_FIXEDARRAY[*DT_WORD]
}

func (t *Type_b76a31b5) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_transform1.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_transform2.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_localFrame.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_normal.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_stiffness.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_friction.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_boneIndex.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+122, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_padding.UnmarshalD4(r, &Options{ArrayLength: 3}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b780b821 struct {
	SzParamName  DT_CHARARRAY
	SzParamValue DT_CHARARRAY
}

func (t *Type_b780b821) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzParamName.UnmarshalD4(r, &Options{
		ArrayLength: 80,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzParamValue.UnmarshalD4(r, &Options{
		ArrayLength: 80,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LocalEventDataMessage struct {
	THeader           RequiredMessageHeader
	DwInstanceID      DT_UINT
	SnoQuest          DT_SNO
	SnoWorld          DT_SNO
	SnoSubzone        DT_SNO
	WpLocation        DT_VECTOR3D
	Unk_8818621       Type_586d03a
	BStartImmediately DT_INT
	BPhaseIsHidden    DT_INT
}

func (t *LocalEventDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwInstanceID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSubzone.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpLocation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8818621.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.BStartImmediately.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.BPhaseIsHidden.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConfirmDungeonKeyUseMessage struct {
	THeader     RequiredMessageHeader
	AnnKey      DT_ACD_NETWORK_NAME
	Unk_3ec603d DT_SNO
}

func (t *ConfirmDungeonKeyUseMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnKey.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3ec603d.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DebugTrackedCheckpointRequestMessage struct {
	THeader  RequiredMessageHeader
	AnnActor DT_ACD_NETWORK_NAME
	BEnabled DT_INT
}

func (t *DebugTrackedCheckpointRequestMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnActor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEnabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorDefinition struct {
	EType                      DT_ENUM
	DwFlags                    DT_UINT
	DwFlagsEx                  DT_UINT
	SnoAppearance              DT_SNO
	ArCustomizationAppearances DT_VARIABLEARRAY[*DT_SNO]
	ArAnimSets                 DT_VARIABLEARRAY[*DT_SNO]
	SnoAnimTree                DT_SNO
	TAnimTreeOverride          AnimTreeOverride
	EVariantType               DT_ENUM
	TDefaultLook               LookLink
	Unk_3d234d5                DT_UINT
	TScaleRange                DT_RANGE[*DT_FLOAT]
	WcylBounds                 AxialCylinder
	AabbBounds                 AABB
	WsBounds                   Sphere
	AabbAppearanceBoundingBox  AABB
	WpLocationPowerSrc         DT_VECTOR3D
	EPickStyle                 DT_ENUM
	FlAttachmentScaleFactor    DT_FLOAT
	EDefaultTeam               DT_ENUM
	ECullingLevel              DT_ENUM
	FlFadeCorpseTimeUntilFade  DT_FLOAT
	FlFadeCorpseTime           DT_FLOAT
	AAbsoluteOrientation       DT_FLOAT
	FlHitFlashPower            DT_FLOAT
	FlHitFlashMultiplier       DT_FLOAT
	FlOverlayPower             DT_FLOAT
	ETopology                  DT_ENUM
	PtMsgTriggeredEvents       DT_VARIABLEARRAY[*MsgTriggeredEvent]
	PtPhysData                 DT_VARIABLEARRAY[*ActorPhysicsData]
	PtCollData                 DT_VARIABLEARRAY[*ActorCollisionData]
	EActorGizmoType            DT_ENUM
	Unk_8fbba9b                DT_ENUM
	PtGizmoData                DT_POLYMORPHIC_VARIABLEARRAY[*ActorGizmoData]
	PtMonsterData              DT_VARIABLEARRAY[*ActorMonsterData]
	PtCritterData              DT_VARIABLEARRAY[*ActorCritterData]
	PtPlayerData               DT_VARIABLEARRAY[*ActorPlayerData]
	PtItemData                 DT_VARIABLEARRAY[*ActorItemData]
	PtCombatData               DT_VARIABLEARRAY[*ActorCombatData]
	PtDeathData                DT_VARIABLEARRAY[*ActorDeathData]
	PtEffectData               DT_VARIABLEARRAY[*ActorEffectData]
	PtProjData                 DT_VARIABLEARRAY[*ActorProjectileData]
	PtPropData                 DT_VARIABLEARRAY[*ActorPropData]
	PtMovingData               DT_VARIABLEARRAY[*ActorMovingData]
	PtBrainData                DT_VARIABLEARRAY[*ActorBrainData]
	PtServerData               DT_VARIABLEARRAY[*ActorServerData]
	PtUIData                   DT_VARIABLEARRAY[*ActorUIData]
	PtAIData                   DT_VARIABLEARRAY[*ActorAIData]
	PtVOData                   DT_VARIABLEARRAY[*ActorVOData]
	PtNPCData                  DT_VARIABLEARRAY[*ActorNPCData]
	PtSoundTableData           DT_VARIABLEARRAY[*ActorSoundTableData]
	PtMountData                DT_VARIABLEARRAY[*ActorMountData]
	PtPostprocessed            DT_INT64
	SnoPrefabAttachment        DT_SNO
	Unk_d2b5e35                DT_FLOAT
	Unk_2607092                DT_UINT
	Unk_79da2a0                DT_UINT
	ArRTPCOverrides            DT_VARIABLEARRAY[*Type_4174a154]
}

func (t *ActorDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAppearance.UnmarshalD4(r, &Options{
		Flags: 257,
		Group: 9,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCustomizationAppearances.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 9,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArAnimSets.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAnimTree.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 67,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAnimTreeOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.EVariantType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDefaultLook.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3d234d5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TScaleRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.WcylBounds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.AabbBounds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.WsBounds.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.AabbAppearanceBoundingBox.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpLocationPowerSrc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPickStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAttachmentScaleFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDefaultTeam.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECullingLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFadeCorpseTimeUntilFade.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFadeCorpseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.AAbsoluteOrientation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHitFlashPower.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+228, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHitFlashMultiplier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOverlayPower.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+236, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETopology.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtMsgTriggeredEvents.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPhysData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtCollData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.EActorGizmoType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+292, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8fbba9b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtGizmoData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+320, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtMonsterData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+336, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtCritterData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+352, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPlayerData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+368, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtItemData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+384, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtCombatData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+400, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtDeathData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+416, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtEffectData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+432, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtProjData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+448, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPropData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+464, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtMovingData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+480, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtBrainData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+496, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtServerData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+512, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtUIData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+528, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtAIData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+544, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtVOData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+560, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtNPCData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+576, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtSoundTableData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+592, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtMountData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+608, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPostprocessed.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+616, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPrefabAttachment.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 24,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+620, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d2b5e35.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+624, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2607092.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+628, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_79da2a0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+632, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArRTPCOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+648, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnUnequipPowerCallback struct {
	// Inherits PowerCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	BCouldHaveRagdolled   DT_INT
	Unk_259dc59           DT_INT
	Unk_90599e6           DT_INT
}

func (t *OnUnequipPowerCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCouldHaveRagdolled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_259dc59.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_90599e6.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIControlConsoleInput struct {
	Unk_8536b47 DT_TAGMAP[*DT_ENUM]
}

func (t *UIControlConsoleInput) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8536b47.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIBrowserWindowStyle struct {
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
}

func (t *UIBrowserWindowStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LightInstanceData struct {
	EType                 DT_ENUM
	DwFlags               DT_UINT
	Unk_c96f544           DT_UINT
	Unk_cf4734d           DT_ENUM
	Unk_56127ed           DT_ENUM
	TMatTexProjected      MaterialTexture
	TStateA               LightStateParams
	Unk_3dc76e8           DT_RANGE[*DT_FLOAT]
	FFirstTexels          DT_RANGE[*DT_FLOAT]
	Unk_b2d1b35           DT_FLOAT
	Unk_da73b5e           DT_RANGE[*DT_FLOAT]
	Unk_159b591           DT_FLOAT
	Unk_cdd937c           DT_FLOAT
	Unk_6b1c15            DT_FLOAT
	Unk_303bee            DT_FLOAT
	Unk_c4c66d5           DT_FLOAT
	Unk_ff1fcfe           DT_FLOAT
	NSystemDuration       DT_FLOAT
	FlOutroDuration       DT_FLOAT
	TSystemDurationScalar InterpolationScalar
}

func (t *LightInstanceData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c96f544.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cf4734d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_56127ed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMatTexProjected.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.TStateA.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+800, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3dc76e8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+808, io.SeekStart); err != nil {
		return err
	}
	if err := t.FFirstTexels.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+816, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b2d1b35.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+820, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_da73b5e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+828, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_159b591.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+832, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cdd937c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+836, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6b1c15.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+840, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_303bee.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+844, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c4c66d5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+848, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ff1fcfe.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+852, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSystemDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+856, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOutroDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+860, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSystemDurationScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+896, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CommonPortalGizmoData struct {
	Unk_eb1dc3b            DT_SNO
	FPortalIsElevator      DT_INT
	SnoWarpOutActor        DT_SNO
	SnoWarpInPower         DT_SNO
	EWorldToChoose         DT_ENUM
	SnoSpecifiedWorld      DT_SNO
	SnoPortalDestLevelArea DT_SNO
	DwEntranceNameToFind   DT_STARTLOC_NAME
}

func (t *CommonPortalGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eb1dc3b.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FPortalIsElevator.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWarpOutActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWarpInPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EWorldToChoose.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSpecifiedWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPortalDestLevelArea.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwEntranceNameToFind.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PreloadACDDataMessage struct {
	THeader         RequiredMessageHeader
	Ann             DT_ACD_NETWORK_NAME
	SnoActor        DT_SNO
	Unk_f1e8af8     DT_FIXEDARRAY[*DT_SNO_NAME]
	Unk_144680      DT_INT
	TBaseACDInfo    DT_OPTIONAL[*BaseACDInfo]
	TPlayerACDInfo  DT_OPTIONAL[*PlayerACDInfo]
	TMountACDInfo   DT_OPTIONAL[*MountACDInfo]
	TMonsterACDInfo DT_OPTIONAL[*MonsterACDInfo]
	TNPCACDInfo     DT_OPTIONAL[*NPCACDInfo]
}

func (t *PreloadACDDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f1e8af8.UnmarshalD4(r, &Options{
		ArrayLength: 32,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_144680.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+292, io.SeekStart); err != nil {
		return err
	}
	if err := t.TBaseACDInfo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPlayerACDInfo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1188, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMountACDInfo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1208, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMonsterACDInfo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1268, io.SeekStart); err != nil {
		return err
	}
	if err := t.TNPCACDInfo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1296, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b88f4265 struct {
	Rx DT_VECTOR4D
	Ry DT_VECTOR4D
	Rz DT_VECTOR4D
	P  DT_VECTOR4D
}

func (t *Type_b88f4265) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Rx.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ry.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Rz.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.P.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorUIData struct {
	HPortraitImage           DT_UINT
	HMinimapIcon             DT_UINT
	Unk_f51d2b3              DT_UINT
	FMinimapActiveByDefault  DT_INT
	FMinimapRespectsFoW      DT_INT
	Unk_98a6ae1              DT_INT
	Unk_c26b08b              DT_INT
	Unk_fab46e5              DT_FLOAT
	FlMinimapMaxVisRange     DT_FLOAT
	FlMinimapDiscoveryRadius DT_FLOAT
	Unk_c6ec070              ConditionWrapper
}

func (t *ActorUIData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.HPortraitImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.HMinimapIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f51d2b3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FMinimapActiveByDefault.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FMinimapRespectsFoW.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_98a6ae1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c26b08b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fab46e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMinimapMaxVisRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMinimapDiscoveryRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c6ec070.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnDodgeBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnDodgeBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GetInventoryLocationMessage struct {
	THeader Type_72bd65f8
	TItemId Type_f5ac91bb
}

func (t *GetInventoryLocationMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TItemId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimTreeNodeChild struct {
	TBlendCase          AnimTreeBlendCase
	TSecondaryBlendCase AnimTreeBlendCase
	TCondition          ConditionWrapper
	DwChildIndex        DT_UINT
}

func (t *AnimTreeNodeChild) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TBlendCase.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSecondaryBlendCase.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCondition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwChildIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b8e1451f struct {
	NLowerX         DT_FLOAT
	NLowerY         DT_FLOAT
	NLowerZ         DT_FLOAT
	NUpperX         DT_FLOAT
	NUpperY         DT_FLOAT
	NUpperZ         DT_FLOAT
	NIndex          DT_INT
	DwIncludeMask   DT_WORD
	DwAxis          DT_BYTE
	DwTriangleCount DT_BYTE
}

func (t *Type_b8e1451f) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLowerX.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLowerY.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLowerZ.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.NUpperX.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NUpperY.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NUpperZ.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwIncludeMask.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+30, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwAxis.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+31, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriangleCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ChestGizmoData struct {
	// Inherits NamedGizmoData
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                            DT_UINT
	FDisableNonFriendlyOperation      DT_INT
	FWalkToCenter                     DT_INT
	FGizmoStartsDisabled              DT_INT
	FUseStringListName                DT_INT
	FForceMinimapIcon                 DT_INT
	FlOperationRadius                 DT_FLOAT
	Unk_d0b1df5                       DT_FLOAT
	FlGizmoUseTime                    DT_FLOAT
	SnoChannelingEffect               DT_SNO
	Unk_2767229                       DT_INT
	FGizmoShowProgressBar             DT_INT
	Unk_6d9ebe1                       DT_INT
	Unk_5456245                       DT_INT
	Unk_af5815a                       DT_INT
	SnoOnClickEffect                  DT_SNO
	SnoPickedUpEffect                 DT_SNO
	SnoDropOnGroundEffect             DT_SNO
	TConditionData                    GizmoConditionData
	SnoPowerOperator                  DT_SNO
	SnoPowerOperate                   DT_SNO
	SnoPowerOperatorActive            DT_SNO
	SnoPowerOperateActive             DT_SNO
	Unk_359810e                       DT_INT
	NCooldown                         DT_UINT
	Unk_9c8478e                       DT_UINT
	Unk_d45ed2d                       DT_INT
	Unk_f6b20b7                       DT_INT
	Unk_54513b8                       DT_INT
	Unk_fd1f378                       DT_UINT
	Unk_487c14                        DT_UINT
	Unk_87f2609                       DT_UINT
	Unk_158eb4f                       DT_FLOAT
	Unk_ab58cd3                       DT_ENUM
	Unk_91a3966                       DT_UINT
	Unk_25312e5                       DT_UINT
	Unk_4be4371                       DT_INT
	SnoTreasureClass                  DT_SNO
	TLockData                         LockingGizmoData
	FChestRemovesCollisionOnOperation DT_INT
	FChestOperatesOnProximity         DT_INT
	FChestLight                       DT_INT
	Unk_51b0c11                       DT_INT
	Unk_6b4a81d                       DT_FLOAT
	DwPad                             DT_UINT
}

func (t *ChestGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTreasureClass.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLockData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.FChestRemovesCollisionOnOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.FChestOperatesOnProximity.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.FChestLight.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_51b0c11.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6b4a81d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Line3D struct {
	Wp DT_VECTOR3D
	Wv DT_VECTOR3D
}

func (t *Line3D) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wv.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WwiseConversationSoundBank struct {
	// Inherits WwiseSoundBankContentBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	PtConversationSamples DT_VARIABLEARRAY[*ConversationSample]
}

func (t *WwiseConversationSoundBank) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtConversationSamples.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ItemQualitySubcondition struct {
	// Inherits Type_d3c3637f
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType            DT_UINT
	BNegate           DT_INT
	EComparisonOp     DT_ENUM
	DwPad             DT_UINT
	EItemQualityLevel DT_ENUM
}

func (t *ItemQualitySubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.EItemQualityLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type KillCountMessage struct {
	THeader      RequiredMessageHeader
	Unk_dce541c  DT_UINT
	NPlayerKills DT_INT
	NDeaths      DT_INT
	NAssists     DT_INT
}

func (t *KillCountMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPlayerKills.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NDeaths.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.NAssists.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MaterialDefinition struct {
	DwFlags                DT_UINT
	TUberMaterial          UberMaterial
	ArDecalLookVariantMap  DT_VARIABLEARRAY[*DecalLookVariantMap]
	SnoSurface             DT_SNO
	SnoBiomes              DT_FIXEDARRAY[*DT_SNO]
	Unk_c879a37            Type_343baac3
	Unk_93ea20a            DT_FLOAT
	PathPlaybackMultiplier Type_cbfdd2ea
	PathPlaybackController Type_cbfdd2ea
	Unk_ce6fe3b            DT_UINT
	Unk_245935             DT_ENUM
	Unk_6d58226            DT_ENUM
	FlDuration             DT_FLOAT
	TOutroDuration         DT_FLOAT
	Unk_a08119e            DT_FLOAT
	Unk_5b1ce37            DT_FLOAT
	FlStiffness            DT_FLOAT
	FlGravityMagnitude     DT_FLOAT
	TEquipParamPermutation Type_88c1160d
}

func (t *MaterialDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 8912896}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TUberMaterial.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArDecalLookVariantMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSurface.UnmarshalD4(r, &Options{
		Flags: 8388608,
		Group: 43,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoBiomes.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
		Group:       77,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c879a37.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_93ea20a.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathPlaybackMultiplier.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathPlaybackController.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ce6fe3b.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_245935.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d58226.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDuration.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.TOutroDuration.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a08119e.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5b1ce37.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+284, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlStiffness.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGravityMagnitude.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+292, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEquipParamPermutation.UnmarshalD4(r, &Options{Flags: 8388608}); err != nil {
		return err
	}
	if _, err := r.Seek(p+328, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BannerIcon struct {
	SzName      DT_UINT
	HLabel      StringLabelHandleEx
	SnoTexture  DT_SNO
	Unk_cd49a50 DT_FLOAT
	HIcon       Type_6b1c5d9c
}

func (t *BannerIcon) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.HLabel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTexture.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cd49a50.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BannerTrim struct {
	SzName          DT_UINT
	HLabel          StringLabelHandleEx
	SnoNormal       DT_SNO
	SnoAlbedo       DT_SNO
	SnoMask         DT_SNO
	SnoEmissiveMask DT_SNO
	FlMetalness     DT_FLOAT
	FlRoughness     DT_FLOAT
	HIcon           Type_6b1c5d9c
}

func (t *BannerTrim) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.HLabel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoNormal.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAlbedo.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMask.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEmissiveMask.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMetalness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRoughness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_b99f8947 struct {
	EScrollbarAlignment     DT_ENUM
	EScrollbarVisibility    DT_ENUM
	FlScrollbarWidth        DT_FLOAT
	Unk_5443ce9             DT_INT
	Unk_ff388bb             DT_FLOAT
	Unk_58496c              DT_FLOAT
	Unk_26fb7aa             DT_FLOAT
	EBlendEasing            DT_ENUM
	Unk_ebbdec9             DT_FLOAT
	Unk_438d70b             DT_FLOAT
	NScrollbarPageIncrement DT_INT
	Unk_1f6fa9              DT_ENUM
	Unk_f28083a             DT_INT
}

func (t *Type_b99f8947) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EScrollbarAlignment.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EScrollbarVisibility.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlScrollbarWidth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5443ce9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ff388bb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_58496c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_26fb7aa.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ebbdec9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_438d70b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.NScrollbarPageIncrement.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1f6fa9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f28083a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerPhaseBase struct {
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TPhaseName  DT_UINT
	Unk_fcb7313 DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	Unk_d0d932b DT_INT
	Unk_9a8200e DT_INT
}

func (t *PowerPhaseBase) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPhaseName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fcb7313.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0d932b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a8200e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerPhaseLoop struct {
	// Inherits PowerPhaseBase
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TPhaseName  DT_UINT
	Unk_fcb7313 DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	Unk_d0d932b DT_INT
	Unk_9a8200e DT_INT
}

func (t *PowerPhaseLoop) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPhaseName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fcb7313.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0d932b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a8200e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScalarFunctionFormula struct {
	SzName         DT_UINT
	TFormula       DT_STRING_FORMULA
	FlDefaultValue DT_FLOAT
	Unk_c0f4112    DT_INT
	BIsGlobal      DT_INT
}

func (t *ScalarFunctionFormula) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFormula.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDefaultValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c0f4112.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsGlobal.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionHasHealth struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType          DT_UINT
	BInverse        DT_INT
	DwPad           DT_UINT
	ESubject        DT_ENUM
	FlHealthPercent DT_FLOAT
}

func (t *PowerConditionHasHealth) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHealthPercent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ItemDefinition struct {
	SnoActor                         DT_SNO
	SnoItemType                      DT_SNO
	EMagicType                       DT_ENUM
	DwFlags                          DT_UINT
	PtInitialDyes                    DT_VARIABLEARRAY[*DT_SNO]
	EComponentStyleType              DT_ENUM
	DwComponentStyle                 DT_UINT
	SnoLore                          DT_SNO
	NMaxStackSize                    DT_INT
	NBaseCostCurrency                DT_INT
	Unk_11efbc0                      DT_INT
	ECurrencyType                    DT_ENUM
	NDropMinLevel                    DT_INT
	NDropMaxLevel                    DT_INT
	NVendorDropMinLevel              DT_INT
	NVendorDropMaxLevel              DT_INT
	EDropMinWorldTier                DT_ENUM
	Unk_440d049                      DT_INT
	EPreferredZone                   DT_ENUM
	SnoBaseItem                      DT_SNO
	SnoRandomItemTreasureClass       DT_SNO
	SnoSalvageTreasureClassNormal    DT_SNO
	SnoSalvageTreasureClassMagic     DT_SNO
	SnoSalvageTreasureClassRare      DT_SNO
	SnoSalvageTreasureClassLegendary DT_SNO
	SnoSalvageTreasureClassUnique    DT_SNO
	SnoSalvageTreasureClassSetItem   DT_SNO
	SnoRareNamePrefixStringList      DT_SNO
	SnoRareNameSuffixStringList      DT_SNO
	SnoSetItemBonus                  DT_SNO
	SnoPower                         DT_SNO
	NTomeLevel                       DT_INT
	NFixedIPowerLevel                DT_INT
	Unk_ae0eeff                      DT_ENUM
	PtAttributes                     DT_VARIABLEARRAY[*AttributeSpecifier]
	ArInherentAffixes                DT_VARIABLEARRAY[*DT_SNO]
	ArForcedAffixes                  DT_VARIABLEARRAY[*DT_SNO]
	Unk_e6191d6                      DT_VARIABLEARRAY[*DT_GBID]
	Unk_192312c                      DT_VARIABLEARRAY[*DT_GBID]
	FUsableByClass                   DT_FIXEDARRAY[*DT_INT]
	PtSocketedEffects                DT_VARIABLEARRAY[*SocketedEffects]
	SnoRunePower                     DT_SNO
	SnoRecipe                        DT_SNO
	SnoDemonScroll                   DT_SNO
	SnoMount                         DT_SNO
	SnoParagonGlyph                  DT_SNO
	Unk_3202773                      DT_VARIABLEARRAY[*DT_GBID]
	ArReputation                     DT_VARIABLEARRAY[*ReputationValuePair]
	TInvImages                       DT_FIXEDARRAY[*InventoryImages]
	Unk_75d565b                      DT_UINT
	FMustKeepInInventory             DT_INT
	FBottomless                      DT_INT
	EItemUseType                     DT_ENUM
	SnoPowerUpPower                  DT_SNO
	SnoItemUseLevelAreaRequirement   DT_SNO
	Unk_f772ea                       DT_UINT
	EDisplayedQualityLevel           DT_ENUM
	NCustomDropWeight                DT_INT
	SnoPowerPassive                  DT_SNO
	EGemType                         DT_ENUM
	SnoPotionPower                   DT_SNO
	BIsTransmog                      DT_INT
}

func (t *ItemDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 257,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItemType.UnmarshalD4(r, &Options{
		Flags: 257,
		Group: 98,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMagicType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtInitialDyes.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 122,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComponentStyleType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwComponentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLore.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 59,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMaxStackSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.NBaseCostCurrency.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_11efbc0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECurrencyType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.NDropMinLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.NDropMaxLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.NVendorDropMinLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.NVendorDropMaxLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDropMinWorldTier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_440d049.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPreferredZone.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoBaseItem.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRandomItemTreasureClass.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSalvageTreasureClassNormal.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSalvageTreasureClassMagic.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSalvageTreasureClassRare.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSalvageTreasureClassLegendary.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSalvageTreasureClassUnique.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSalvageTreasureClassSetItem.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRareNamePrefixStringList.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 42,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRareNameSuffixStringList.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 42,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSetItemBonus.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 109,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.NTomeLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFixedIPowerLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ae0eeff.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtAttributes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArInherentAffixes.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 104,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArForcedAffixes.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 104,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e6191d6.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 18,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_192312c.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 18,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUsableByClass.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtSocketedEffects.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRunePower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+284, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRecipe.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 49,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDemonScroll.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 95,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+292, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMount.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoParagonGlyph.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 111,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3202773.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 18,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+320, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArReputation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+336, io.SeekStart); err != nil {
		return err
	}
	if err := t.TInvImages.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+376, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_75d565b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+380, io.SeekStart); err != nil {
		return err
	}
	if err := t.FMustKeepInInventory.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+384, io.SeekStart); err != nil {
		return err
	}
	if err := t.FBottomless.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+388, io.SeekStart); err != nil {
		return err
	}
	if err := t.EItemUseType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+392, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerUpPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+396, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItemUseLevelAreaRequirement.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+400, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f772ea.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+404, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDisplayedQualityLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+408, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCustomDropWeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+412, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerPassive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+416, io.SeekStart); err != nil {
		return err
	}
	if err := t.EGemType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+420, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPotionPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+424, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsTransmog.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+432, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type IRect2D struct {
	Left   DT_INT
	Top    DT_INT
	Right  DT_INT
	Bottom DT_INT
}

func (t *IRect2D) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Left.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Top.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Right.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Bottom.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SkillTreeReward struct {
	THeader          GBIDHeader
	EType            DT_ENUM
	SnoPower         DT_SNO
	SzPowerMod       DT_UINT
	DwMaxTalentRanks DT_UINT
}

func (t *SkillTreeReward) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzPowerMod.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMaxTalentRanks.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_ba2327fc struct {
	SnoWorld DT_SNO
	ArQuests DT_VARIABLEARRAY[*DT_SNO]
}

func (t *Type_ba2327fc) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArQuests.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIDialogDefinition struct {
	Unk_d01dfb6 UIControlTemplate
	TTemplates  DT_VARIABLEARRAY[*UIControlTemplate]
	PtStyles    DT_VARIABLEARRAY[*UIStyleResource]
}

func (t *UIDialogDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d01dfb6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTemplates.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtStyles.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BossEncounterStateMessage struct {
	THeader                   Type_72bd65f8
	SnoBossEncounterLevelArea DT_SNO
	EState                    DT_ENUM
	Unk_57adc31               DT_FIXEDARRAY[*DT_ACD_NETWORK_NAME]
}

func (t *BossEncounterStateMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoBossEncounterLevelArea.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EState.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_57adc31.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerPrefabData struct {
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType                 DT_UINT
	DwPad                  DT_UINT
	ArPrefabCustomizations DT_VARIABLEARRAY[*PrefabCustomization]
}

func (t *MarkerPrefabData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPrefabCustomizations.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_ba746573 struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
	Unk_7902ee3      DT_INT
	Unk_25955c7      DT_FLOAT
	Unk_abee5c3      DT_FLOAT
	Unk_fbca868      DT_FLOAT
	Unk_839aa20      DT_FLOAT
	Unk_f75b7db      DT_FLOAT
	Unk_e7f8ef9      DT_FLOAT
	Unk_600cf5       DT_FLOAT
	Unk_aa07da       DT_FLOAT
	Unk_abbeed2      DT_FLOAT
	Unk_b9bf10d      DT_FLOAT
	EBlendEasing     DT_ENUM
}

func (t *Type_ba746573) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7902ee3.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25955c7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_abee5c3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fbca868.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_839aa20.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f75b7db.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e7f8ef9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_600cf5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aa07da.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_abbeed2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b9bf10d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_ba7da2d8 struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
	Unk_d8b6d76 DT_GBID
}

func (t *Type_ba7da2d8) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d8b6d76.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 4,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GetInventoryLocationResponseMessage struct {
	THeader          Type_ad008e7e
	TInvLocationData InventoryLocationMessageData
	AnnItem          DT_ACD_NETWORK_NAME
}

func (t *GetInventoryLocationResponseMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TInvLocationData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnItem.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Marker struct {
	DwHash        DT_UINT
	NID           DT_INT
	EType         DT_ENUM
	Transform     PRTransform
	Snoname       DT_SNO_NAME
	DwMarkerFlags DT_UINT
	VecScale      DT_VECTOR3D
	PtBase        DT_POLYMORPHIC_VARIABLEARRAY[*MarkerDataBase]
	PtGroupData   DT_VARIABLEARRAY[*MarkerGroupData]
	PtMarkerLinks DT_VARIABLEARRAY[*MarkerLink]
	Unk_c339f69   DT_INT
	DwSeed        DT_UINT
	TPrefabData   PrefabData
}

func (t *Marker) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwHash.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Transform.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Snoname.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMarkerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtBase.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtGroupData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtMarkerLinks.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c339f69.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwSeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPrefabData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_bac3964d struct {
	ArKeys DT_VARIABLEARRAY[*Type_666e5231]
}

func (t *Type_bac3964d) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArKeys.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DamageTakenBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	NPriority             DT_INT
}

func (t *DamageTakenBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPriority.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestSubconditionBase struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BNegate  DT_INT
	SnoQuest DT_SNO
	DwPad    DT_UINT
}

func (t *QuestSubconditionBase) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MonsterFamilyArchetype struct {
	SzArchetypeName      DT_UINT
	SnoAIAwareness       DT_SNO
	TAwareness           MonsterAwarenessInfo
	Unk_301c43c          DT_UINT
	DwFlags              DT_UINT
	Unk_b291cd3          DT_INT
	Unk_8495b04          DT_INT
	FlExperienceScalar   DT_FLOAT
	FlHPScalar           DT_FLOAT
	FlDamageScalar       DT_FLOAT
	TDamageRange         DT_RANGE[*DT_FLOAT]
	Unk_100de70          DT_INT
	Unk_4324dae          DT_FLOAT
	Unk_c9d3011          DT_FLOAT
	Unk_86e7bb0          DT_FLOAT
	Unk_ccbd7c6          DT_ENUM
	Unk_a5b8d03          DT_ENUM
	Unk_773ad4d          DT_ENUM
	FlSpeedWalking       DT_FLOAT
	FlSpeedRunning       DT_FLOAT
	FlSpeedSprinting     DT_FLOAT
	FlSpeedStrafing      DT_FLOAT
	TSpeedVarianceRange  DT_RANGE[*DT_FLOAT]
	FlAcceleration       DT_FLOAT
	FlCombatAcceleration DT_FLOAT
	Unk_39a9625          DT_GBID
	Unk_194112d          DT_GBID
	TFacingData          ActorFacingData
	SnoSummonPower       DT_SNO
	Unk_f73b6d9          DT_SNO
	Unk_c2cc767          DT_SNO
	SnoStaggerPower      DT_SNO
	Unk_e1387c3          DT_FLOAT
	Unk_5e90f68          DT_FLOAT
	Unk_74e754e          DT_FLOAT
	Unk_9b62fa5          DT_FLOAT
	Unk_18bb74a          DT_FLOAT
	Unk_9831607          DT_VARIABLEARRAY[*DT_FLOAT]
	SnoBossObserver      DT_SNO
	Unk_1627b04          DT_FLOAT
	Unk_121fc92          DT_FLOAT
	Unk_5428a5e          DT_FLOAT
	Unk_3b9132c          DT_FLOAT
	Unk_c0cc954          DT_FLOAT
	Unk_d5178b2          DT_FLOAT
	Unk_e08f0df          DT_FLOAT
	Unk_c86d0b9          DT_INT
	Unk_d544bbb          DT_FLOAT
	ETiltType            DT_ENUM
	ETiltTypeOnDeath     DT_ENUM
	Unk_2401865          DT_FLOAT
	Unk_94abb4e          DT_FLOAT
	Unk_f50871           DT_FLOAT
	Unk_aca81bc          DT_FLOAT
	Unk_38d1c6b          DT_INT
	Unk_63732a6          DT_INT
	Unk_904bb00          DT_INT
	Unk_28c7e7c          DT_INT
	SnoDisallowedAffixes DT_VARIABLEARRAY[*DT_SNO]
}

func (t *MonsterFamilyArchetype) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzArchetypeName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAIAwareness.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 125,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAwareness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_301c43c.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b291cd3.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8495b04.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlExperienceScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHPScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDamageScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDamageRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_100de70.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4324dae.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c9d3011.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_86e7bb0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ccbd7c6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a5b8d03.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_773ad4d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSpeedWalking.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSpeedRunning.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSpeedSprinting.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSpeedStrafing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSpeedVarianceRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAcceleration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlCombatAcceleration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_39a9625.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 34,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_194112d.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 34,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFacingData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSummonPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f73b6d9.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c2cc767.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoStaggerPower.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e1387c3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5e90f68.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_74e754e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b62fa5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_18bb74a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9831607.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoBossObserver.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 26,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1627b04.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_121fc92.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5428a5e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3b9132c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+228, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c0cc954.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d5178b2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+236, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e08f0df.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c86d0b9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+244, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d544bbb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETiltType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+252, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETiltTypeOnDeath.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2401865.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_94abb4e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f50871.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aca81bc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_38d1c6b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_63732a6.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_904bb00.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+284, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_28c7e7c.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDisallowedAffixes.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 107,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AppearanceLook struct {
	SzLookName DT_UINT
}

func (t *AppearanceLook) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLookName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CarryableReceptacleGizmoData struct {
	// Inherits NamedGizmoData
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
	ArCarryables                 DT_VARIABLEARRAY[*DT_SNO]
	NMaxCount                    DT_UINT
}

func (t *CarryableReceptacleGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCarryables.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMaxCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorVOData struct {
	FVOPlaysOnPlayer    DT_INT
	SnoSpeaker          DT_SNO
	SnoConversationList DT_SNO
	Unk_94efee3         DT_SNO_NAME
}

func (t *ActorVOData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FVOPlaysOnPlayer.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSpeaker.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 72,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoConversationList.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 13,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_94efee3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type IndexedTriangle struct {
	A DT_INT
	B DT_INT
	C DT_INT
}

func (t *IndexedTriangle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.A.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.B.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.C.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_bb6f3f3b struct {
	// Inherits PowerCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	BCouldHaveRagdolled   DT_INT
}

func (t *Type_bb6f3f3b) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCouldHaveRagdolled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimSetOrderTagEntry struct {
	THeader     GBIDHeader
	Unk_b604ea1 DT_INT
}

func (t *AnimSetOrderTagEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b604ea1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActiveSubzoneModifierSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType                 DT_UINT
	BNegate                DT_INT
	DwPad                  DT_UINT
	GbidSubzoneModifierTag DT_GBID
}

func (t *ActiveSubzoneModifierSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidSubzoneModifierTag.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 60,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DestroySceneMessage struct {
	THeader  RequiredMessageHeader
	IdSScene DT_SHARED_SERVER_DATA_ID
}

func (t *DestroySceneMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSScene.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_bbef2266 struct {
	SnoMaterialValue DT_SNO
	Value            DT_VECTOR4D
	Unk_2362b28      DT_INT
}

func (t *Type_bbef2266) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMaterialValue.UnmarshalD4(r, &Options{Group: 81}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Value.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2362b28.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Currencies struct {
	THeader        GBIDHeader
	ECurrencyType  DT_ENUM
	BIsAutoPickup  DT_INT
	BIsCraftingMat DT_INT
	SzIconLabel    DT_CSTRING[*DT_BYTE]
	GbidCategory   DT_GBID
	ArItems        DT_VARIABLEARRAY[*CurrencyItem]
	Unk_a7aad4d    DT_SNO
}

func (t *Currencies) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECurrencyType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsAutoPickup.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsCraftingMat.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzIconLabel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidCategory.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 58,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArItems.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+312, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a7aad4d.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 63,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+320, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_bc07d3c7 struct {
	ArPieces         DT_VARIABLEARRAY[*Type_3ddf9693]
	Unk_85db88e      DT_VARIABLEARRAY[*Type_3ddf9693]
	Unk_767477       DT_VARIABLEARRAY[*Type_3ddf9693]
	Unk_755f012      DT_RANGE[*DT_FLOAT]
	EPieceSelectMode DT_ENUM
}

func (t *Type_bc07d3c7) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPieces.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_85db88e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_767477.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_755f012.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPieceSelectMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NSlice struct {
	// Inherits WindowPiecesBase
	// Inherits PolymorphicBase
	DwType       DT_UINT
	DwPad        DT_UINT
	FlImageScale DT_FLOAT
	NPadding     DT_UINT
	HSourceImage DT_UINT
	ESliceStyle  DT_ENUM
	Unk_da48774  DT_VARIABLEARRAY[*DT_UINT]
	Unk_c69f784  DT_VARIABLEARRAY[*DT_UINT]
	FTileCenter  DT_INT
	Unk_d661bef  DT_INT
	Unk_1ec53df  DT_INT
}

func (t *NSlice) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlImageScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPadding.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.HSourceImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESliceStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_da48774.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c69f784.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.FTileCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d661bef.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1ec53df.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventObjectKeyFrame struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
	Unk_85269a4 DT_INT
	DwObjectID  DT_UINT
	ArKeys      DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	Unk_9717a7e DT_FLOAT
}

func (t *TriggerEventObjectKeyFrame) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_85269a4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwObjectID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArKeys.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9717a7e.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BuffCallbackBase struct {
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *BuffCallbackBase) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TransmogMultipleSlotsMessage struct {
	THeader     RequiredMessageHeader
	ArTransmogs DT_FIXEDARRAY[*TransmogSlotData]
}

func (t *TransmogMultipleSlotsMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArTransmogs.UnmarshalD4(r, &Options{
		ArrayLength: 16,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PreloadSpawnWorldDataMessage struct {
	THeader       RequiredMessageHeader
	IdSWorld      DT_SHARED_SERVER_DATA_ID
	Unk_f4f03a5   DT_INT
	ArPreloadData DT_FIXEDARRAY[*Type_6867c9cc]
}

func (t *PreloadSpawnWorldDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSWorld.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f4f03a5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPreloadData.UnmarshalD4(r, &Options{
		ArrayLength: 75,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1232, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_bc83f219 struct {
	DwPhase                  DT_UINT
	TSpawnBehavior           Type_da8a2315
	SnoPlayerAttachCondition DT_SNO
	ArLevelAreas             DT_VARIABLEARRAY[*DT_SNO]
}

func (t *Type_bc83f219) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPhase.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSpawnBehavior.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPlayerAttachCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArLevelAreas.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimTreeLeaf struct {
	DwID            DT_UINT
	ENodeType       DT_ENUM
	SnoAnim         DT_SNO
	SnoPowerAnimKey DT_SNO
	FlPoseFrame     DT_FLOAT
	FlPlaySpeed     DT_FLOAT
	NSyncGroupIndex DT_INT
	BIsDisabled     DT_INT
	Unk_4088987     DT_INT
	EScaleMethod    DT_ENUM
	EUpdateMode     DT_ENUM
	EBoneWeightSet  DT_ENUM
	EAnimLayer      DT_ENUM
	Unk_51765c9     DT_ENUM
}

func (t *AnimTreeLeaf) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.ENodeType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAnim.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 6,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerAnimKey.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPoseFrame.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPlaySpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSyncGroupIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4088987.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.EScaleMethod.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.EUpdateMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBoneWeightSet.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAnimLayer.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_51765c9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimTreeNode struct {
	// Inherits AnimTreeNodeBase
	// Inherits PolymorphicBase
	DwType               DT_UINT
	DwPad                DT_UINT
	DwID                 DT_UINT
	ENodeType            DT_ENUM
	EAnimLayer           DT_ENUM
	PtChildren           DT_VARIABLEARRAY[*AnimTreeNodeChild]
	EBlendParam          DT_ENUM
	ESecondaryBlendParam DT_ENUM
	Unk_5733828          DT_VARIABLEARRAY[*AnimTreeBlendTriangle]
	TMinBlend            DT_VECTOR2D
	TMaxBlend            DT_VECTOR2D
	TBlendIn             BlendSettings
	TBlendOut            BlendSettings
	Unk_dd1cd6f          DT_INT
	NSyncGroupIndex      DT_INT
}

func (t *AnimTreeNode) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.ENodeType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAnimLayer.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtChildren.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendParam.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESecondaryBlendParam.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5733828.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMinBlend.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMaxBlend.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.TBlendIn.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.TBlendOut.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dd1cd6f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSyncGroupIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MaterialEnum struct {
	DwValue    DT_UINT
	SzEnumName DT_CSTRING[*DT_BYTE]
}

func (t *MaterialEnum) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzEnumName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestChainSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType        DT_UINT
	BNegate       DT_INT
	DwPad         DT_UINT
	SnoQuestChain DT_SNO
	EState        DT_ENUM
}

func (t *QuestChainSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuestChain.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 96,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.EState.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptMessageMapFilter struct {
	TKey          DT_UINT
	EVariableType DT_ENUM
	Unk_67545b    DT_POLYMORPHIC_VARIABLEARRAY[*ScriptEventParamBase]
}

func (t *ScriptMessageMapFilter) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TKey.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EVariableType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_67545b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimationClothOverride struct {
	SnoAnimation     DT_SNO
	SnoClothOverride DT_SNO
	FlBlendTime      DT_FLOAT
}

func (t *AnimationClothOverride) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAnimation.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 6,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoClothOverride.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 11,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlBlendTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SimpleResponse struct {
	THeader Type_ad008e7e
}

func (t *SimpleResponse) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HirelingInfoUpdateMessage struct {
	THeader     RequiredMessageHeader
	EClass      DT_INT
	FDead       DT_INT
	GbidName    DT_GBID
	Unk_dce541c DT_UINT
}

func (t *HirelingInfoUpdateMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EClass.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDead.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConversationCannedNode struct {
	// Inherits ConversationTreeNode
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	DwNodeID              DT_UINT
	DwNextNodeID          DT_UINT
	Unk_3ef8e38           DT_UINT
	PtNextNode            DT_INT64
	DwFlags               DT_UINT
	SzComment             DT_CSTRING[*DT_BYTE]
	SnoCannedConversation DT_SNO
	Unk_1d53cd7           DT_UINT
}

func (t *ConversationCannedNode) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNodeID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNextNodeID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3ef8e38.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtNextNode.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzComment.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCannedConversation.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 12,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1d53cd7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorVisualInventoryData struct {
	FEnableOverride DT_INT
	SnoActor        DT_FIXEDARRAY[*DT_SNO]
	SnoActor2       DT_FIXEDARRAY[*DT_SNO]
}

func (t *ActorVisualInventoryData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FEnableOverride.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		ArrayLength: 10,
		Flags:       1,
		Group:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor2.UnmarshalD4(r, &Options{
		ArrayLength: 10,
		Flags:       1,
		Group:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CampDiscoveredSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType            DT_UINT
	BNegate           DT_INT
	DwPad             DT_UINT
	SnoCampQuestChain DT_SNO
}

func (t *CampDiscoveredSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCampQuestChain.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 96,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LabelGBID_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*LabelGBID]
}

func (t *LabelGBID_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ByteDataMessage struct {
	THeader RequiredMessageHeader
	BData   DT_BYTE
}

func (t *ByteDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CampaignCallbackSubcondition struct {
	// Inherits QuestSubconditionBase
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType       DT_UINT
	BNegate      DT_INT
	SnoQuest     DT_SNO
	DwPad        DT_UINT
	NStepUID     DT_INT
	NCallbackUID DT_UINT
	EComp        DT_ENUM
	NCount       DT_UINT
}

func (t *CampaignCallbackSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.NStepUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCallbackUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIStoryboard2Style struct {
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	SnoStoryboard             DT_SNO
	ELoadBehavior             DT_ENUM
	EActivateBehavior         DT_ENUM
	EFinishBehavior           DT_ENUM
	Unk_92765af               DT_TAGMAP[*DT_ENUM]
}

func (t *UIStoryboard2Style) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoStoryboard.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 90,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.ELoadBehavior.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.EActivateBehavior.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.EFinishBehavior.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_92765af.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AttachCarryableToPlayerMessage struct {
	THeader      RequiredMessageHeader
	AnnPlayer    DT_ACD_NETWORK_NAME
	SnoCarryable DT_SNO
	Unk_d5b8271  DT_UINT
	Unk_7888959  DT_UINT
}

func (t *AttachCarryableToPlayerMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnPlayer.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCarryable.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d5b8271.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7888959.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CriteriaEvent struct {
	// Inherits PolymorphicBase
	DwType               DT_UINT
	EId                  DT_ENUM
	ArModifier           DT_VARIABLEARRAY[*CriteriaModifier]
	Snoname              DT_SNO_NAME
	EGizmoType           DT_ENUM
	EIQL                 DT_ENUM
	ESlot                DT_ENUM
	EHealType            DT_ENUM
	ECurrencyType        DT_ENUM
	EZone                DT_ENUM
	UVal                 DT_UINT
	GbidAchievementEvent DT_GBID
	UOperand             DT_INT64
	BUsesOperand         DT_INT
	DwPad                DT_UINT
}

func (t *CriteriaEvent) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArModifier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Snoname.UnmarshalD4(r, &Options{Flags: 513}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.EGizmoType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.EIQL.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESlot.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.EHealType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECurrencyType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.EZone.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.UVal.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidAchievementEvent.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 62,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.UOperand.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.BUsesOperand.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type IKWindow struct {
	Unk_fa00882 DT_RANGE[*DT_UINT]
}

func (t *IKWindow) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fa00882.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RandomAmbientSoundParams struct {
	SnoSound     DT_SNO
	TRadiusRange DT_RANGE[*DT_FLOAT]
	THeightRange DT_RANGE[*DT_FLOAT]
	Unk_99bfb44  DT_RANGE[*DT_FLOAT]
	ETimeOfDay   DT_ENUM
}

func (t *RandomAmbientSoundParams) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TRadiusRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeightRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_99bfb44.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETimeOfDay.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ChargeableGizmoData struct {
	// Inherits NamedGizmoData
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
	Unk_3cb2278                  DT_FLOAT
}

func (t *ChargeableGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3cb2278.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SwitchBehaviorGizmoData struct {
	ESwitchBehavior DT_ENUM
}

func (t *SwitchBehaviorGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESwitchBehavior.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_bf28a9b0 struct {
	THeader     RequiredMessageHeader
	FlStart     DT_FLOAT
	FlDuration  DT_FLOAT
	Unk_e5c87c4 DT_FLOAT
}

func (t *Type_bf28a9b0) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlStart.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e5c87c4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WorldTierChangeMessage struct {
	THeader    RequiredMessageHeader
	EWorldTier DT_INT
}

func (t *WorldTierChangeMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EWorldTier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_bf3bc347 struct {
	SnoCampaignCondition DT_SNO
	Unk_2cfa560          DT_INT
}

func (t *Type_bf3bc347) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCampaignCondition.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2cfa560.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_bf456a16 struct {
	NIndexOffset DT_INT
	NIndexCount  DT_INT
}

func (t *Type_bf456a16) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NIndexOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NIndexCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Octree struct {
	NMaxNodes       DT_INT
	NMaxLeaves      DT_INT
	NMaxPrimitives  DT_INT
	NNodeCount      DT_INT
	NLeafCount      DT_INT
	NPrimitiveCount DT_INT
	TRootCube       OctreeCube
	PtNodes         DT_VARIABLEARRAY[*OctreeNode]
	PtLeaves        DT_VARIABLEARRAY[*OctreeLeaf]
	PtPrimitives    DT_VARIABLEARRAY[*OctreePrimitive]
}

func (t *Octree) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMaxNodes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMaxLeaves.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMaxPrimitives.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.NNodeCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLeafCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPrimitiveCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TRootCube.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtNodes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtLeaves.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPrimitives.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AttributeSpecifier struct {
	EAttribute         DT_ENUM
	NParam             DT_INT
	SzAttributeFormula DT_STRING_FORMULA
	GbidFormula        DT_GBID
	Unk_dffdf28        DT_STRING_FORMULA
}

func (t *AttributeSpecifier) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAttribute.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NParam.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzAttributeFormula.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidFormula.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dffdf28.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayEffectMessage struct {
	THeader            RequiredMessageHeader
	Ann                DT_ACD_NETWORK_NAME
	EEffectType        DT_ENUM
	NEffectParameter   DT_OPTIONAL[*DT_INT]
	Unk_4d7691e        DT_OPTIONAL[*Type_3940c0fe]
	AnnPlayer          DT_OPTIONAL[*DT_ACD_NETWORK_NAME]
	AnnAttacker        DT_OPTIONAL[*DT_ACD_NETWORK_NAME]
	FlSpeedScale       DT_OPTIONAL[*DT_FLOAT]
	DwEffectFlags      DT_OPTIONAL[*DT_UINT]
	SnoPowerSource     DT_OPTIONAL[*DT_SNO]
	THardpointOverride DT_OPTIONAL[*HardpointInfo]
}

func (t *PlayEffectMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EEffectType.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.NEffectParameter.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4d7691e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnPlayer.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnAttacker.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSpeedScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwEffectFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerSource.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConversationLineNode struct {
	// Inherits ConversationTreeNode
	// Inherits PolymorphicBase
	DwType           DT_UINT
	DwPad            DT_UINT
	DwNodeID         DT_UINT
	DwNextNodeID     DT_UINT
	Unk_3ef8e38      DT_UINT
	PtNextNode       DT_INT64
	DwFlags          DT_UINT
	SzComment        DT_CSTRING[*DT_BYTE]
	SnoSpeaker       DT_SNO
	EGender          DT_ENUM
	EPlayerClass     DT_ENUM
	TDisplayTimes    DT_FIXEDARRAY[*ConvLocaleDisplayTimes]
	SnoSoundOverride DT_SNO
	Unk_2813b6e      DT_FLOAT
	Unk_357a6f3      DT_INT
}

func (t *ConversationLineNode) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNodeID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNextNodeID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3ef8e38.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtNextNode.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzComment.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSpeaker.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 72,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.EGender.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPlayerClass.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDisplayTimes.UnmarshalD4(r, &Options{
		ArrayLength: 19,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+836, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSoundOverride.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+840, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2813b6e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+844, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_357a6f3.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+848, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CraftingMatCategory_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*CraftingMatCategory]
}

func (t *CraftingMatCategory_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PublicGameSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType  DT_UINT
	BNegate DT_INT
	DwPad   DT_UINT
}

func (t *PublicGameSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerVariableStringSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType               DT_UINT
	BNegate              DT_INT
	DwPad                DT_UINT
	GbidDesignerVariable DT_GBID
	SzValue              DT_UINT
}

func (t *PlayerVariableStringSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidDesignerVariable.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 45,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SpeedTreeBranchWindLevel struct {
	AfDistance           DT_FIXEDARRAY[*DT_FLOAT]
	AfDirectionAdherence DT_FIXEDARRAY[*DT_FLOAT]
	AfWhip               DT_FIXEDARRAY[*DT_FLOAT]
	FTurbulence          DT_FLOAT
	FTwitch              DT_FLOAT
	FTwitchFreqScale     DT_FLOAT
}

func (t *SpeedTreeBranchWindLevel) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.AfDistance.UnmarshalD4(r, &Options{
		ArrayLength: 10,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.AfDirectionAdherence.UnmarshalD4(r, &Options{
		ArrayLength: 10,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.AfWhip.UnmarshalD4(r, &Options{
		ArrayLength: 10,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.FTurbulence.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.FTwitch.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.FTwitchFreqScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_c06f4ebf struct {
	SzTreeScrollbar DT_CSTRING[*DT_BYTE]
}

func (t *Type_c06f4ebf) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzTreeScrollbar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorNPCData struct {
	Unk_370e8c2        DT_INT
	Unk_d1de32b        DT_VARIABLEARRAY[*NPCComponentGroup]
	SnoNPCComponentSet DT_SNO
	Unk_a9187cf        DT_VARIABLEARRAY[*NPCItems]
	Unk_4c7112f        DT_INT
	Unk_1c56441        DT_ENUM
}

func (t *ActorNPCData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_370e8c2.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d1de32b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoNPCComponentSet.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 2,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a9187cf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4c7112f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1c56441.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestTagsEntry_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*QuestTagsEntry]
}

func (t *QuestTagsEntry_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayErrorSoundMessage struct {
	THeader       RequiredMessageHeader
	EWarningSound DT_ENUM
}

func (t *PlayErrorSoundMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EWarningSound.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type JoinLANGameMessage struct {
	THeader       RequiredMessageHeader
	IdSGame       DT_INT
	IdGameAccount DT_UINT
	SzAccountName DT_CHARARRAY
	EXLocale      DT_ENUM
	FlAspectRatio DT_FLOAT
}

func (t *JoinLANGameMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSGame.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdGameAccount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzAccountName.UnmarshalD4(r, &Options{
		ArrayLength: 128,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.EXLocale.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAspectRatio.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_c0fa945c struct {
	THeader RequiredMessageHeader
	Ann     DT_ACD_NETWORK_NAME
}

func (t *Type_c0fa945c) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_c1762b19 struct {
	Unk_941b8c4        DT_INT
	Unk_9f5a7e6        DT_INT
	Unk_60998e0        DT_INT
	Unk_92fec32        DT_INT
	TMargins           UIMargins
	NHorizontalSpacing DT_INT
	NVerticalSpacing   DT_INT
}

func (t *Type_c1762b19) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_941b8c4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9f5a7e6.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_60998e0.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_92fec32.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMargins.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.NHorizontalSpacing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.NVerticalSpacing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_c1c86aca struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
	BHide       DT_INT
}

func (t *Type_c1c86aca) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.BHide.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NpcArchetypeTemplate struct {
	SzName             DT_CSTRING[*DT_BYTE]
	SzToolTip          DT_CSTRING[*DT_BYTE]
	SnoTemplateActor   DT_SNO
	SnoMountedAnimTree DT_SNO
	Unk_c249c5f        DT_VARIABLEARRAY[*DT_GBID]
	Unk_83f3d3e        DT_INT
	Unk_58f8666        DT_INT
	FHideIdles         DT_INT
	Unk_c62b399        DT_INT
	Unk_fd60c8f        DT_INT
	Unk_8711100        DT_INT
	Unk_d289db4        DT_INT
	Unk_d8df50f        DT_INT
	Unk_d6da84         DT_INT
}

func (t *NpcArchetypeTemplate) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzToolTip.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTemplateActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMountedAnimTree.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 67,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c249c5f.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 53,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_83f3d3e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_58f8666.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.FHideIdles.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c62b399.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd60c8f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8711100.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d289db4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d8df50f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d6da84.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ItemPreloadHelper struct {
	SnoItem DT_SNO
}

func (t *ItemPreloadHelper) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItem.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConversationTreeNode struct {
	// Inherits PolymorphicBase
	DwType       DT_UINT
	DwPad        DT_UINT
	DwNodeID     DT_UINT
	DwNextNodeID DT_UINT
	Unk_3ef8e38  DT_UINT
	PtNextNode   DT_INT64
	DwFlags      DT_UINT
	SzComment    DT_CSTRING[*DT_BYTE]
}

func (t *ConversationTreeNode) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNodeID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNextNodeID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3ef8e38.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtNextNode.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzComment.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_c1ddc6d3 struct {
	ANodes         DT_INT64
	AVertices      DT_INT64
	ATriangles     DT_INT64
	NNodeCount     DT_INT
	NVertexCount   DT_INT
	NTriangleCount DT_INT
	Height         DT_INT
	SurfaceArea    DT_FLOAT
	Padding        DT_INT
}

func (t *Type_c1ddc6d3) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ANodes.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.AVertices.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ATriangles.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NNodeCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.NVertexCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.NTriangleCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Height.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SurfaceArea.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Padding.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SpawnGenerator struct{}

func (t *SpawnGenerator) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+1, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_c2750a61 struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType       DT_UINT
	BNegate      DT_INT
	DwPad        DT_UINT
	FPlayerClass DT_FIXEDARRAY[*DT_INT]
}

func (t *Type_c2750a61) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FPlayerClass.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SkillTag struct {
	THeader             GBIDHeader
	DwTypes             DT_UINT
	EPlayerClass        DT_ENUM
	EDamageTypeOverride DT_ENUM
	BIsPrimary          DT_INT
	ArSkillTreeIcons    DT_FIXEDARRAY[*Type_6b1c5d9c]
	ArCategoryIcons     DT_FIXEDARRAY[*Type_6b1c5d9c]
}

func (t *SkillTag) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTypes.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPlayerClass.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDamageTypeOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsPrimary.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSkillTreeIcons.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCategoryIcons.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+316, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_c2ce8583 struct {
	Unk_8078288        DT_VECTOR4D
	Unk_80782b8        DT_VECTOR4D
	V                  DT_VECTOR4D
	Vw                 DT_VECTOR4D
	Unk_fe3c31a        Type_b88f4265
	ClientFrame        Type_b88f4265
	DeltaFrame         Type_b88f4265
	BindNormal         DT_VECTOR4D
	SkinNormal         DT_VECTOR4D
	SkinPoint          DT_VECTOR4D
	Unk_8dcbeec        DT_VECTOR4D
	Unk_36fad31        DT_FLOAT
	InvMass            DT_FLOAT
	AttachmentRadius   DT_FLOAT
	ParentIndex        DT_WORD
	AttachmentDistance DT_WORD
	Unk_7f4d141        DT_WORD
	Unk_f67de53        DT_WORD
	Unk_87816fd        DT_FLOAT
	TangentIndex       DT_WORD
	Flags              DT_WORD
	AInfluences        DT_FIXEDARRAY[*DT_WORD]
	Padding            DT_FIXEDARRAY[*DT_WORD]
	Weights            DT_VECTOR4D
}

func (t *Type_c2ce8583) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8078288.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_80782b8.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.V.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Vw.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fe3c31a.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.ClientFrame.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.DeltaFrame.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.BindNormal.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.SkinNormal.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.SkinPoint.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8dcbeec.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+320, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_36fad31.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+324, io.SeekStart); err != nil {
		return err
	}
	if err := t.InvMass.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+328, io.SeekStart); err != nil {
		return err
	}
	if err := t.AttachmentRadius.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+332, io.SeekStart); err != nil {
		return err
	}
	if err := t.ParentIndex.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+334, io.SeekStart); err != nil {
		return err
	}
	if err := t.AttachmentDistance.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+336, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7f4d141.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+338, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f67de53.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+340, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87816fd.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+344, io.SeekStart); err != nil {
		return err
	}
	if err := t.TangentIndex.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+346, io.SeekStart); err != nil {
		return err
	}
	if err := t.Flags.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+348, io.SeekStart); err != nil {
		return err
	}
	if err := t.AInfluences.UnmarshalD4(r, &Options{ArrayLength: 4}); err != nil {
		return err
	}
	if _, err := r.Seek(p+356, io.SeekStart); err != nil {
		return err
	}
	if err := t.Padding.UnmarshalD4(r, &Options{ArrayLength: 6}); err != nil {
		return err
	}
	if _, err := r.Seek(p+368, io.SeekStart); err != nil {
		return err
	}
	if err := t.Weights.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+384, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventScreenFade struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
	RgbaFadeColor    DT_RGBACOLOR
}

func (t *TriggerEventScreenFade) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaFadeColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ProjectileImpactEffect struct {
	SnoEffect            DT_SNO
	FlEffectDuration     DT_FLOAT
	Unk_a4ec910          DT_INT
	Unk_52ba359          DT_FLOAT
	FlTargetImpactHeight DT_FLOAT
	FlTargetImpactPitch  DT_FLOAT
}

func (t *ProjectileImpactEffect) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlEffectDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a4ec910.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_52ba359.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTargetImpactHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTargetImpactPitch.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type FogOfWarImage struct {
	SnoFoW         DT_SNO
	SnoTexture     DT_SNO
	VecWorldOffset DT_VECTOR2D
	VecWorldSize   DT_VECTOR2D
}

func (t *FogOfWarImage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFoW.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 123,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTexture.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecWorldOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecWorldSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type StoryboardTimePointNode struct {
	// Inherits PolymorphicBase
	DwType DT_UINT
	FlTime DT_FLOAT
	DwPad  DT_UINT
}

func (t *StoryboardTimePointNode) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UILayoutList struct {
	ArEntries DT_VARIABLEARRAY[*UILayoutEntries]
}

func (t *UILayoutList) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LevelAreaTagsEntry_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*LevelAreaTagsEntry]
}

func (t *LevelAreaTagsEntry_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventFade struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
	FFadeOwner       DT_INT
	BRollConnection  DT_INT
	DwObjectID       DT_UINT
}

func (t *TriggerEventFade) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.FFadeOwner.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.BRollConnection.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwObjectID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventNull struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
}

func (t *TriggerEventNull) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DotApplicationVisualsMessage struct {
	THeader           RequiredMessageHeader
	SnoPower          DT_SNO
	DwPayloadDataID   DT_UINT
	EDamageType       DT_ENUM
	AnnTarget         DT_ACD_NETWORK_NAME
	AnnAttacker       DT_ACD_NETWORK_NAME
	Unk_1c7ccc9       DT_FLOAT
	BTargetAlive      DT_INT
	Unk_5692531       DT_OPTIONAL[*DT_VECTOR3D]
	Unk_5d619c6       DT_OPTIONAL[*DT_VECTOR3D]
	FlImpactDirection DT_OPTIONAL[*DT_FLOAT]
	FlImpactPitch     DT_OPTIONAL[*DT_FLOAT]
}

func (t *DotApplicationVisualsMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPayloadDataID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDamageType.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnAttacker.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1c7ccc9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.BTargetAlive.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5692531.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5d619c6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlImpactDirection.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlImpactPitch.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BuffExclusiveType struct {
	THeader GBIDHeader
}

func (t *BuffExclusiveType) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TryChatMessage struct {
	THeader   RequiredMessageHeader
	UsMessage DT_CHARARRAY
}

func (t *TryChatMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.UsMessage.UnmarshalD4(r, &Options{
		ArrayLength: 1024,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1040, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SubzoneDefinition struct {
	SnoPrimaryWorld      DT_SNO
	UEntranceGUID        DT_STARTLOC_NAME
	ArLevelAreas         DT_VARIABLEARRAY[*DT_SNO]
	EType                DT_ENUM
	EParentZone          DT_ENUM
	SnoTerritory         DT_SNO
	EPvPType             DT_ENUM
	Unk_f34c43f          DT_SNO
	SnoActorGroups       DT_SNO
	PtPostprocessed      DT_INT64
	ArWorldMarkerSets    DT_VARIABLEARRAY[*SubzoneWorldMarkerSetEntry]
	ArSnoSecondaryWorlds DT_VARIABLEARRAY[*DT_SNO]
	DwFlags              DT_UINT
	Unk_35fc338          DT_INT
	Unk_6f7f585          DT_FIXEDARRAY[*LevelScalingData]
	Unk_496a122          LevelScalingData
	ArForcedPrefetchData DT_VARIABLEARRAY[*ForcedPrefetchData]
}

func (t *SubzoneDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPrimaryWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.UEntranceGUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArLevelAreas.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParentZone.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTerritory.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 92,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPvPType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f34c43f.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActorGroups.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 20,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPostprocessed.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArWorldMarkerSets.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSnoSecondaryWorlds.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_35fc338.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6f7f585.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_496a122.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArForcedPrefetchData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CapsuleProximityData struct {
	// Inherits ProximityDataBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	FlRadius DT_FLOAT
	FlHeight DT_FLOAT
}

func (t *CapsuleProximityData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConversationRandomSelectionNode struct {
	// Inherits ConversationScopeNode
	// Inherits ConversationTreeNode
	// Inherits PolymorphicBase
	DwType       DT_UINT
	DwPad        DT_UINT
	DwNodeID     DT_UINT
	DwNextNodeID DT_UINT
	Unk_3ef8e38  DT_UINT
	PtNextNode   DT_INT64
	DwFlags      DT_UINT
	SzComment    DT_CSTRING[*DT_BYTE]
	ArChildNodes DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	SnoCondition DT_SNO
	Unk_d8bf9e4  DT_INT
	DwWeight     DT_UINT
}

func (t *ConversationRandomSelectionNode) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNodeID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNextNodeID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3ef8e38.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtNextNode.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzComment.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArChildNodes.UnmarshalD4(r, &Options{Flags: 262145}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d8bf9e4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwWeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SubObjectNameInfo struct {
	EType        DT_ENUM
	DwFlags      DT_UINT
	DwPersona    DT_BYTE
	DwState      DT_BYTE
	DwStyle      DT_UINT
	DwSlotHash   DT_UINT
	Unk_d9c73f4  DT_UINT
	DwDetailHash DT_UINT
	Unk_c15f7d2  DT_UINT
	Unk_92fdd14  DT_UINT
	Unk_b0b7d46  DT_UINT
}

func (t *SubObjectNameInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPersona.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+9, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwState.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwSlotHash.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9c73f4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwDetailHash.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c15f7d2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_92fdd14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b0b7d46.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameTestingExecuteClientCheatMessage struct {
	THeader     RequiredMessageHeader
	SzCheat     DT_CHARARRAY
	Unk_d57d005 DT_INT
}

func (t *GameTestingExecuteClientCheatMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzCheat.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d57d005.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerPetSpawn struct {
	TName    DT_UINT
	GbidType DT_GBID
	TMax     DT_STRING_FORMULA
	THealth  HitpointSpecifier
}

func (t *PowerPetSpawn) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidType.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 23,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.THealth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type IntensityParam struct {
	EType       DT_ENUM
	Unk_465327d Type_cbfdd2ea
	ArSubParams DT_VARIABLEARRAY[*IntensitySubParam]
}

func (t *IntensityParam) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_465327d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSubParams.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_c5064aa7 struct {
	BIsDefault  DT_INT
	Unk_b29fdf6 DT_ENUM
}

func (t *Type_c5064aa7) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsDefault.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b29fdf6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AIStateDebugSetConditionStateMessage struct {
	THeader             RequiredMessageHeader
	AnnActor            DT_ACD_NETWORK_NAME
	DwCooldownKey       DT_INT64
	NIndex              DT_INT
	BInterruptCondition DT_INT
	BEnabled            DT_INT
}

func (t *AIStateDebugSetConditionStateMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnActor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwCooldownKey.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.NIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInterruptCondition.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEnabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActivityLinks struct {
	ArSnoLinkedTask DT_VARIABLEARRAY[*DT_SNO]
}

func (t *ActivityLinks) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSnoLinkedTask.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 136,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerPortalGizmoData struct {
	EWorldToChoose         DT_ENUM
	SnoSpecifiedWorld      DT_SNO
	DwEntranceNameToFind   DT_STARTLOC_NAME
	SnoPortalDestLevelArea DT_SNO
	DwPortalType           DT_UINT
	Unk_af5815a            DT_INT
	Unk_1f57cf2            DT_INT
	Unk_9799a99            DT_INT
}

func (t *MarkerPortalGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EWorldToChoose.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSpecifiedWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwEntranceNameToFind.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPortalDestLevelArea.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPortalType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1f57cf2.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9799a99.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamMarkerHandle struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType        DT_UINT
	EParamType    DT_ENUM
	DwPad         DT_UINT
	TMarkerHandle MarkerHandle
}

func (t *ScriptEventParamMarkerHandle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMarkerHandle.UnmarshalD4(r, &Options{Flags: 513}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIEditStyle struct {
	// Inherits UITextStyle
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	TFont                     UIControlFont
	Unk_4741819               DT_TAGMAP[*DT_ENUM]
	Unk_172e19a               DT_TAGMAP[*DT_ENUM]
}

func (t *UIEditStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFont.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4741819.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_172e19a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerGroupData struct {
	TLocalTransform PRTransform
	VecLocalScale   DT_VECTOR3D
}

func (t *MarkerGroupData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLocalTransform.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecLocalScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_c58eb80a struct {
	SnoWorld         DT_SNO
	SnoLevelArea     DT_SNO
	UExpireTimestamp DT_INT64
}

func (t *Type_c58eb80a) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelArea.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.UExpireTimestamp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PartyVoteReplyMessage struct {
	THeader RequiredMessageHeader
	Vote    DT_INT
}

func (t *PartyVoteReplyMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Vote.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WindowPiecesBase struct {
	// Inherits PolymorphicBase
	DwType       DT_UINT
	DwPad        DT_UINT
	FlImageScale DT_FLOAT
	NPadding     DT_UINT
}

func (t *WindowPiecesBase) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlImageScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPadding.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerGenderSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType  DT_UINT
	BNegate DT_INT
	DwPad   DT_UINT
	EGender DT_ENUM
}

func (t *PlayerGenderSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EGender.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PvPBucketLevels struct {
	DwMinLevel    DT_UINT
	DwMaxLevel    DT_UINT
	EWorldTier    DT_ENUM
	DwTargetLevel DT_UINT
}

func (t *PvPBucketLevels) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMinLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMaxLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EWorldTier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTargetLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_c5e8044d struct {
	FlPowerEffectSizeOverride      DT_FLOAT
	FlPowerEffectIntensityOverride DT_FLOAT
	FlPowerEffectDurationOverride  DT_FLOAT
	FlPowerEffectLengthOverride    DT_FLOAT
	FlPowerEffectWidthOverride     DT_FLOAT
	FlPowerEffectHeightOverride    DT_FLOAT
}

func (t *Type_c5e8044d) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPowerEffectSizeOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPowerEffectIntensityOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPowerEffectDurationOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPowerEffectLengthOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPowerEffectWidthOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPowerEffectHeightOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PortalInfo struct {
	SnoIntroEffect        DT_SNO
	SnoLoopIntroEffect    DT_SNO
	SnoLoopEffect         DT_SNO
	SnoLoopOutroEffect    DT_SNO
	SnoLoopSkipEffect     DT_SNO
	Unk_b8b4636           DT_FLOAT
	Unk_7bc440d           DT_FLOAT
	Unk_86403ef           DT_INT
	Unk_f0eaae5           DT_INT
	Unk_e0a3943           DT_INT
	Unk_9c071e3           DT_INT
	Unk_4bd94b4           DT_INT
	Unk_69b2ec7           DT_INT
	Unk_449111f           DT_INT
	SnoOutroEffect        DT_SNO
	SnoSkippedOutroEffect DT_SNO
	SnoLoopingWorld       DT_SNO
	SzCameraMarkerName    DT_CHARARRAY
	Unk_bdd12d            DT_INT
	Unk_f8d8170           DT_FLOAT
	Unk_188141b           DT_FLOAT
	Unk_66ebec            DT_FLOAT
	Unk_e660d97           DT_FLOAT
}

func (t *PortalInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoIntroEffect.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLoopIntroEffect.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLoopEffect.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLoopOutroEffect.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLoopSkipEffect.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b8b4636.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7bc440d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_86403ef.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f0eaae5.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e0a3943.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c071e3.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4bd94b4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_69b2ec7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_449111f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOutroEffect.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSkippedOutroEffect.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLoopingWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzCameraMarkerName.UnmarshalD4(r, &Options{
		ArrayLength: 128,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bdd12d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f8d8170.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_188141b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_66ebec.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e660d97.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RequiredMessageHeader struct {
	EType       DT_ENUM
	Unk_2f5806b DT_INT
	DwSize      DT_OPTIONAL[*DT_WORD]
}

func (t *RequiredMessageHeader) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2f5806b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwSize.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnBerserkAppliedCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnBerserkAppliedCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventPOISkip struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
}

func (t *TriggerEventPOISkip) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalMarkerActor struct {
	SnoMarkerSet               DT_SNO
	SzMarkerName               DT_UINT
	DwMarkerPathID             DT_UINT
	SnoActor                   DT_SNO
	EActorType                 DT_ENUM
	EGizmoType                 DT_ENUM
	SnoWorld                   DT_SNO
	TWorldTransform            PRTransform
	SnoCampaignEnableCondition DT_SNO
	SnoLevelArea               DT_SNO
	SnoFogOfWar                DT_SNO
	ArSubzones                 DT_VARIABLEARRAY[*DT_SNO]
	PtData                     DT_POLYMORPHIC_VARIABLEARRAY[*GlobalMarkerActorData]
}

func (t *GlobalMarkerActor) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMarkerSet.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 24,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzMarkerName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMarkerPathID.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EActorType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.EGizmoType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.TWorldTransform.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCampaignEnableCondition.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelArea.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFogOfWar.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 123,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSubzones.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_c661a6fd struct {
	DwID                  DT_UINT
	Unk_c94355b           DT_VARIABLEARRAY[*DT_SNO]
	SnoCraftLockCondition DT_SNO
}

func (t *Type_c661a6fd) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c94355b.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 98,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCraftLockCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConversationDefinition struct {
	EConvType               DT_ENUM
	Unk_1fd072a             DT_SNO
	Unk_951e771             DT_SNO
	SnoConversationFollowup DT_SNO
	FlCooldownTime          DT_FLOAT
	FlCancelDistance        DT_FLOAT
	BFadeAtStart            DT_INT
	BFadeAtEnd              DT_INT
	Unk_8d6f162             DT_INT
	Unk_ac91f5d             DT_INT
	Unk_e1d8535             DT_INT
	BBookendConversation    DT_INT
	BIsInterruptible        DT_INT
	DwFlags                 DT_UINT
	ArRootNodes             DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	SzSetPlayerFlag         DT_CHARARRAY
	DwNextNodeID            DT_UINT
}

func (t *ConversationDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EConvType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1fd072a.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_951e771.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoConversationFollowup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 12,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlCooldownTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlCancelDistance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.BFadeAtStart.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.BFadeAtEnd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8d6f162.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ac91f5d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e1d8535.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.BBookendConversation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsInterruptible.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArRootNodes.UnmarshalD4(r, &Options{Flags: 262145}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzSetPlayerFlag.UnmarshalD4(r, &Options{
		ArrayLength: 128,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNextNodeID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIProgressBarStyle struct {
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	Unk_10b0379               Type_f675b103
	Unk_a229fbe               DT_TAGMAP[*DT_ENUM]
}

func (t *UIProgressBarStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_10b0379.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a229fbe.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PayloadOnHitMessage struct {
	THeader           RequiredMessageHeader
	SnoPower          DT_SNO
	DwPayloadDataID   DT_UINT
	EDamageType       DT_ENUM
	AnnTarget         DT_ACD_NETWORK_NAME
	AnnAttacker       DT_ACD_NETWORK_NAME
	BTargetAlive      DT_INT
	EHitSound         DT_OPTIONAL[*DT_ENUM]
	Unk_75bd339       DT_OPTIONAL[*DT_ENUM]
	Unk_4d7691e       DT_OPTIONAL[*Type_3940c0fe]
	Unk_5692531       DT_OPTIONAL[*DT_VECTOR3D]
	Unk_5d619c6       DT_OPTIONAL[*DT_VECTOR3D]
	FlImpactDirection DT_OPTIONAL[*DT_FLOAT]
	FlImpactPitch     DT_OPTIONAL[*DT_FLOAT]
	Unk_94ab101       DT_OPTIONAL[*DT_SNO]
	Unk_78c21b7       DT_OPTIONAL[*DT_SNO]
	Unk_81caaab       DT_OPTIONAL[*DT_SNO]
	Unk_b1ba550       DT_OPTIONAL[*DT_SNO]
	Unk_563f3e        DT_OPTIONAL[*DT_ENUM]
	FlDamageUnscaled  DT_OPTIONAL[*DT_FLOAT]
	DwEffectFlags     DT_OPTIONAL[*DT_UINT]
}

func (t *PayloadOnHitMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPayloadDataID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDamageType.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnAttacker.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.BTargetAlive.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.EHitSound.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_75bd339.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4d7691e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5692531.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5d619c6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlImpactDirection.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlImpactPitch.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_94ab101.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_78c21b7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_81caaab.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b1ba550.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_563f3e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDamageUnscaled.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwEffectFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_c69c1754 struct {
	THeader RequiredMessageHeader
	SzText  DT_CHARARRAY
}

func (t *Type_c69c1754) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzText.UnmarshalD4(r, &Options{
		ArrayLength: 350,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+368, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Rect2D struct {
	Left   DT_FLOAT
	Top    DT_FLOAT
	Right  DT_FLOAT
	Bottom DT_FLOAT
}

func (t *Rect2D) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Left.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Top.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Right.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Bottom.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptedAchievementEvent struct {
	THeader GBIDHeader
}

func (t *ScriptedAchievementEvent) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NPCServiceData struct {
	EServiceType              DT_ENUM
	EVendorType               DT_ENUM
	ECrafterType              DT_ENUM
	FlPriceMarkup             DT_FLOAT
	ECurrencyType             DT_ENUM
	SnoClassPassiveReputation DT_SNO
	EDruidSpiritType          DT_ENUM
	HSpiritIcon               DT_UINT
	HSpiritBondIcon           DT_UINT
}

func (t *NPCServiceData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EServiceType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EVendorType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECrafterType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPriceMarkup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECurrencyType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoClassPassiveReputation.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 105,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDruidSpiritType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.HSpiritIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.HSpiritBondIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ClassInfoPlayStyle struct {
	HIcon        DT_UINT
	HTitle       DT_UINT
	HDescription DT_UINT
}

func (t *ClassInfoPlayStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.HTitle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.HDescription.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UICutsceneStyle struct {
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
}

func (t *UICutsceneStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorJitterJoint struct {
	SzBoneName       DT_UINT
	FlJitterStrength DT_FLOAT
	FlJitterSpeed    DT_FLOAT
	Unk_36bc3de      DT_FLOAT
	FlDuration       DT_FLOAT
}

func (t *ActorJitterJoint) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzBoneName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlJitterStrength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlJitterSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_36bc3de.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type StackPortionMessage struct {
	THeader RequiredMessageHeader
	AnnItem DT_ACD_NETWORK_NAME
	UAmount DT_INT64
}

func (t *StackPortionMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnItem.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.UAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_c7707f77 struct {
	THeader      RequiredMessageHeader
	NCrafterType DT_INT
}

func (t *Type_c7707f77) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCrafterType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ACDInventoryPositionMessage struct {
	THeader          RequiredMessageHeader
	Ann              DT_ACD_NETWORK_NAME
	TInvLocationData InventoryLocationMessageData
	TLocType         DT_ENUM
	Unk_9e938b5      DT_OPTIONAL[*DT_INT64]
}

func (t *ACDInventoryPositionMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TInvLocationData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLocType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9e938b5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CrafterDefinition struct {
	DwNextID       DT_UINT
	ECrafterType   DT_ENUM
	Unk_a34d0af    DT_SNO
	ArTabs         DT_VARIABLEARRAY[*Type_c661a6fd]
	ArRecipeTiers  DT_VARIABLEARRAY[*RecipeTier]
	ArImbueRecipes DT_VARIABLEARRAY[*ImbueRecipe]
	Unk_aa9dad7    DT_VARIABLEARRAY[*ImbueRecipe]
}

func (t *CrafterDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNextID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECrafterType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a34d0af.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArTabs.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArRecipeTiers.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArImbueRecipes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aa9dad7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RenderParams struct {
	Unk_e80141f           DT_INT
	ECullMode             DT_ENUM
	FZBufferWriteEnable   DT_INT
	EZBufferCompareFunc   DT_ENUM
	FlZBias               DT_FLOAT
	FlZSlopeScaleBias     DT_FLOAT
	TStencilParams        StencilParams
	FAlphaTestEnable      DT_INT
	EAlphaTestCompareFunc DT_ENUM
	BAlphaTestRefValue    DT_BYTE
	FAlphaMaskEnable      DT_INT
	EFillMode             DT_ENUM
	Unk_7e83826           DT_INT
	TAlphaBlend           DT_FIXEDARRAY[*AlphaBlendFactors]
}

func (t *RenderParams) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e80141f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECullMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FZBufferWriteEnable.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.EZBufferCompareFunc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlZBias.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlZSlopeScaleBias.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TStencilParams.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.FAlphaTestEnable.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAlphaTestCompareFunc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.BAlphaTestRefValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.FAlphaMaskEnable.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.EFillMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7e83826.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAlphaBlend.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+384, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BoneStructure struct {
	PtShapes           DT_VARIABLEARRAY[*CollisionShape]
	PtConstraint       DT_VARIABLEARRAY[*ConstraintParameters]
	DwHash             DT_UINT
	DwFlags            DT_UINT
	NParentIndex       DT_WORD
	NLOD               DT_WORD
	NTrueBoneLOD       DT_WORD
	Unk_b03b557        DT_WORD
	SnoParticleSystem  DT_SNO
	WsBounds           Sphere
	Transform          PRSTransform
	TransformInv       PRSTransform
	TransformParentRel PRSTransform
	Unk_7659cea        PRSTransform
}

func (t *BoneStructure) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtShapes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtConstraint.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwHash.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.NParentIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+42, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLOD.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.NTrueBoneLOD.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+46, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b03b557.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoParticleSystem.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 27,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.WsBounds.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Transform.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.TransformInv.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.TransformParentRel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7659cea.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerFlagSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType  DT_UINT
	BNegate DT_INT
	DwPad   DT_UINT
	SzLabel DT_CHARARRAY
}

func (t *PlayerFlagSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLabel.UnmarshalD4(r, &Options{
		ArrayLength: 128,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TransmogSlotData struct {
	ESlot                 DT_ENUM
	SnoTransmogSourceItem DT_SNO
	SnoDye                DT_SNO
	BRemove               DT_INT
}

func (t *TransmogSlotData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESlot.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTransmogSourceItem.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDye.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 122,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.BRemove.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIButtonStyle struct {
	// Inherits UITextStyle
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	TFont                     UIControlFont
	Unk_4741819               DT_TAGMAP[*DT_ENUM]
	TIcon                     UIControlIcon
	TClickSounds              Type_98c23c41
	Unk_10f81f0               DT_TAGMAP[*DT_ENUM]
}

func (t *UIButtonStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFont.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4741819.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.TIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.TClickSounds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_10f81f0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventAttachCamera struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType               DT_UINT
	TConditions          TriggerConditions
	FGenerated           DT_INT
	Unk_6cba752          DT_INT
	Unk_e560b0b          DT_UINT
	TDuration            DT_FLOAT
	DwTriggerFlags       DT_UINT
	DwTriggerFlagsEx     DT_UINT
	TCleanup             TriggerCleanup
	Unk_49e9257          DT_INT
	Unk_5490979          DT_INT
	DwPad                DT_UINT
	EObjectType          DT_ENUM
	THardpointLinkTarget HardpointLink
	DwObjectID           DT_UINT
	THardpointLink       HardpointLink
	Unk_896cea7          DT_INT
	Unk_454a2a1          DT_INT
	EBlendEasing         DT_ENUM
	Unk_10734fd          Type_e97cce1f
}

func (t *TriggerEventAttachCamera) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.EObjectType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLinkTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwObjectID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_896cea7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_454a2a1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_10734fd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventOutroAllObjects struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
}

func (t *TriggerEventOutroAllObjects) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupPositionZKeyData struct {
	// Inherits EffectGroupKeyData
	// Inherits PolymorphicBase
	DwType     DT_UINT
	DwPad      DT_UINT
	ArKeyItems DT_VARIABLEARRAY[*EffectGroupKey]
}

func (t *EffectGroupPositionZKeyData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArKeyItems.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_c8d78ce7 struct {
	NWidth       DT_INT
	NHeight      DT_INT
	NDepth       DT_INT
	DwPitch      DT_UINT
	DwSlicePitch DT_UINT
	FlGridSize   DT_FLOAT
	WpOrigin     DT_VECTOR3D
	Unk_4b236f4  DT_INT64
	Unk_aa0958e  DT_VARIABLEARRAY[*DT_WORD]
	Unk_aa09583  DT_VARIABLEARRAY[*DT_WORD]
	Unk_aa0957e  DT_VARIABLEARRAY[*DT_WORD]
	Unk_dd3cf4b  DT_VARIABLEARRAY[*DT_WORD]
	Unk_dd3cf40  DT_VARIABLEARRAY[*DT_WORD]
	Unk_dd3cf3b  DT_VARIABLEARRAY[*DT_WORD]
}

func (t *Type_c8d78ce7) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NWidth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NDepth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPitch.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwSlicePitch.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGridSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpOrigin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4b236f4.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aa0958e.UnmarshalD4(r, &Options{Flags: 2097153}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aa09583.UnmarshalD4(r, &Options{Flags: 2097153}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aa0957e.UnmarshalD4(r, &Options{Flags: 2097153}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dd3cf4b.UnmarshalD4(r, &Options{Flags: 2097153}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dd3cf40.UnmarshalD4(r, &Options{Flags: 2097153}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dd3cf3b.UnmarshalD4(r, &Options{Flags: 2097153}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type StoreProductDefinition struct {
	EType                         DT_ENUM
	Unk_d0a3165                   DT_VARIABLEARRAY[*DT_SNO]
	Unk_de90ee6                   DT_VARIABLEARRAY[*DT_SNO]
	Unk_12a0e73                   DT_VARIABLEARRAY[*DT_SNO]
	ArRequiresOwning              DT_VARIABLEARRAY[*DT_SNO]
	ArRequiresNotOwning           DT_VARIABLEARRAY[*DT_SNO]
	Unk_c7fa9b8                   DT_SNO
	SnoItemTransmog               DT_SNO
	SnoMount                      DT_SNO
	SnoEmote                      DT_SNO
	SnoMarkingShape               DT_SNO
	SnoJewelry                    DT_SNO
	SnoEmblem                     DT_SNO
	SnoHeadstone                  DT_SNO
	BInventoryDeleteItemAfterUses DT_INT
	Unk_54edf70                   DT_INT
	ArCardArtVariants             DT_VARIABLEARRAY[*CardArt]
	Unk_7b588be                   DT_UINT
	HSplashImage                  DT_UINT
	HConfirmImage                 DT_UINT
	HCategoryIcon                 DT_UINT
	HTileImage                    DT_UINT
	Unk_9a0855f                   DT_INT
	Unk_8c37b97                   DT_UINT
	Unk_54578ff                   DT_INT
	Unk_5ff5733                   DT_INT
	Unk_a26c284                   DT_UINT
	Unk_a08a2f4                   DT_UINT
	Unk_aa674fe                   DT_UINT
	Unk_68af238                   DT_INT
	TCustomizedPreview            Type_619110a4
	Unk_e5d7f3                    DT_FIXEDARRAY[*DT_INT]
	HDetailsDisplayImage          DT_UINT
}

func (t *StoreProductDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0a3165.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 110,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_de90ee6.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 110,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_12a0e73.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 110,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArRequiresOwning.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 110,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArRequiresNotOwning.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 110,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c7fa9b8.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 110,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItemTransmog.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMount.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEmote.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 118,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMarkingShape.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 115,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoJewelry.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 119,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEmblem.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 121,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoHeadstone.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInventoryDeleteItemAfterUses.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54edf70.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCardArtVariants.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7b588be.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.HSplashImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.HConfirmImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.HCategoryIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.HTileImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a0855f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8c37b97.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54578ff.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5ff5733.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a26c284.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a08a2f4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aa674fe.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_68af238.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCustomizedPreview.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e5d7f3.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	if err := t.HDetailsDisplayImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AchievementDefinition struct {
	UPointsValue         DT_UINT
	DwNextID             DT_UINT
	UMinRequiredCriteria DT_UINT
	SnoSupersedes        DT_SNO
	UFlags               DT_UINT
	UPlatformFlags       DT_UINT
	ArCriteriaList       DT_VARIABLEARRAY[*CriteriaDefinition]
	ArRewardList         DT_VARIABLEARRAY[*RewardDefinition]
	Unk_da26abf          PS4ConsoleAwardDefinition
	Unk_9c99920          PS5ConsoleAwardDefinition
	Unk_17fe2c9          XboxConsoleAwardDefinition
	HImage               DT_UINT
}

func (t *AchievementDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.UPointsValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNextID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.UMinRequiredCriteria.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSupersedes.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 99,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.UFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.UPlatformFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCriteriaList.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArRewardList.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_da26abf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c99920.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_17fe2c9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.HImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UISkillTreeStyle struct {
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
}

func (t *UISkillTreeStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UpdateConvAutoAdvanceMessage struct {
	THeader           RequiredMessageHeader
	SnoConv           DT_SNO
	NLineUID          DT_INT
	DwNextAdvanceTime DT_UINT
}

func (t *UpdateConvAutoAdvanceMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoConv.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 12,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLineUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNextAdvanceTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_c9a200b0 struct {
	FlTime    DT_FLOAT
	RgbaColor DT_RGBACOLOR
}

func (t *Type_c9a200b0) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Sphere struct {
	WpCenter DT_VECTOR3D
	WdRadius DT_FLOAT
}

func (t *Sphere) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpCenter.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.WdRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestReward struct {
	SnoTreasureClass DT_SNO
	NXPTier          DT_INT
	NGoldTier        DT_INT
	SnoTrackedReward DT_SNO
	Unk_b0fd814      DT_INT
	Unk_186d5e6      Type_e12242af
	Unk_f8ed991      DT_VARIABLEARRAY[*DT_SNO]
}

func (t *QuestReward) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTreasureClass.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NXPTier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NGoldTier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTrackedReward.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 126,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b0fd814.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_186d5e6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f8ed991.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_ca1fcba0 struct {
	Unk_184e1e5 DT_TAGMAP[*DT_ENUM]
}

func (t *Type_ca1fcba0) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_184e1e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RenderPass struct {
	ERenderLayer     DT_ENUM
	EGraphType       DT_ENUM
	TRenderParams    RenderParams
	PtInputLayout    DT_VARIABLEARRAY[*ShaderInputLayout]
	DwFlags          DT_UINT
	Unk_262684c      DT_UINT
	Unk_c23801f      DT_ENUM
	PtPostprocessed  DT_INT64
	Unk_295833       DT_VARIABLEARRAY[*DT_UINT]
	PtPerms          DT_VARIABLEARRAY[*ShaderPermutation]
	Unk_e39f53a      DT_VARIABLEARRAY[*Type_eb98da06]
	Unk_247b377      DT_VARIABLEARRAY[*Type_f58f01c3]
	Unk_1484b5a      DT_VARIABLEARRAY[*Type_d7ee8f26]
	TDefaultTextures DT_VARIABLEARRAY[*DefaultTextureInfo]
	Unk_9068982      DT_VARIABLEARRAY[*Type_30511dbc]
	Unk_282b17c      DT_TAGMAP[*DT_ENUM]
}

func (t *RenderPass) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ERenderLayer.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EGraphType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TRenderParams.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+392, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtInputLayout.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+408, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+412, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_262684c.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+416, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c23801f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+424, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPostprocessed.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+432, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_295833.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+448, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPerms.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+464, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e39f53a.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+480, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_247b377.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+496, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1484b5a.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+512, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDefaultTextures.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+528, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9068982.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+544, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_282b17c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+560, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GizmoTemplate struct{}

func (t *GizmoTemplate) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+1, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SpawnLocType_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*SpawnLocType]
}

func (t *SpawnLocType_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnPhaseEnteredPowerCallback struct {
	// Inherits PowerCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	BCouldHaveRagdolled   DT_INT
	TPhaseName            DT_UINT
}

func (t *OnPhaseEnteredPowerCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCouldHaveRagdolled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPhaseName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_cabcc4f9 struct {
	FlTime  DT_FLOAT
	FlScale DT_FLOAT
}

func (t *Type_cabcc4f9) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorLookOverrideChangedMessage struct {
	THeader           RequiredMessageHeader
	Ann               DT_ACD_NETWORK_NAME
	NChange           DT_INT
	NLookOverrideHash DT_UINT
	BOnDeath          DT_INT
	BRenderArmor      DT_INT
}

func (t *ActorLookOverrideChangedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NChange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLookOverrideHash.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.BOnDeath.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.BRenderArmor.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AIStateDebugTestSwitchMessage struct {
	THeader     RequiredMessageHeader
	AnnActor    DT_ACD_NETWORK_NAME
	Unk_ff59d1d DT_UINT
}

func (t *AIStateDebugTestSwitchMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnActor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ff59d1d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DungeonList struct {
	ArDungeons DT_VARIABLEARRAY[*DT_SNO]
}

func (t *DungeonList) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArDungeons.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerIsShapeshiftedSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType  DT_UINT
	BNegate DT_INT
	DwPad   DT_UINT
}

func (t *PlayerIsShapeshiftedSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalAVData struct {
	// Inherits GlobalBase
	// Inherits PolymorphicBase
	DwType                              DT_UINT
	DwPad                               DT_UINT
	WdMicrophoneHeight                  DT_FLOAT
	WdMicrophoneXYOffset                DT_FLOAT
	FlMicrophoneTiltCorrection          DT_FLOAT
	Unk_bcf2fa1                         DT_FLOAT
	FlDopplerFactor                     DT_FLOAT
	FlAttenuationFactor                 DT_FLOAT
	FlFriendlyAttenuationFactor         DT_FLOAT
	FlEnemyAttenuationFactor            DT_FLOAT
	Unk_a24f195                         DT_FLOAT
	Unk_de216d0                         ConversationTypeSounds
	Unk_ee2f4d9                         Type_abec9f65
	Unk_aab60e9                         DT_INT
	Unk_5e1713                          DT_INT
	Unk_4889712                         DT_INT
	Unk_14c506c                         DT_FLOAT
	Unk_9109f33                         DT_FLOAT
	Unk_97eca79                         DT_INT
	Unk_9bb9a7b                         DT_FLOAT
	Unk_bff9025                         DT_FLOAT
	Unk_6667f4c                         DT_FLOAT
	Unk_d4f116d                         DT_FLOAT
	Unk_3d2f7b4                         DT_FLOAT
	Unk_d06da3d                         DT_FLOAT
	Unk_1c5bd37                         DT_INT
	Unk_c1c8d33                         DT_FLOAT
	Unk_2d19c28                         DT_FLOAT
	Unk_84bd05e                         DT_FLOAT
	Unk_a674d1f                         DT_FLOAT
	Unk_48115e6                         DT_FLOAT
	Unk_1140ffa                         DT_FLOAT
	FlMultiplayerSmoothing              DT_FLOAT
	Unk_b7979d6                         DT_FLOAT
	Unk_1dc7c7a                         DT_FLOAT
	Unk_15e2cbc                         DT_FLOAT
	FlSpringMagnitude                   DT_FLOAT
	FlSpringStiffness                   DT_FLOAT
	FlOrbitSLerpScalar                  DT_FLOAT
	FlOrbitTransitionExponentialScalar  DT_FLOAT
	FlOrbitTransitionDuration           DT_FLOAT
	WvOrbitOffsetCenterForAngleLimiting DT_VECTOR3D
	FlOrbitMaxAngleFromOffsetCenter     DT_FLOAT
	VConsoleCameraShakeScalar           DT_VECTOR3D
	FlZNear                             DT_FLOAT
	Unk_4849eb5                         DT_FLOAT
	Unk_d16853d                         DT_FLOAT
	Unk_efc10ac                         DT_FLOAT
	Unk_67c3614                         DT_FLOAT
	Unk_6236ef1                         DT_FLOAT
	Unk_5d800f3                         DT_FLOAT
	Unk_75c2a63                         DT_FLOAT
	Unk_32ded65                         DT_FLOAT
	Unk_ba7c108                         DT_FLOAT
	Unk_ea151f5                         DT_FLOAT
	Unk_26bea03                         DT_FLOAT
	Unk_26bec71                         DT_FLOAT
	Unk_4d37f57                         DT_FLOAT
	Unk_fe87183                         DT_FLOAT
	Unk_9773164                         DT_FLOAT
	Unk_8682ecb                         DT_FLOAT
	Unk_b5787f8                         DT_RGBACOLOR
	Unk_dacb099                         DT_RGBACOLOR
	Unk_1d93a                           DT_RGBACOLOR
	Unk_25701db                         DT_RGBACOLOR
	Unk_dca1d11                         DT_RGBACOLOR
	Unk_dd6ca58                         DT_RGBACOLOR
	Unk_14e6af7                         DT_RGBACOLOR
	Unk_db836fa                         DT_RGBACOLOR
	Unk_ed20455                         DT_RGBACOLOR
	Unk_a879fd8                         DT_RGBACOLOR
	Unk_614e428                         DT_FLOAT
	FlTranslucencyScale                 DT_FLOAT
	Unk_ed46ae1                         DT_FLOAT
	Unk_a3a221d                         DT_FLOAT
	Unk_4450d33                         DT_FLOAT
	Unk_52fa93a                         DT_FLOAT
	Unk_f719403                         DT_FLOAT
	Unk_556d46a                         DT_FLOAT
	Unk_25055f1                         DT_FLOAT
	Unk_808753f                         DT_FLOAT
	Unk_c393e43                         DT_FLOAT
	Unk_5149854                         DT_FLOAT
	Unk_83c9b2a                         DT_FLOAT
	Unk_8e6396a                         DT_FLOAT
	Unk_922b1da                         DT_FLOAT
	Unk_b08e030                         DT_FLOAT
	Unk_26ab22f                         DT_FLOAT
	Unk_55f065                          DT_FLOAT
	Unk_c8a3761                         DT_FLOAT
	Unk_e661bd7                         DT_FLOAT
	Unk_f48f9ad                         DT_VECTOR3D
	Unk_f48f8af                         DT_VECTOR3D
	Unk_7f22f2a                         DT_FLOAT
	Unk_2665f25                         DT_UINT
	Unk_c28b473                         DT_UINT
	Unk_df5ec50                         DT_FLOAT
	Unk_620e28d                         DT_FLOAT
	Unk_f12663d                         DT_FLOAT
	Unk_6bec509                         DT_FLOAT
	Unk_4ae734e                         DT_FLOAT
	Unk_cd9698b                         DT_FLOAT
	Unk_d3bbd69                         DT_FLOAT
	Unk_5822eea                         DT_VECTOR3D
	Unk_725b405                         DT_FLOAT
	Unk_aebfc2b                         DT_FLOAT
	Unk_cbab47a                         DT_FLOAT
	Unk_d958d9                          DT_FLOAT
	Unk_eacf58c                         DT_FLOAT
	Unk_13a3e3b                         DT_FLOAT
	Unk_cb97e5a                         DT_FLOAT
	Unk_8fb07f8                         DT_FLOAT
	FlFinalLevels                       DT_FLOAT
	Unk_c9de46                          DT_FLOAT
	Unk_b3fd1d8                         DT_FLOAT
	Unk_5594707                         DT_FLOAT
	Unk_ba7e426                         DT_FLOAT
	Unk_836453e                         DT_FLOAT
	Unk_4ee8575                         DT_FLOAT
	Unk_14d0aad                         DT_SNO
	Unk_884eb16                         DT_FLOAT
	Unk_9b111e3                         DT_FLOAT
	Unk_25a68ac                         DT_FLOAT
	Unk_b5e6750                         DT_FLOAT
	Unk_ec28624                         DT_FLOAT
	Unk_f070975                         DT_FLOAT
	Unk_db6c589                         DT_FLOAT
	Unk_2dc7eb1                         DT_FLOAT
	Unk_b629779                         DT_FLOAT
	Unk_3f0c40a                         DT_FLOAT
	Unk_e02135                          DT_FLOAT
	Unk_40a2406                         DT_FLOAT
	Unk_bc4473                          DT_FLOAT
	Unk_cb3bd6f                         DT_FLOAT
	Unk_e69e500                         DT_FLOAT
	ArAudioMonsterCategories            DT_VARIABLEARRAY[*AudioMonsterCategory]
	ArTraversalSurfaceOptions           DT_FIXEDARRAY[*TraversalSurfaceOptions]
	Unk_efa9723                         DT_INT
	Unk_2140bd4                         DT_INT
	Unk_9e6e6b5                         DT_INT
	Unk_3d0e848                         DT_INT
	Unk_aa1fd73                         DT_INT
	Unk_88029e3                         DT_INT
	Unk_b56464f                         DT_INT
	Unk_f17e0f7                         DT_INT
	Unk_2900bd9                         DT_UINT
	Unk_4f6a577                         DT_UINT
	Unk_410fa4f                         DT_UINT
	Unk_575837                          DT_FLOAT
	Unk_93531cf                         DT_FLOAT
	Unk_4ae2208                         DT_FLOAT
	PtVOParameters                      DT_VARIABLEARRAY[*WwiseGameParameter]
	Unk_5202085                         DT_FLOAT
	Unk_c322de7                         DT_FLOAT
	Unk_aa0944b                         DT_FLOAT
	TShoreWaveSettings                  ShoreWaveSettings
	Unk_fa3df7c                         DT_FLOAT
	Unk_c9c8405                         Type_9934af2e
	Unk_80c61be                         Type_19c611ca
	Unk_553ab0                          Type_220eeabc
	TVertexCountSettings                VertexCountSettings
	TVertexDensitySettings              VertexDensitySettings
	Unk_32acc50                         Type_2d18fb5c
	TLightInfluenceSettings             LightInfluenceSettings
	ArFoleyMaterialTags                 DT_VARIABLEARRAY[*FoleyMaterialTagInfo]
	ArConditionalAudioStates            DT_VARIABLEARRAY[*ConditionalAudioState]
	Unk_77afde8                         UIMargins
	Unk_6c7ea27                         UIMargins
	Unk_23d823e                         UIMargins
	Unk_e54f346                         UIMargins
	Unk_a412bc0                         DT_FLOAT
	Unk_e0c0343                         DT_FLOAT
	Unk_9dd7abd                         DT_FLOAT
	Unk_66301bd                         DT_FLOAT
	Unk_f0e8c35                         DT_FLOAT
	Unk_9b5adac                         DT_FLOAT
	THdrSettings                        HdrSettings
}

func (t *GlobalAVData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.WdMicrophoneHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.WdMicrophoneXYOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMicrophoneTiltCorrection.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bcf2fa1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDopplerFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAttenuationFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFriendlyAttenuationFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlEnemyAttenuationFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a24f195.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_de216d0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ee2f4d9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aab60e9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5e1713.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4889712.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_14c506c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9109f33.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_97eca79.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9bb9a7b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bff9025.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6667f4c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d4f116d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3d2f7b4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d06da3d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1c5bd37.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c1c8d33.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2d19c28.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_84bd05e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a674d1f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_48115e6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1140ffa.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMultiplayerSmoothing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b7979d6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1dc7c7a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_15e2cbc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSpringMagnitude.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSpringStiffness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOrbitSLerpScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOrbitTransitionExponentialScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOrbitTransitionDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.WvOrbitOffsetCenterForAngleLimiting.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOrbitMaxAngleFromOffsetCenter.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.VConsoleCameraShakeScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlZNear.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+236, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4849eb5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d16853d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+244, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_efc10ac.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_67c3614.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+252, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6236ef1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5d800f3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_75c2a63.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_32ded65.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ba7c108.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ea151f5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_26bea03.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_26bec71.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+284, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4d37f57.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fe87183.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+292, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9773164.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8682ecb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+300, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b5787f8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dacb099.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+308, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1d93a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+312, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25701db.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+316, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dca1d11.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+320, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dd6ca58.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+324, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_14e6af7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+328, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_db836fa.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+332, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ed20455.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+336, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a879fd8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+340, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_614e428.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+344, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTranslucencyScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+348, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ed46ae1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+352, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a3a221d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+356, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4450d33.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+360, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_52fa93a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+364, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f719403.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+368, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_556d46a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+372, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25055f1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+376, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_808753f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+380, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c393e43.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+384, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5149854.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+388, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_83c9b2a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+392, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8e6396a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+396, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_922b1da.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+400, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b08e030.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+404, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_26ab22f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+408, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_55f065.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+412, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c8a3761.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+416, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e661bd7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+420, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f48f9ad.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+432, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f48f8af.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+444, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7f22f2a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+448, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2665f25.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+452, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c28b473.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+456, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_df5ec50.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+460, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_620e28d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+464, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f12663d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+468, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6bec509.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+472, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4ae734e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+476, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cd9698b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+480, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d3bbd69.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+484, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5822eea.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+496, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_725b405.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+500, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aebfc2b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+504, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cbab47a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+508, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d958d9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+512, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eacf58c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+516, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_13a3e3b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+520, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cb97e5a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+524, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8fb07f8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+528, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFinalLevels.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+532, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c9de46.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+536, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b3fd1d8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+540, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5594707.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+544, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ba7e426.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+548, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_836453e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+552, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4ee8575.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+556, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_14d0aad.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 26,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+560, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_884eb16.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+564, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b111e3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+568, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25a68ac.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+572, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b5e6750.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+576, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ec28624.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+580, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f070975.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+584, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_db6c589.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+588, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2dc7eb1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+592, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b629779.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+596, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3f0c40a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+600, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e02135.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+604, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_40a2406.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+608, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bc4473.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+612, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cb3bd6f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+616, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e69e500.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+624, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArAudioMonsterCategories.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+640, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArTraversalSurfaceOptions.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+736, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_efa9723.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+740, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2140bd4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+744, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9e6e6b5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+748, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3d0e848.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+752, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aa1fd73.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+756, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_88029e3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+760, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b56464f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+764, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f17e0f7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+768, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2900bd9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+772, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4f6a577.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+776, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_410fa4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+780, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_575837.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+784, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_93531cf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+788, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4ae2208.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+792, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtVOParameters.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+808, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5202085.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+812, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c322de7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+816, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aa0944b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+820, io.SeekStart); err != nil {
		return err
	}
	if err := t.TShoreWaveSettings.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+852, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fa3df7c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+856, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c9c8405.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+908, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_80c61be.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+916, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_553ab0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+952, io.SeekStart); err != nil {
		return err
	}
	if err := t.TVertexCountSettings.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+960, io.SeekStart); err != nil {
		return err
	}
	if err := t.TVertexDensitySettings.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+964, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_32acc50.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+980, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLightInfluenceSettings.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+984, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArFoleyMaterialTags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1000, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditionalAudioStates.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1016, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77afde8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1032, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6c7ea27.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1048, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_23d823e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1064, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e54f346.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1080, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a412bc0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1084, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e0c0343.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1088, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9dd7abd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1092, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_66301bd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1096, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f0e8c35.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b5adac.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1104, io.SeekStart); err != nil {
		return err
	}
	if err := t.THdrSettings.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1112, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AlphaBlendFactors struct {
	FAlphaBlendEnable DT_INT
	EBlendOp          DT_ENUM
	ESrcBlendFactor   DT_ENUM
	EDestBlendFactor  DT_ENUM
	Unk_102510d       DT_INT
	EBlendOpAlpha     DT_ENUM
	Unk_d05eb97       DT_ENUM
	Unk_4011abf       DT_ENUM
	Unk_9920e8a       DT_INT
	Unk_f1d0b5f       DT_INT
	Unk_a5c387a       DT_INT
	Unk_968db19       DT_INT
}

func (t *AlphaBlendFactors) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FAlphaBlendEnable.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESrcBlendFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDestBlendFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_102510d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendOpAlpha.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d05eb97.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4011abf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9920e8a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f1d0b5f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a5c387a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_968db19.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_cb6637d3 struct {
	THeader   RequiredMessageHeader
	SzNPCName DT_CHARARRAY
}

func (t *Type_cb6637d3) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzNPCName.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NetAttributeKeyValue struct {
	NKeyParam  DT_OPTIONAL[*DT_INT]
	EKeyAttrib DT_ENUM
}

func (t *NetAttributeKeyValue) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NKeyParam.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EKeyAttrib.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_cb807741 struct {
	// Inherits Type_7e418ba8
	// Inherits PolymorphicBase
	DwType       DT_UINT
	Unk_2de4987  DT_UINT
	ArConditions DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	BEnd         DT_INT
	DwPad        DT_UINT
}

func (t *Type_cb807741) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2de4987.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEnd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ZoneProgressEarnedMessage struct {
	THeader         RequiredMessageHeader
	WpPlace         SharedServerWorldPlace
	EZone           DT_ENUM
	NProgressAmount DT_INT
	Unk_40f5b6      DT_INT
	Unk_71c18eb     DT_ENUM
}

func (t *ZoneProgressEarnedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpPlace.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.EZone.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.NProgressAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_40f5b6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_71c18eb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LightDefinition struct {
	DwFlags        DT_UINT
	EMobility      DT_ENUM
	NPriority      DT_INT
	DwMaxInstances DT_UINT
	TInstanceData  LightInstanceData
	Unk_383f1ce    DT_FLOAT
	Unk_b9c2829    DT_FLOAT
}

func (t *LightDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMobility.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPriority.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMaxInstances.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TInstanceData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+920, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_383f1ce.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+924, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b9c2829.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+928, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CheatCampaignStateMessage struct {
	THeader           RequiredMessageHeader
	Unk_4675a7c       DT_INT
	Unk_5f40a5f       DT_INT
	ArCompletedQuests DT_FIXEDARRAY[*DT_SNO]
}

func (t *CheatCampaignStateMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4675a7c.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5f40a5f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCompletedQuests.UnmarshalD4(r, &Options{
		ArrayLength: 128,
		Flags:       9,
		Group:       31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+540, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_cbfdd2ea struct {
	THeader      InterpolationPathHeader
	PtArrayNodes DT_VARIABLEARRAY[*Type_77aada63]
}

func (t *Type_cbfdd2ea) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtArrayNodes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_cc139f31 struct {
	AfFrequency  DT_FIXEDARRAY[*DT_FLOAT]
	AfBend       DT_FIXEDARRAY[*DT_FLOAT]
	AfTurbulence DT_FIXEDARRAY[*DT_FLOAT]
	Unk_2a283cc  DT_FIXEDARRAY[*DT_FLOAT]
	Unk_5c74a81  DT_FLOAT
}

func (t *Type_cc139f31) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.AfFrequency.UnmarshalD4(r, &Options{
		ArrayLength: 20,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.AfBend.UnmarshalD4(r, &Options{
		ArrayLength: 20,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.AfTurbulence.UnmarshalD4(r, &Options{
		ArrayLength: 20,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2a283cc.UnmarshalD4(r, &Options{
		ArrayLength: 20,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+320, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5c74a81.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+324, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnProjectileImpactPowerCallback struct {
	// Inherits PowerCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	BCouldHaveRagdolled   DT_INT
	THitTargetEffect      ProjectileImpactEffect
	THitSceneEffect       ProjectileImpactEffect
	Unk_36b012            ProjectileImpactEffect
}

func (t *OnProjectileImpactPowerCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCouldHaveRagdolled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.THitTargetEffect.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.THitSceneEffect.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_36b012.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_cc354444 struct {
	THeader      InterpolationPathHeader
	PtArrayNodes DT_VARIABLEARRAY[*Type_77e24bbd]
}

func (t *Type_cc354444) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtArrayNodes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SkillRankChangedMessage struct {
	THeader     RequiredMessageHeader
	Unk_dce541c DT_UINT
	SnoPower    DT_SNO
	DwRank      DT_UINT
	BFromTome   DT_INT
}

func (t *SkillRankChangedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwRank.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.BFromTome.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PortalSpecifierMessage struct {
	THeader       RequiredMessageHeader
	Ann           DT_ACD_NETWORK_NAME
	TResolvedDest ResolvedPortalDestination
}

func (t *PortalSpecifierMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TResolvedDest.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptedAchievementEvent_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*ScriptedAchievementEvent]
}

func (t *ScriptedAchievementEvent_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CriteriaDefinition struct {
	UID                DT_UINT
	UNecessaryQuantity DT_INT64
	TStartEvent        CriteriaStartEvent
	TAdvanceEvent      CriteriaEvent
	TFailEvent         CriteriaEvent
	UFlags             DT_UINT
}

func (t *CriteriaDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.UID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.UNecessaryQuantity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TStartEvent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAdvanceEvent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFailEvent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+312, io.SeekStart); err != nil {
		return err
	}
	if err := t.UFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+320, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NPCComponentSetPreloadHelper struct {
	SnoActor        DT_SNO
	SnoComponentSet DT_SNO
	TBaseData       Type_f5c4e3ed
	TSlots          SerialDataInfo
}

func (t *NPCComponentSetPreloadHelper) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoComponentSet.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TBaseData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSlots.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_ccd96a71 struct {
	Unk_a2bea27          DT_SNO
	ArCampaignConditions DT_VARIABLEARRAY[*Type_bf3bc347]
}

func (t *Type_ccd96a71) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a2bea27.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCampaignConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConversationScopeNode struct {
	// Inherits ConversationTreeNode
	// Inherits PolymorphicBase
	DwType       DT_UINT
	DwPad        DT_UINT
	DwNodeID     DT_UINT
	DwNextNodeID DT_UINT
	Unk_3ef8e38  DT_UINT
	PtNextNode   DT_INT64
	DwFlags      DT_UINT
	SzComment    DT_CSTRING[*DT_BYTE]
	ArChildNodes DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	SnoCondition DT_SNO
	Unk_d8bf9e4  DT_INT
}

func (t *ConversationScopeNode) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNodeID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNextNodeID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3ef8e38.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtNextNode.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzComment.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArChildNodes.UnmarshalD4(r, &Options{Flags: 262145}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d8bf9e4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LightInfluenceSettings struct {
	Unk_8854fb0 DT_FLOAT
}

func (t *LightInfluenceSettings) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8854fb0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_cd36f214 struct {
	FlTextInsetX               DT_FLOAT
	FlTextInsetY               DT_FLOAT
	FlTextPaddingL             DT_FLOAT
	FlTextPaddingT             DT_FLOAT
	FlTextPaddingR             DT_FLOAT
	FlTextPaddingB             DT_FLOAT
	HText                      StringLabelHandleEx
	NFontSizeFallback          DT_INT
	Unk_ad7d5ca                DT_INT
	Unk_748233d                DT_INT
	ETextJustify               DT_ENUM
	ETextJustifyVertical       DT_ENUM
	FlTextAdvanceScalar        DT_FLOAT
	FlTextLineSpacingScalar    DT_FLOAT
	BTextAllCaps               DT_INT
	NTextLinesBeforeTruncation DT_INT
	BWordWrap                  DT_INT
	BShrinkToFit               DT_INT
	EResizeToFit               DT_ENUM
	BHyperlinkAware            DT_INT
	BPassword                  DT_INT
	BSelectable                DT_INT
	BUseDropShadow             DT_INT
	Unk_c5637af                DT_INT
	Unk_9e52c15                DT_INT
	Unk_4a9de9d                DT_UINT
}

func (t *Type_cd36f214) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTextInsetX.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTextInsetY.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTextPaddingL.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTextPaddingT.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTextPaddingR.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTextPaddingB.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.HText.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFontSizeFallback.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ad7d5ca.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_748233d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETextJustify.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETextJustifyVertical.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTextAdvanceScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTextLineSpacingScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.BTextAllCaps.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.NTextLinesBeforeTruncation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.BWordWrap.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.BShrinkToFit.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.EResizeToFit.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.BHyperlinkAware.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.BPassword.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.BSelectable.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.BUseDropShadow.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c5637af.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9e52c15.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4a9de9d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SoundDefinition struct {
	DwFlags            DT_UINT
	TSoundPlayHistory  SoundPlayHistory
	Unk_4a3e716        DT_SNO
	SnoSoundBankMedia  DT_SNO
	Unk_fec55de        DT_UINT
	DwWwiseFlags       DT_UINT
	FlMaxRange         DT_FLOAT
	Unk_5757423        DT_VARIABLEARRAY[*AttackerEnemiesParam]
	SnoStopSound       DT_SNO
	FlCooldownDuration DT_FLOAT
	Unk_dc0bc5b        DT_INT
	Unk_7c7f1a2        DT_FLOAT
	FlDopplerFactor    DT_FLOAT
	Unk_f056ee9        DT_FLOAT
	Unk_f056deb        DT_FLOAT
}

func (t *SoundDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSoundPlayHistory.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4a3e716.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 71,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSoundBankMedia.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 71,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fec55de.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwWwiseFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMaxRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5757423.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoStopSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlCooldownDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dc0bc5b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7c7f1a2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDopplerFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f056ee9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f056deb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_cd5b4347 struct {
	ArVertexAO DT_VARIABLEARRAY[*DT_BYTE]
}

func (t *Type_cd5b4347) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArVertexAO.UnmarshalD4(r, &Options{Flags: 2097153}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_cd79b552 struct {
	THeader     RequiredMessageHeader
	DwNodeIndex DT_UINT
}

func (t *Type_cd79b552) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNodeIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamSubzone struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	EParamType DT_ENUM
	DwPad      DT_UINT
	SnoSubzone DT_SNO
}

func (t *ScriptEventParamSubzone) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSubzone.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PhysicsDefinition struct {
	DwFlags             DT_UINT
	NMaxIterations      DT_INT
	FlFriction          DT_FLOAT
	FlRollingResistance DT_FLOAT
	FlRestitution       DT_FLOAT
	FlLinearDamping     DT_FLOAT
	FlAngularDamping    DT_FLOAT
	WCollisionMask      DT_UINT
	FlDragCoeff         DT_FLOAT
	FlAirBuoyancy       DT_FLOAT
	FlAccelerationMax   DT_FLOAT
	FlSpeedMax          DT_FLOAT
	FlGravityMultiplier DT_FLOAT
	TRandomAccelRange   DT_RANGE[*DT_FLOAT]
	Unk_7b327fe         DT_FLOAT
}

func (t *PhysicsDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMaxIterations.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFriction.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRollingResistance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRestitution.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLinearDamping.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAngularDamping.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.WCollisionMask.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDragCoeff.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAirBuoyancy.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAccelerationMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSpeedMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGravityMultiplier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.TRandomAccelRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7b327fe.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CharacterPreset struct {
	// Inherits PolymorphicBase
	DwType    DT_UINT
	DwPad     DT_UINT
	SzName    DT_CSTRING[*DT_BYTE]
	SnoWorld  DT_SNO
	NPadding1 DT_INT
}

func (t *CharacterPreset) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPadding1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AffixMessage struct {
	THeader     RequiredMessageHeader
	Ann         DT_ACD_NETWORK_NAME
	FIdentified DT_INT
	AAffixes    DT_FIXEDARRAY[*DT_SNO]
	Unk_186efea DT_FIXEDARRAY[*Type_82008b02]
	Unk_be0e086 DT_FIXEDARRAY[*DT_SNO]
}

func (t *AffixMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FIdentified.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.AAffixes.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       9,
		Group:       104,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_186efea.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_be0e086.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       9,
		Group:       104,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalWaypointData struct {
	// Inherits GlobalBase
	// Inherits PolymorphicBase
	DwType               DT_UINT
	DwPad                DT_UINT
	ArGlobalMarkerActors DT_VARIABLEARRAY[*GlobalMarkerActor]
}

func (t *GlobalWaypointData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArGlobalMarkerActors.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventOutroEffectGroup struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType        DT_UINT
	DwPad         DT_UINT
	TConditions   TriggerConditions
	FGenerated    DT_INT
	Unk_6cba752   DT_INT
	Unk_e560b0b   DT_UINT
	IdEffectGroup DT_UINT
}

func (t *TriggerEventOutroEffectGroup) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdEffectGroup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerActorGizmoData struct {
	PtDoorGizmoData              DT_VARIABLEARRAY[*MarkerDoorGizmoData]
	PtLockData                   DT_VARIABLEARRAY[*LockingGizmoData]
	PtSwitchBehaviorData         DT_VARIABLEARRAY[*SwitchBehaviorGizmoData]
	PtPOICameraInstanceData      DT_VARIABLEARRAY[*POICameraInstanceData]
	PtTraversalInstanceData      DT_VARIABLEARRAY[*TraversalInstanceData]
	PtBossDoorInstanceData       DT_VARIABLEARRAY[*BossDoorInstanceData]
	PtChestGizmoData             DT_VARIABLEARRAY[*MarkerChestGizmoData]
	PtSpawnerGizmoData           DT_VARIABLEARRAY[*SpawnerGizmoInstanceData]
	PtPortalGizmoData            DT_VARIABLEARRAY[*MarkerPortalGizmoData]
	PtPortalDestGizmoData        DT_VARIABLEARRAY[*MarkerPortalDestGizmoData]
	PtSavePointGizmoData         DT_VARIABLEARRAY[*MarkerSavePointGizmoData]
	PtProxData                   DT_POLYMORPHIC_VARIABLEARRAY[*ProximityDataBase]
	PtTriggerProximityGizmoData  DT_VARIABLEARRAY[*TriggerProximityData]
	PtGizmoConditionData         DT_VARIABLEARRAY[*GizmoConditionData]
	PtMarkerBaseGizmoData        DT_VARIABLEARRAY[*MarkerBaseGizmoData]
	PtDestroyableObjectGizmoData DT_VARIABLEARRAY[*MarkerDestroyableObjectGizmoData]
	PtWaypointGizmoData          DT_VARIABLEARRAY[*MarkerWaypointGizmoData]
	PtHiddenCacheGizmoData       DT_VARIABLEARRAY[*MarkerHiddenCacheGizmoData]
}

func (t *MarkerActorGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtDoorGizmoData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtLockData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtSwitchBehaviorData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPOICameraInstanceData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtTraversalInstanceData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtBossDoorInstanceData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtChestGizmoData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtSpawnerGizmoData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPortalGizmoData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPortalDestGizmoData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtSavePointGizmoData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtProxData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtTriggerProximityGizmoData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtGizmoConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtMarkerBaseGizmoData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtDestroyableObjectGizmoData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtWaypointGizmoData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtHiddenCacheGizmoData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_ce82d1b6 struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
	SnoMusic         DT_SNO
	Unk_e1829be      DT_FLOAT
}

func (t *Type_ce82d1b6) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMusic.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 62,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e1829be.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_cec13164 struct {
	FlTime DT_FLOAT
	VScale DT_VECTOR3D
}

func (t *Type_cec13164) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.VScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ParticleKeyFrames struct {
	PtPositions   DT_VARIABLEARRAY[*Type_e04c1a6]
	PtColors      DT_VARIABLEARRAY[*Type_c9a200b0]
	PtScales      DT_VARIABLEARRAY[*Type_cabcc4f9]
	Unk_72d072a   DT_VARIABLEARRAY[*Type_cec13164]
	PtRotations   DT_VARIABLEARRAY[*Type_e84cd001]
	PtSpins       DT_VARIABLEARRAY[*Type_252cba6b]
	PtDistortions DT_VARIABLEARRAY[*Type_fa8eb4a0]
}

func (t *ParticleKeyFrames) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPositions.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtColors.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtScales.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_72d072a.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtRotations.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtSpins.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtDistortions.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_cec837f6 struct {
	DwID              DT_UINT
	EType             DT_ENUM
	TDimension1       DT_STRING_FORMULA
	TDimension2       DT_STRING_FORMULA
	TDimension3       DT_STRING_FORMULA
	TDimension4       DT_STRING_FORMULA
	TDimension5       DT_STRING_FORMULA
	Unk_6a8ab2        DT_INT
	Unk_5078500       DT_INT
	Unk_128669f       DT_INT
	FAlignmentHeight  DT_FLOAT
	ArConditions      DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	BAnimated         DT_INT
	Unk_3ee89a        DT_INT
	Unk_a4d0200       DT_INT
	Unk_c91bb71       DT_INT
	Unk_e960d46       DT_INT
	Unk_e282419       DT_ENUM
	Unk_7ed70e2       DT_INT
	Unk_77bdba8       DT_ENUM
	Unk_8f61ea4       DT_UINT
	Unk_3e59e14       DT_VECTOR3D
	Unk_6076d47       DT_ENUM
	Unk_8d18eb6       DT_ENUM
	Unk_67060f1       DT_INT
	Unk_3999d6e       DT_STRING_FORMULA
	Unk_3999d6f       DT_STRING_FORMULA
	Unk_3999d70       DT_STRING_FORMULA
	TAnimatedInterval DT_STRING_FORMULA
	Unk_4ac4caa       DT_STRING_FORMULA
	Unk_e5f3235       DT_STRING_FORMULA
	Unk_7fd2cb0       DT_INT
	Unk_bb05455       DT_INT
	BLoop             DT_INT
	Unk_77a6dd9       DT_INT
	Unk_14cfb7f       DT_INT
	Unk_4f22bac       DT_INT
	Unk_ca7a183       DT_INT
	Unk_78bcfac       DT_INT
	ELOSCheck         DT_ENUM
	DwTargetingFlags  DT_UINT
	BDebugDraw        DT_INT
}

func (t *Type_cec837f6) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDimension1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDimension2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDimension3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDimension4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDimension5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6a8ab2.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5078500.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_128669f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.FAlignmentHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.BAnimated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3ee89a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a4d0200.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c91bb71.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e960d46.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+228, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e282419.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7ed70e2.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+236, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77bdba8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8f61ea4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+244, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3e59e14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6076d47.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8d18eb6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_67060f1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3999d6e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3999d6f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+336, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3999d70.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+368, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAnimatedInterval.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+400, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4ac4caa.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+432, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e5f3235.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+464, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7fd2cb0.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+468, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bb05455.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+472, io.SeekStart); err != nil {
		return err
	}
	if err := t.BLoop.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+476, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77a6dd9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+480, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_14cfb7f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+484, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4f22bac.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+488, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ca7a183.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+492, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_78bcfac.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+496, io.SeekStart); err != nil {
		return err
	}
	if err := t.ELOSCheck.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+500, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTargetingFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+504, io.SeekStart); err != nil {
		return err
	}
	if err := t.BDebugDraw.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+512, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PVPGameSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType  DT_UINT
	BNegate DT_INT
	DwPad   DT_UINT
}

func (t *PVPGameSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DungeonSpawningPoolEntry_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*DungeonSpawningPoolEntry]
}

func (t *DungeonSpawningPoolEntry_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AttributeSubcondition struct {
	// Inherits Type_d3c3637f
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType        DT_UINT
	BNegate       DT_INT
	EComparisonOp DT_ENUM
	DwPad         DT_UINT
	EAttribute    DT_ENUM
	FlValue       DT_FLOAT
	NParam        DT_INT
	Unk_c7b2b18   DT_ENUM
}

func (t *AttributeSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAttribute.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.NParam.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c7b2b18.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NpcLookTagEntry struct {
	THeader GBIDHeader
}

func (t *NpcLookTagEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamActorGroup struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType         DT_UINT
	EParamType     DT_ENUM
	DwPad          DT_UINT
	GbidActorGroup DT_GBID
}

func (t *ScriptEventParamActorGroup) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidActorGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 24,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_cfbf8bdc struct {
	// Inherits Type_7e418ba8
	// Inherits PolymorphicBase
	DwType       DT_UINT
	Unk_2de4987  DT_UINT
	ArConditions DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	BEnd         DT_INT
	DwPad        DT_UINT
}

func (t *Type_cfbf8bdc) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2de4987.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEnd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventCameraKeyFrame struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType              DT_UINT
	DwPad               DT_UINT
	TConditions         TriggerConditions
	FGenerated          DT_INT
	Unk_6cba752         DT_INT
	Unk_e560b0b         DT_UINT
	EMicrophoneMode     DT_ENUM
	VecMicrophoneOffset DT_VECTOR3D
	ArKeys              DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	Unk_9717a7e         DT_FLOAT
}

func (t *TriggerEventCameraKeyFrame) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMicrophoneMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecMicrophoneOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArKeys.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9717a7e.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventObjectTurnToOriginalFacing struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
	DwObjectID  DT_UINT
}

func (t *TriggerEventObjectTurnToOriginalFacing) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwObjectID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnyLogicSubcondition struct {
	// Inherits LogicSubcondition
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType       DT_UINT
	BNegate      DT_INT
	DwPad        DT_UINT
	ArConditions DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *AnyLogicSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ShaderMapDefinition struct {
	Unk_b8d46b        DT_SNO
	Unk_71e61d        DT_SNO
	Unk_24ebc07       DT_SNO
	SnoFurBaseShader  DT_SNO
	ArShaderOverrides DT_VARIABLEARRAY[*ShaderOverride]
	Unk_54bea5a       DT_TAGMAP[*DT_ENUM]
}

func (t *ShaderMapDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b8d46b.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_71e61d.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_24ebc07.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFurBaseShader.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArShaderOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54bea5a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AspectDefinition struct {
	SnoAffix DT_SNO
}

func (t *AspectDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAffix.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 104,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DemonScrollReward struct {
	ArItems DT_FIXEDARRAY[*ItemSpecifierData]
}

func (t *DemonScrollReward) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArItems.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SavedWorldCameraState struct {
	SnoWorld     DT_SNO
	TCameraState SavedCameraState
}

func (t *SavedWorldCameraState) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCameraState.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameTestingInvitePlayersToPartyMessage struct {
	THeader     RequiredMessageHeader
	NPlayers    DT_INT
	Unk_52e2a15 DT_FIXEDARRAY[*DT_UINT]
}

func (t *GameTestingInvitePlayersToPartyMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPlayers.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_52e2a15.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventPlayMovie struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
	SnoMovie         DT_SNO
	FIntroMovie      DT_INT
	Unk_295ed9d      DT_INT
	Unk_26e6b7e      DT_INT
}

func (t *TriggerEventPlayMovie) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMovie.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 102,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.FIntroMovie.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_295ed9d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_26e6b7e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HeroStatusDataMessage struct {
	THeader    RequiredMessageHeader
	UHeroId    DT_UINT
	SzHeroName DT_CHARARRAY
	SnoClass   DT_SNO
	NLevel     DT_INT
}

func (t *HeroStatusDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.UHeroId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzHeroName.UnmarshalD4(r, &Options{
		ArrayLength: 12,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoClass.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 74,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EnchantAffixMessage struct {
	THeader          RequiredMessageHeader
	AnnItem          DT_ACD_NETWORK_NAME
	SnoAffixToReroll DT_SNO
}

func (t *EnchantAffixMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnItem.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAffixToReroll.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 104,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventChangeLook struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType        DT_UINT
	DwPad         DT_UINT
	TConditions   TriggerConditions
	FGenerated    DT_INT
	Unk_6cba752   DT_INT
	Unk_e560b0b   DT_UINT
	DwActorID     DT_UINT
	SnoAppearance DT_SNO
	TLookLink     LookLink
	Unk_279aa5a   DT_INT
}

func (t *TriggerEventChangeLook) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwActorID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAppearance.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 9,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLookLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_279aa5a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalStore struct {
	// Inherits GlobalBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	Unk_2fa1bf6           DT_FLOAT
	Unk_5967152           DT_FLOAT
	Unk_2eb3017           DT_FLOAT
	Unk_9ff4d97           DT_FLOAT
	Unk_ec0907f           DT_FLOAT
	Unk_7f36142           DT_FLOAT
	Unk_d7f8478           DT_FLOAT
	Unk_2009ff7           DT_INT
	Unk_aef9c7f           DT_VARIABLEARRAY[*Type_8a12bdb7]
	ArCameraTransitions   DT_FIXEDARRAY[*StoreCameraTransition]
	Unk_d679087           DT_SNO
	Unk_357aca5           DT_CSTRING[*DT_BYTE]
	SnoVendorWorld        DT_SNO
	SzVendorCamera        DT_UINT
	Unk_d7df52d           DT_FIXEDARRAY[*Type_b3f69894]
	Unk_107fe73           DT_ENUM
	Unk_465e395           DT_FIXEDARRAY[*Type_e7ead32b]
	ArStoreDisclaimerData DT_FIXEDARRAY[*StoreDisclaimerData]
	Unk_782b094           DT_FIXEDARRAY[*Type_5887daa1]
	Unk_26a4b93           DT_FIXEDARRAY[*Type_e3bec795]
}

func (t *GlobalStore) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2fa1bf6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5967152.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2eb3017.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9ff4d97.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ec0907f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7f36142.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d7f8478.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2009ff7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aef9c7f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCameraTransitions.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d679087.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_357aca5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoVendorWorld.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+292, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzVendorCamera.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d7df52d.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+320, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_107fe73.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+328, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_465e395.UnmarshalD4(r, &Options{
		ArrayLength: 16,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1480, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArStoreDisclaimerData.UnmarshalD4(r, &Options{
		ArrayLength: 8,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1544, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_782b094.UnmarshalD4(r, &Options{
		ArrayLength: 1,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1584, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_26a4b93.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1744, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type wWiseSoundBankDefinition struct {
	PtContent DT_POLYMORPHIC_VARIABLEARRAY[*WwiseSoundBankContentBase]
}

func (t *wWiseSoundBankDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtContent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ItemSpecifierData struct {
	SnoItemToDrop DT_SNO
	SnoAffixes    DT_FIXEDARRAY[*DT_SNO]
	NNumAffixes   DT_INT
	BAccountBound DT_INT
	Unk_aab1fc1   DT_RANGE[*DT_INT]
}

func (t *ItemSpecifierData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItemToDrop.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAffixes.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
		Group:       104,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NNumAffixes.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.BAccountBound.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aab1fc1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_d17eb146 struct {
	EVariantType       DT_ENUM
	SnoVariantMaterial DT_SNO
}

func (t *Type_d17eb146) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EVariantType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoVariantMaterial.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 57,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameSetupMessage struct {
	THeader          RequiredMessageHeader
	DwFirstHeartbeat DT_UINT
	Unk_35f9686      DT_INT64
	Unk_387b0e       DT_INT
	TTrace           TraceMessage
}

func (t *GameSetupMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFirstHeartbeat.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_35f9686.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_387b0e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTrace.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DungeonStatesEntry struct {
	THeader GBIDHeader
}

func (t *DungeonStatesEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_d25b948e struct {
	// Inherits Type_7e418ba8
	// Inherits PolymorphicBase
	DwType              DT_UINT
	Unk_2de4987         DT_UINT
	ArConditions        DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	BEnd                DT_INT
	DwPad               DT_UINT
	FlDistanceThreshold DT_FLOAT
}

func (t *Type_d25b948e) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2de4987.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEnd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDistanceThreshold.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SimpleMessage struct {
	THeader RequiredMessageHeader
}

func (t *SimpleMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ClanBankWithdrawMessage struct {
	THeader         Type_72bd65f8
	TItemId         Type_f5ac91bb
	ECurrencyType   DT_ENUM
	NCurrencyAmount DT_INT64
}

func (t *ClanBankWithdrawMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TItemId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECurrencyType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCurrencyAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalNightmareDungeonData struct {
	// Inherits GlobalBase
	// Inherits PolymorphicBase
	DwType         DT_UINT
	DwPad          DT_UINT
	ArDungeonLists DT_FIXEDARRAY[*DungeonList]
	Unk_6ccc3cf    DT_VARIABLEARRAY[*Type_7247d2c9]
	Unk_6b198fe    DT_FLOAT
	Unk_2da258     DT_UINT
	Unk_4242026    DT_FIXEDARRAY[*DT_FLOAT]
	Unk_74b00e3    DT_FLOAT
	Unk_aa2399c    DT_FLOAT
	Unk_855d467    DT_FLOAT
	Unk_908474b    DT_RANGE[*DT_UINT]
	Unk_408865c    DT_RANGE[*DT_UINT]
}

func (t *GlobalNightmareDungeonData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArDungeonLists.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6ccc3cf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6b198fe.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2da258.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4242026.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_74b00e3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aa2399c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_855d467.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_908474b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_408865c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type StoryboardTrack struct {
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
}

func (t *StoryboardTrack) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_d2a2c805 struct {
	THeader  RequiredMessageHeader
	AnnActor DT_ACD_NETWORK_NAME
	BEnabled DT_INT
}

func (t *Type_d2a2c805) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnActor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEnabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnAssistTriggeredBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnAssistTriggeredBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SchedulerGlobalUniqueCategory struct {
	THeader GBIDHeader
}

func (t *SchedulerGlobalUniqueCategory) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorCustomizationHelper struct {
	Unk_6c44779 SerialDataInfo
	Unk_550eb8a SerialDataInfo
	TFace       SerialDataInfo
	TMakeup     SerialDataInfo
	TJewelry    SerialDataInfo
	THairStyle  SerialDataInfo
	TFacialHair SerialDataInfo
}

func (t *ActorCustomizationHelper) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6c44779.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_550eb8a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFace.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMakeup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.TJewelry.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.THairStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFacialHair.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RequestBuffCancelMessage struct {
	THeader      RequiredMessageHeader
	SnoPower     DT_SNO
	DwBuffDataID DT_UINT
}

func (t *RequestBuffCancelMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwBuffDataID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CountdownStartedMessage struct {
	THeader     RequiredMessageHeader
	DwTime      DT_UINT
	Unk_dce541c DT_UINT
}

func (t *CountdownStartedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnKillTriggeredBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnKillTriggeredBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EssencePowerTierEntry struct {
	NItemPowerMin DT_INT
}

func (t *EssencePowerTierEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NItemPowerMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ItemDungeonKeyDataMessage struct {
	THeader           RequiredMessageHeader
	Ann               DT_ACD_NETWORK_NAME
	SnoWorld          DT_SNO
	ArDungeonAffixes  DT_FIXEDARRAY[*DT_SNO]
	UKeyedDungeonTier DT_OPTIONAL[*DT_UINT]
}

func (t *ItemDungeonKeyDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArDungeonAffixes.UnmarshalD4(r, &Options{
		ArrayLength: 8,
		Flags:       9,
		Group:       135,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.UKeyedDungeonTier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamTimeInterval struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType            DT_UINT
	EParamType        DT_ENUM
	DwPad             DT_UINT
	EFilterInequality DT_ENUM
	FlTimeInterval    DT_FLOAT
}

func (t *ScriptEventParamTimeInterval) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EFilterInequality.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTimeInterval.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_d3c3637f struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType        DT_UINT
	BNegate       DT_INT
	EComparisonOp DT_ENUM
	DwPad         DT_UINT
}

func (t *Type_d3c3637f) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnInitializeAttackBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnInitializeAttackBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LevelAreaDefinition struct {
	DwFlags                  DT_UINT
	SnoWeather               DT_SNO
	SnoAudioContext          DT_SNO
	SnoObserverOverride      DT_SNO
	SnoCampaignTownCondition DT_SNO
	Unk_27d289f              DT_INT
	RgbaDebugColor           DT_RGBACOLOR
	SnoFogOfWar              DT_SNO
	TPrivateLevelScaling     LevelScalingData
	ArPublicLevelScaling     DT_FIXEDARRAY[*LevelScalingData]
	TServices                SupportedServices
}

func (t *LevelAreaDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWeather.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 47,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAudioContext.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 93,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoObserverOverride.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 26,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCampaignTownCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_27d289f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaDebugColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFogOfWar.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 123,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPrivateLevelScaling.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPublicLevelScaling.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.TServices.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_d4213c9b struct {
	DwType      DT_UINT
	Unk_9b2bc26 Type_80554fed
	Unk_77ed19a DT_ENUM
	DwPad       DT_UINT
}

func (t *Type_d4213c9b) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b2bc26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77ed19a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_d4235100 struct {
	SnoActor   DT_SNO
	Unk_15efd3 SerialDataInfo
}

func (t *Type_d4235100) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_15efd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ACDTranslateProjectileMessage struct {
	THeader                 RequiredMessageHeader
	Ann                     DT_ACD_NETWORK_NAME
	VPos                    DT_VECTOR3D
	QRot                    bcQuat
	VVel                    DT_VECTOR3D
	Unk_a25a877             DT_OPTIONAL[*DT_VECTOR3D]
	UMoveFlags              DT_OPTIONAL[*DT_UINT]
	SnoPowerAnimKeyOverride DT_OPTIONAL[*DT_SNO]
	FlSpeedMult             DT_OPTIONAL[*DT_FLOAT]
}

func (t *ACDTranslateProjectileMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.VPos.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.QRot.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.VVel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a25a877.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.UMoveFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerAnimKeyOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSpeedMult.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerTitleResponseMessage struct {
	THeader      Type_72bd65f8
	Unk_dce541c  DT_UINT
	TPlayerTitle SavedPlayerTitle
}

func (t *PlayerTitleResponseMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPlayerTitle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerOverride struct {
	// Inherits PolymorphicBase
	DwType           DT_UINT
	DwPad            DT_UINT
	SnoInputPower    DT_SNO
	SnoOverridePower DT_SNO
}

func (t *PowerOverride) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoInputPower.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOverridePower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerForceShapeshiftMessage struct {
	THeader         RequiredMessageHeader
	Unk_dce541c     DT_UINT
	EShapeshiftForm DT_ENUM
}

func (t *PlayerForceShapeshiftMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.EShapeshiftForm.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventFadeGroup struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
	Unk_8dea4d9 DT_INT
	NFadeGroup  DT_INT
	EBehavior   DT_ENUM
	Unk_2b48a58 DT_INT
}

func (t *TriggerEventFadeGroup) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8dea4d9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFadeGroup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBehavior.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2b48a58.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HelpCode struct {
	THeader     GBIDHeader
	Unk_d35e7ff DT_GBID
	BSubMenu    DT_INT
	SzCommand   DT_CHARARRAY
}

func (t *HelpCode) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d35e7ff.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 9,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.BSubMenu.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzCommand.UnmarshalD4(r, &Options{
		ArrayLength: 1024,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1292, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayConvLineMessage struct {
	THeader         RequiredMessageHeader
	AnnSpeaker      DT_ACD_NETWORK_NAME
	TParams         PlayLineParams
	EContext        DT_ENUM
	FlTimeToDisplay DT_FLOAT
}

func (t *PlayConvLineMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnSpeaker.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TParams.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.EContext.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTimeToDisplay.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalRoadData struct {
	// Inherits GlobalBase
	// Inherits PolymorphicBase
	DwType              DT_UINT
	DwPad               DT_UINT
	ArGlobalRoadGraphs  DT_VARIABLEARRAY[*GlobalRoadGraph]
	ArGlobalRoadSplines DT_VARIABLEARRAY[*GlobalRoadSpline]
}

func (t *GlobalRoadData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArGlobalRoadGraphs.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArGlobalRoadSplines.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NecroArmyUnitTypeData struct {
	SnoSkillBarPower  DT_SNO
	SnoPetSpawnPower  DT_SNO
	GbidPetType       DT_GBID
	HIconOverride     DT_UINT
	ArSpecializations DT_FIXEDARRAY[*NecroArmyUnitSpecializationData]
}

func (t *NecroArmyUnitTypeData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSkillBarPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPetSpawnPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidPetType.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 23,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIconOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSpecializations.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayHitJitterMessage struct {
	THeader     RequiredMessageHeader
	Ann         DT_ACD_NETWORK_NAME
	Unk_5692531 DT_VECTOR3D
}

func (t *PlayHitJitterMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5692531.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnDoDamageBuffCallback struct {
	// Inherits ProcChanceBuffCallbackBase
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	BAlwaysProcs          DT_INT
	DwPadding             DT_UINT
	TProcChance           DT_STRING_FORMULA
	Unk_b52872c           DT_INT
}

func (t *OnDoDamageBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.BAlwaysProcs.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPadding.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.TProcChance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b52872c.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalEmotes struct {
	// Inherits GlobalBase
	// Inherits PolymorphicBase
	DwType          DT_UINT
	DwPad           DT_UINT
	ArInitialEmotes DT_VARIABLEARRAY[*DT_SNO]
}

func (t *GlobalEmotes) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArInitialEmotes.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 118,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIControlGroupStyle struct {
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
}

func (t *UIControlGroupStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupRotationRollKeyData struct {
	// Inherits EffectGroupKeyData
	// Inherits PolymorphicBase
	DwType     DT_UINT
	DwPad      DT_UINT
	ArKeyItems DT_VARIABLEARRAY[*EffectGroupKey]
}

func (t *EffectGroupRotationRollKeyData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArKeyItems.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HiddenCacheEntry_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*HiddenCacheEntry]
}

func (t *HiddenCacheEntry_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PVPShrineEventParticipatingMessage struct {
	THeader   RequiredMessageHeader
	DwEnd     DT_UINT
	AnnShrine DT_ACD_NETWORK_NAME
}

func (t *PVPShrineEventParticipatingMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwEnd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnShrine.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ValidComponents struct {
	TComponentArray DT_VARIABLEARRAY[*ValidComponent]
}

func (t *ValidComponents) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TComponentArray.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventFootstepTrail struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
	THardpointLink   HardpointLink
}

func (t *TriggerEventFootstepTrail) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WwiseExternalSourceSoundBank struct {
	// Inherits WwiseSoundBankContentBase
	// Inherits PolymorphicBase
	DwType            DT_UINT
	DwPad             DT_UINT
	ArExternalSources DT_VARIABLEARRAY[*WwiseExternalSource]
}

func (t *WwiseExternalSourceSoundBank) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArExternalSources.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerFormulaTableEntry struct {
	SzName  DT_CHARARRAY
	FlValue DT_FIXEDARRAY[*DT_FLOAT]
}

func (t *PowerFormulaTableEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{
		ArrayLength: 1024,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1024, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlValue.UnmarshalD4(r, &Options{
		ArrayLength: 76,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1328, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_d6dab54d struct {
	DwMediaID DT_UINT
	TName     WwiseName
}

func (t *Type_d6dab54d) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMediaID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupCameraTrack struct {
	// Inherits EffectGroupTrack
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
}

func (t *EffectGroupCameraTrack) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WorldTierData struct {
	DwUnlockLevel       DT_UINT
	Unk_db9e2c          DT_INT
	PtPlayerAttributes  DT_VARIABLEARRAY[*AttributeSpecifier]
	TLevelScalingData   LevelScalingData
	Unk_2bca372         DT_INT
	Unk_b1d243f         DT_INT
	Unk_a4f6399         DT_INT
	Unk_458b4ff         DT_FLOAT
	Unk_6bdfabc         DT_FLOAT
	Unk_de899e2         DT_FLOAT
	Unk_4404336         DT_FLOAT
	Unk_f40f193         DT_FLOAT
	Unk_d6bbd39         DT_FLOAT
	Unk_e362b2e         DT_FLOAT
	Unk_49768b          DT_FLOAT
	Unk_bc88631         DT_FLOAT
	Unk_b794376         DT_FLOAT
	Unk_7fd09d3         DT_FLOAT
	Unk_565b579         DT_FLOAT
	Unk_60d111b         DT_FLOAT
	Unk_e743158         DT_FLOAT
	Unk_633e27e         DT_FLOAT
	Unk_e9ded47         DT_BYTE
	PtMonsterAttributes DT_VARIABLEARRAY[*AttributeSpecifier]
	Unk_5a79ac1         DT_FIXEDARRAY[*DT_FLOAT]
	Unk_fffd308         DT_FLOAT
	Unk_a420de9         DT_FIXEDARRAY[*DT_INT]
	Unk_fb475a3         DT_FIXEDARRAY[*DT_INT]
	Unk_2ae7938         DT_FIXEDARRAY[*DT_INT]
	Unk_afbfb6b         DT_FIXEDARRAY[*DT_INT]
	Unk_cf174d8         DT_FLOAT
}

func (t *WorldTierData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwUnlockLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_db9e2c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPlayerAttributes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLevelScalingData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2bca372.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b1d243f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a4f6399.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_458b4ff.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6bdfabc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_de899e2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4404336.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f40f193.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d6bbd39.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e362b2e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49768b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bc88631.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b794376.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7fd09d3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_565b579.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_60d111b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e743158.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_633e27e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e9ded47.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtMonsterAttributes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5a79ac1.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fffd308.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a420de9.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fb475a3.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2ae7938.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_afbfb6b.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cf174d8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventSetTimeOfDay struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
	FlTimeOfDay DT_FLOAT
}

func (t *TriggerEventSetTimeOfDay) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTimeOfDay.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_d774a564 struct {
	// Inherits Type_7e418ba8
	// Inherits PolymorphicBase
	DwType       DT_UINT
	Unk_2de4987  DT_UINT
	ArConditions DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	BEnd         DT_INT
	DwPad        DT_UINT
	FlDistance   DT_FLOAT
}

func (t *Type_d774a564) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2de4987.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEnd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDistance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ParagonNodeMessage struct {
	THeader     RequiredMessageHeader
	DwNodeIndex DT_UINT
	BIsCheat    DT_INT
}

func (t *ParagonNodeMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNodeIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsCheat.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ChatMessage struct {
	THeader     RequiredMessageHeader
	Unk_dce541c DT_UINT
	UsMessage   DT_CHARARRAY
}

func (t *ChatMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.UsMessage.UnmarshalD4(r, &Options{
		ArrayLength: 1024,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1044, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_d7ee8f26 struct {
	SnoMaterialValue DT_SNO
	NBitOffset       DT_INT
	Unk_bbe4258      DT_VARIABLEARRAY[*DT_FLOAT]
	FlDefaultValue   DT_FLOAT
}

func (t *Type_d7ee8f26) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMaterialValue.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 81,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NBitOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bbe4258.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDefaultValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EmblemDefinition struct {
	HSmallIcon DT_UINT
	HLargeIcon DT_UINT
}

func (t *EmblemDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.HSmallIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.HLargeIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerClassDefinition struct {
	SnoActorMale                    DT_SNO
	SnoActorFemale                  DT_SNO
	SnoInventory                    DT_SNO
	FlStartingStrength              DT_FLOAT
	FlStartingIntelligence          DT_FLOAT
	FlStartingWillpower             DT_FLOAT
	FlStartingDexterity             DT_FLOAT
	FlAttributesHitPoints           DT_FLOAT
	Unk_81247b7                     DT_FLOAT
	Unk_9ae1b37                     DT_FLOAT
	Unk_9ae1b42                     DT_FLOAT
	TPrimaryResource                PlayerClassResourceData
	TSecondaryResource              PlayerClassResourceData
	Unk_b34fba9                     DT_FLOAT
	FlAttributesWalkSpeed           DT_FLOAT
	FlAttributesRunSpeed            DT_FLOAT
	FlVelRule                       DT_FLOAT
	Unk_7b1fc5b                     DT_FLOAT
	TFacingData                     ActorFacingData
	FlAttributesCritPercentBase     DT_FLOAT
	FlAttributesOverpowerChanceBase DT_FLOAT
	FlAttributesResistFire          DT_FLOAT
	FlAttributesResistLightning     DT_FLOAT
	FlAttributesResistCold          DT_FLOAT
	FlAttributesResistPoison        DT_FLOAT
	FlAttributesResistShadow        DT_FLOAT
	FlAttributesResistChill         DT_FLOAT
	FlAttributeDodgeChanceBonus     DT_FLOAT
	ArCoreStatBenefit               DT_FIXEDARRAY[*PlayerClassCoreStatBenefitData]
	Unk_39a9625                     DT_GBID
	SnoSkillKit                     DT_SNO
	Unk_456c862                     DT_SNO
	Unk_1d2596f                     DT_SNO
	Unk_f52d089                     DT_FIXEDARRAY[*DT_UINT]
	SnoCombatDismountPower          DT_SNO
	SnoActorResourceGlobe           DT_SNO
	Unk_63df9da                     DT_INT
	TNecroData                      PlayerClassNecroData
	TRogueData                      PlayerClassRogueData
	TSorcererData                   PlayerClassSorcererData
	TDruidData                      PlayerClassDruidData
	TBarbData                       PlayerClassBarbData
	ArItemTiers                     DT_VARIABLEARRAY[*ItemTier]
	ArAvailableParagonBoards        DT_VARIABLEARRAY[*DT_SNO]
	Unk_b3a4391                     Type_da21c503
	Unk_17ee464                     DT_SNO
	Unk_a4bc7c3                     DT_SNO
	Unk_1b99fc4                     DT_UINT
	Unk_eab00df                     DT_SNO
	Unk_8979ddf                     DT_SNO
	Unk_a15f17d                     DT_UINT
	Unk_b81b6f8                     DT_SNO
	Unk_9d88058                     DT_SNO
	Unk_3c51d58                     DT_SNO
	Unk_c88ca1                      DT_SNO
	Unk_85b42dd                     DT_SNO
	Unk_5529fd9                     DT_SNO
	Unk_9da7619                     DT_SNO
	Unk_311f93e                     DT_SNO
	Unk_db15dcc                     DT_UINT
	Unk_480ce4d                     DT_UINT
	Unk_c204c1f                     DT_UINT
	Unk_ac2a184                     DT_UINT
	Unk_f9a8bfb                     DT_UINT
	Unk_c68960d                     DT_UINT
	Unk_f4db603                     DT_UINT
	Unk_f4401b8                     DT_UINT
	Unk_f38a271                     DT_UINT
	Unk_71458eb                     DT_UINT
	Unk_a996ec1                     DT_UINT
	Unk_699692c                     DT_UINT
	Unk_f5348c2                     DT_UINT
	Unk_4996ef8                     DT_UINT
	Unk_1052b5d                     DT_UINT
	Unk_a43c1cd                     DT_UINT
	Unk_448f16c                     DT_UINT
	SnoNamesMale                    DT_SNO
	SnoNamesFemale                  DT_SNO
	Unk_a0254bb                     DT_UINT
}

func (t *PlayerClassDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActorMale.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActorFemale.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoInventory.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlStartingStrength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlStartingIntelligence.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlStartingWillpower.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlStartingDexterity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAttributesHitPoints.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_81247b7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9ae1b37.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9ae1b42.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPrimaryResource.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSecondaryResource.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b34fba9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAttributesWalkSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAttributesRunSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlVelRule.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7b1fc5b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFacingData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAttributesCritPercentBase.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAttributesOverpowerChanceBase.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAttributesResistFire.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAttributesResistLightning.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAttributesResistCold.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAttributesResistPoison.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAttributesResistShadow.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAttributesResistChill.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAttributeDodgeChanceBonus.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCoreStatBenefit.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_39a9625.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 34,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+252, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSkillKit.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 39,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_456c862.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 39,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1d2596f.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f52d089.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCombatDismountPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+292, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActorResourceGlobe.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_63df9da.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.TNecroData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1152, io.SeekStart); err != nil {
		return err
	}
	if err := t.TRogueData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1208, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSorcererData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1240, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDruidData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1280, io.SeekStart); err != nil {
		return err
	}
	if err := t.TBarbData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1312, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArItemTiers.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1328, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArAvailableParagonBoards.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 108,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1344, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b3a4391.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1360, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_17ee464.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1364, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a4bc7c3.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1368, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1b99fc4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1372, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eab00df.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1376, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8979ddf.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1380, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a15f17d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1384, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b81b6f8.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1388, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9d88058.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1392, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3c51d58.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1396, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c88ca1.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1400, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_85b42dd.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1404, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5529fd9.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1408, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9da7619.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1412, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_311f93e.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1416, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_db15dcc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1420, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_480ce4d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1424, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c204c1f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1428, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ac2a184.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1432, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f9a8bfb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1436, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c68960d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1440, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f4db603.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1444, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f4401b8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1448, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f38a271.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1452, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_71458eb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1456, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a996ec1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1460, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_699692c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1464, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f5348c2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1468, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4996ef8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1472, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1052b5d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1476, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a43c1cd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1480, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_448f16c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1484, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoNamesMale.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 42,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1488, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoNamesFemale.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 42,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1492, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a0254bb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1496, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ForcedPrefetchEntry struct {
	SnoName      DT_SNO_NAME
	EVariantType DT_ENUM
}

func (t *ForcedPrefetchEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoName.UnmarshalD4(r, &Options{Flags: 513}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EVariantType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TextureDefinition struct {
	ETexFormat       DT_ENUM
	DwVolumeXSlices  DT_WORD
	DwVolumeYSlices  DT_WORD
	DwWidth          DT_WORD
	DwHeight         DT_WORD
	DwDepth          DT_UINT
	DwFaceCount      DT_BYTE
	DwMipMapLevelMin DT_BYTE
	DwMipMapLevelMax DT_BYTE
	DwImportFlags    DT_UINT
	Unk_d27620       DT_ENUM
	RgbavalAvgColor  DT_RGBACOLORVALUE
	PHotspot         DT_BCVEC2I
	SerTex           DT_VARIABLEARRAY[*SerializeData]
	PtFrame          DT_VARIABLEARRAY[*TexFrame]
	Unk_20823c1      DT_VARIABLEARRAY[*Type_835c1731]
	PtPostprocessed  DT_INT64
}

func (t *TextureDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ETexFormat.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwVolumeXSlices.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+14, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwVolumeYSlices.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwWidth.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+18, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwHeight.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwDepth.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFaceCount.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+25, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMipMapLevelMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+26, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMipMapLevelMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwImportFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d27620.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbavalAvgColor.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.PHotspot.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.SerTex.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtFrame.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_20823c1.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPostprocessed.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GroupTransferReplyMessage struct {
	THeader RequiredMessageHeader
	Accept  DT_INT
}

func (t *GroupTransferReplyMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Accept.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerTownPortalReturnDestMessage struct {
	THeader     RequiredMessageHeader
	Unk_f703a7e Type_c58eb80a
	Unk_dce541c DT_UINT
}

func (t *PlayerTownPortalReturnDestMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f703a7e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIStyleResource struct {
	SzStyleName DT_CSTRING[*DT_BYTE]
	NKey        DT_UINT
	PtStyle     DT_POLYMORPHIC_VARIABLEARRAY[*UIControlStyle]
}

func (t *UIStyleResource) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzStyleName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NKey.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type InventoryRequestSortMessage struct {
	THeader    RequiredMessageHeader
	ESlot      DT_ENUM
	Unk_7d12b0 DT_INT
}

func (t *InventoryRequestSortMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESlot.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7d12b0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HardpointInfo struct {
	DwHash     DT_UINT
	DwHashFlag DT_UINT
}

func (t *HardpointInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwHash.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwHashFlag.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HardpointLink struct {
	TInfo HardpointInfo
}

func (t *HardpointLink) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TInfo.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HardpointName struct {
	SzName DT_CHARARRAY
}

func (t *HardpointName) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalBountyData struct {
	// Inherits GlobalBase
	// Inherits PolymorphicBase
	DwType        DT_UINT
	DwPad         DT_UINT
	ArBountyZones DT_FIXEDARRAY[*BountyZones]
	Unk_297c737   DT_UINT
	Unk_65250c9   DT_UINT
}

func (t *GlobalBountyData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArBountyZones.UnmarshalD4(r, &Options{
		ArrayLength: 8,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_297c737.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_65250c9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type InventoryImages struct {
	HDefaultImage DT_UINT
	HFemaleImage  DT_UINT
}

func (t *InventoryImages) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.HDefaultImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.HFemaleImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_d9322248 struct {
	NNumComboboxItems         DT_INT
	SzComboboxPlaceholderText DT_CSTRING[*DT_BYTE]
	Unk_538a709               DT_CSTRING[*DT_BYTE]
	Unk_e88a211               DT_ENUM
	Unk_18016cb               DT_ENUM
	Unk_cac6d29               DT_RGBACOLOR
	Unk_aeeea38               DT_RGBACOLOR
	Unk_670b4a9               DT_RGBACOLOR
	Unk_3368b                 DT_INT
	ArStaticOptions           DT_VARIABLEARRAY[*StringLabelHandleEx]
}

func (t *Type_d9322248) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NNumComboboxItems.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzComboboxPlaceholderText.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_538a709.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e88a211.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_18016cb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cac6d29.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aeeea38.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_670b4a9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3368b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArStaticOptions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ACDWorldPositionMessage struct {
	THeader             RequiredMessageHeader
	Ann                 DT_ACD_NETWORK_NAME
	TWorldLocationData  WorldLocationMessageData
	TLookOverrides      DT_OPTIONAL[*EnterKnownLookOverrides]
	TShaderMapOverrides DT_OPTIONAL[*EnterKnownShaderMapOverrides]
}

func (t *ACDWorldPositionMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TWorldLocationData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLookOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.TShaderMapOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GeoChunkVertexBuffer struct {
	EVBFormat       DT_ENUM
	DwVertStride    DT_UINT
	PtVertexElems   DT_VARIABLEARRAY[*VertexElem]
	Unk_aea647a     DT_VARIABLEARRAY[*DT_BYTE]
	WEid            DT_INT
	PtChunkVertices DT_VARIABLEARRAY[*DT_BYTE]
	Vbid            DT_INT
	Baid            DT_INT
	Unk_4c43adc     DT_UINT
	FOptional       DT_INT
}

func (t *GeoChunkVertexBuffer) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EVBFormat.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwVertStride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtVertexElems.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aea647a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.WEid.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtChunkVertices.UnmarshalD4(r, &Options{Flags: 4194305}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Vbid.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Baid.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4c43adc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.FOptional.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type FontDefinition struct {
	EHintingMode       DT_ENUM
	EHintingStyle      DT_ENUM
	NSizeAdjustments   DT_FIXEDARRAY[*DT_INT]
	Unk_316a8bf        DT_FLOAT
	FlAdvanceScalar    DT_FLOAT
	FlIconHeightScalar DT_FLOAT
	Unk_d5350c2        DT_SNO
	Unk_d0cc8d7        DT_SNO
	Unk_7def5b8        DT_SNO
	SnoFallbackFont    DT_SNO
	DwTransformFlags   DT_UINT
	Unk_9771bb         DT_FLOAT
	Unk_4ca851         DT_FLOAT
	Unk_820c304        DT_FLOAT
	Unk_b5b5e50        DT_FLOAT
	PtPostData         DT_INT64
	Unk_2cd1580        DT_VARIABLEARRAY[*DT_BYTE]
}

func (t *FontDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EHintingMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.EHintingStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSizeAdjustments.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_316a8bf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAdvanceScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlIconHeightScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d5350c2.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 19,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0cc8d7.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 19,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7def5b8.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 19,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFallbackFont.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 19,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTransformFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9771bb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4ca851.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_820c304.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b5b5e50.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPostData.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2cd1580.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ACDTranslateDetPathSinMessage struct {
	THeader             RequiredMessageHeader
	Ann                 DT_ACD_NETWORK_NAME
	EDPath              DT_ENUM
	TSeed               RandomNumberGenerator
	WvVelocity          DT_VECTOR3D
	AOriginalYaw        DT_FLOAT
	VStartPos           DT_VECTOR3D
	UMoveFlags          DT_UINT
	SnoPowerPassability DT_SNO
	NInt0               DT_INT
	FlVar0              DT_FLOAT
	TSinData            DPathSinData
	FlSpeedMult         DT_FLOAT
}

func (t *ACDTranslateDetPathSinMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDPath.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.WvVelocity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.AOriginalYaw.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.VStartPos.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.UMoveFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerPassability.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.NInt0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlVar0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSinData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSpeedMult.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_d97cf85a struct {
	FlPctHead     DT_FLOAT
	FlPctTorso    DT_FLOAT
	FlPctOffHand  DT_FLOAT
	FlPctMainHand DT_FLOAT
	FlPctHands    DT_FLOAT
	FlPctLegs     DT_FLOAT
	FlPctFeet     DT_FLOAT
	FlPctFinger   DT_FLOAT
	FlPctNeck     DT_FLOAT
}

func (t *Type_d97cf85a) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPctHead.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPctTorso.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPctOffHand.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPctMainHand.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPctHands.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPctLegs.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPctFeet.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPctFinger.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlPctNeck.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MovieDefinition struct {
	SnoAudioTrack     DT_SNO
	SnoSubtitles      DT_SNO
	SnoClosedCaptions DT_SNO
	Unk_19d005e       DT_UINT
	Unk_1426000       DT_FLOAT
}

func (t *MovieDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAudioTrack.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 71,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSubtitles.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 42,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoClosedCaptions.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 42,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_19d005e.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1426000.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DoorGizmoData struct {
	// Inherits NamedGizmoData
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
	TLockData                    LockingGizmoData
	FGizmoPlayerOperable         DT_INT
	FPlayerCanCloseDoor          DT_INT
	DwPrefixValue                DT_INT
	Unk_af999c8                  DT_INT
	FlOpenDuration               DT_FLOAT
	Unk_6561d12                  DT_FLOAT
	Unk_1d7bcd2                  DT_FLOAT
	Unk_e9859fe                  DT_INT
}

func (t *DoorGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.TLockData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoPlayerOperable.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.FPlayerCanCloseDoor.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPrefixValue.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af999c8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOpenDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6561d12.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1d7bcd2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e9859fe.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionDamageIsOverpower struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
}

func (t *PowerConditionDamageIsOverpower) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BuffExclusiveType_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*BuffExclusiveType]
}

func (t *BuffExclusiveType_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_da21c503 struct {
	ArCompleteLooks DT_VARIABLEARRAY[*Type_6ce32aa3]
}

func (t *Type_da21c503) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCompleteLooks.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SubzoneTypeSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BNegate  DT_INT
	DwPad    DT_UINT
	EType    DT_ENUM
	EPvPType DT_ENUM
}

func (t *SubzoneTypeSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPvPType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_da38fe05 struct {
	LocalTransform Type_5f527528
	Stiffness      DT_FLOAT
	Friction       DT_FLOAT
	BoneIndex      DT_WORD
	Padding        DT_FIXEDARRAY[*DT_WORD]
}

func (t *Type_da38fe05) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.LocalTransform.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Stiffness.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Friction.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.BoneIndex.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+42, io.SeekStart); err != nil {
		return err
	}
	if err := t.Padding.UnmarshalD4(r, &Options{ArrayLength: 3}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_da8a2315 struct {
	Unk_6c68319    DT_ENUM
	Unk_d64b2c9    DT_INT
	SnoSummonPower DT_SNO
	TMarkerHandle  MarkerHandle
	EVisibility    DT_ENUM
	Unk_209d19e    DT_INT
}

func (t *Type_da8a2315) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6c68319.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d64b2c9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSummonPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMarkerHandle.UnmarshalD4(r, &Options{Flags: 513}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.EVisibility.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_209d19e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type StringListDefinition struct {
	ArStrings        DT_VARIABLEARRAY[*StringTableEntry]
	PtMapStringTable DT_INT64
}

func (t *StringListDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArStrings.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtMapStringTable.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestTagsEntry struct {
	THeader GBIDHeader
}

func (t *QuestTagsEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerSkillRankSubcondition struct {
	// Inherits Type_d3c3637f
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType        DT_UINT
	BNegate       DT_INT
	EComparisonOp DT_ENUM
	DwPad         DT_UINT
	SnoSkillPower DT_SNO
	NSkillRank    DT_INT
}

func (t *PlayerSkillRankSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSkillPower.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSkillRank.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerPhaseBranch struct {
	// Inherits PowerPhaseBase
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TPhaseName  DT_UINT
	Unk_fcb7313 DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	Unk_d0d932b DT_INT
	Unk_9a8200e DT_INT
}

func (t *PowerPhaseBranch) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPhaseName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fcb7313.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0d932b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a8200e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EnterWorldPlayer struct {
	WpLocation                    DT_VECTOR3D
	Unk_dce541c                   DT_UINT
	TEnterKnownLookOverrides      DT_OPTIONAL[*EnterKnownLookOverrides]
	TEnterKnownShaderMapOverrides DT_OPTIONAL[*EnterKnownShaderMapOverrides]
}

func (t *EnterWorldPlayer) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpLocation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEnterKnownLookOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEnterKnownShaderMapOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MonsterAwarenessInfo struct {
	FlIdleRadius       DT_FLOAT
	FlCombatRadius     DT_FLOAT
	FlWarnOthersRadius DT_FLOAT
	Unk_7d4fa2f        DT_FLOAT
	Unk_4eeb2ba        DT_FLOAT
	Unk_3f45ddd        DT_INT
	Unk_d9ecad5        DT_INT
}

func (t *MonsterAwarenessInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlIdleRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlCombatRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlWarnOthersRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7d4fa2f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4eeb2ba.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3f45ddd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9ecad5.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupActorVariant struct {
	SnoActor DT_SNO
	EVariant DT_ENUM
}

func (t *EffectGroupActorVariant) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EVariant.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_dbcb04f3 struct {
	Unk_ebf6585 DT_VARIABLEARRAY[*DT_FLOAT]
}

func (t *Type_dbcb04f3) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ebf6585.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorServerData struct {
	SnoScript                       DT_SNO
	FCannotBeTargetedByAI           DT_INT
	Unk_195410b                     DT_INT
	FNotConsideredInMarkersetBounds DT_INT
	FInvulnerable                   DT_INT
	FDisableDamage                  DT_INT
	FCannotDie                      DT_INT
	Unk_9ad1b04                     DT_INT
	FlNoSpawnRadius                 DT_FLOAT
}

func (t *ActorServerData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoScript.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 35,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FCannotBeTargetedByAI.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_195410b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FNotConsideredInMarkersetBounds.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FInvulnerable.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableDamage.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FCannotDie.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9ad1b04.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlNoSpawnRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BoneKeysInfo struct {
	PtBoneKeys DT_VARIABLEARRAY[*BoneKeyInfo]
}

func (t *BoneKeysInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtBoneKeys.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MapPingMessage struct {
	THeader     RequiredMessageHeader
	Unk_3eecb71 DT_UINT
	IdSWorld    DT_SHARED_SERVER_DATA_ID
	WpLocation  DT_VECTOR3D
}

func (t *MapPingMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3eecb71.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSWorld.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpLocation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HardpointOffset struct {
	THardpointLink  HardpointLink
	VecOffset       DT_VECTOR3D
	QRotationOffset bcQuat
}

func (t *HardpointOffset) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLink.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.QRotationOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PortToPlayerMessage struct {
	THeader     RequiredMessageHeader
	Unk_393b384 DT_UINT
	Unk_74eafc7 DT_UINT
}

func (t *PortToPlayerMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_393b384.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_74eafc7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupPositionYKeyData struct {
	// Inherits EffectGroupKeyData
	// Inherits PolymorphicBase
	DwType     DT_UINT
	DwPad      DT_UINT
	ArKeyItems DT_VARIABLEARRAY[*EffectGroupKey]
}

func (t *EffectGroupPositionYKeyData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArKeyItems.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_dc960527 struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *Type_dc960527) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type IntensitySubParam struct {
	SzName      DT_UINT
	Unk_465327d Type_cbfdd2ea
}

func (t *IntensitySubParam) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_465327d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ParagonGlyphAffixAttribute struct {
	EAttribute DT_ENUM
	NParam     DT_INT
}

func (t *ParagonGlyphAffixAttribute) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAttribute.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NParam.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventObjectMoveToObject struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType               DT_UINT
	TConditions          TriggerConditions
	FGenerated           DT_INT
	Unk_6cba752          DT_INT
	Unk_e560b0b          DT_UINT
	TDuration            DT_FLOAT
	DwTriggerFlags       DT_UINT
	DwTriggerFlagsEx     DT_UINT
	TCleanup             TriggerCleanup
	Unk_49e9257          DT_INT
	Unk_5490979          DT_INT
	DwPad                DT_UINT
	DwObjectID           DT_UINT
	Unk_17909b9          DT_INT
	THardpointLinkTarget HardpointLink
	DwTargetID           DT_UINT
	EOrientationMode     DT_ENUM
	Unk_daebe18          DT_ENUM
	Unk_6101673          DT_UINT
	Unk_8470ffc          HardpointLink
	Unk_46c8459          DT_UINT
	EBlendEasing         DT_ENUM
	EMoveRate            DT_ENUM
	Unk_3c71266          DT_ENUM
	Unk_c751343          DT_INT
	Unk_23237e1          DT_INT
	Unk_f1b6afc          DT_FLOAT
}

func (t *TriggerEventObjectMoveToObject) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwObjectID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_17909b9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.THardpointLinkTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTargetID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.EOrientationMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_daebe18.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6101673.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8470ffc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_46c8459.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMoveRate.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3c71266.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c751343.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_23237e1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f1b6afc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TraversalSurfaceOptions struct {
	ArSurfaces DT_VARIABLEARRAY[*DT_SNO]
}

func (t *TraversalSurfaceOptions) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSurfaces.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 43,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SNODataMessage struct {
	THeader RequiredMessageHeader
	SnoData DT_SNO
}

func (t *SNODataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SlopeBone struct {
	TBoneName AppBone
	APitchMin DT_FLOAT
	APitchMax DT_FLOAT
}

func (t *SlopeBone) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TBoneName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.APitchMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.APitchMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type KeyedDungeonTierEntry struct {
	NMonsterLevel      DT_INT
	Unk_a089b1c        DT_FLOAT
	Unk_171d567        DT_FLOAT
	FlHPScalar         DT_FLOAT
	FlDamageScalar     DT_FLOAT
	Unk_435a301        DT_INT
	NMajorAffixCount   DT_INT
	Unk_2db9e3b        DT_INT
	Unk_838537c        DT_INT
	Unk_d9508bd        DT_INT
	NResurrectionLimit DT_INT
	NGlyphExperience   DT_INT
	NXPReward          DT_INT
	NGoldReward        DT_INT
}

func (t *KeyedDungeonTierEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMonsterLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a089b1c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_171d567.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHPScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDamageScalar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_435a301.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMajorAffixCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2db9e3b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_838537c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9508bd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.NResurrectionLimit.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.NGlyphExperience.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.NXPReward.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.NGoldReward.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIPieChartStyle struct {
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
}

func (t *UIPieChartStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameErrorData struct {
	EError DT_ENUM
	DwVal  DT_UINT
}

func (t *GameErrorData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EError.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwVal.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PVPObeliskGizmoData struct {
	// Inherits NamedGizmoData
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
	SnoActivationPower           DT_SNO
	Unk_6c381bd                  DT_INT
	SnoPlayerParticipatingEffect DT_FIXEDARRAY[*DT_SNO]
	Unk_1c10eb1                  DT_SNO
	Unk_a4fc05b                  DT_SNO
}

func (t *PVPObeliskGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActivationPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6c381bd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPlayerParticipatingEffect.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
		Group:       14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1c10eb1.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a4fc05b.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScrollbarElementImages struct {
	HStateImages DT_FIXEDARRAY[*DT_UINT]
}

func (t *ScrollbarElementImages) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.HStateImages.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AudioContextDefinition struct {
	SnoMusic     DT_SNO
	SnoAmbient   DT_SNO
	SnoReverb    DT_SNO
	Unk_2d0db3d  DT_INT
	Unk_e197f62  DT_INT
	Unk_d110c10  Type_fa97e5b9
	ArRainSounds DT_VARIABLEARRAY[*Type_b593e3c8]
}

func (t *AudioContextDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMusic.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 62,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAmbient.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 5,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoReverb.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 60,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2d0db3d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e197f62.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d110c10.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArRainSounds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventDescription struct {
	EEventType          DT_ENUM
	SzDescription       DT_INT64
	SzGrammar           DT_INT64
	ArParamTypes        DT_FIXEDARRAY[*DT_ENUM]
	SzParamNames        DT_FIXEDARRAY[*DT_INT64]
	SzFuncParamNames    DT_FIXEDARRAY[*DT_INT64]
	SzParamDescriptions DT_FIXEDARRAY[*DT_INT64]
	Unk_aab17b3         DT_FIXEDARRAY[*DT_ENUM]
	Unk_7ef4b8b         DT_FIXEDARRAY[*DT_ENUM]
	Unk_336d153         DT_FIXEDARRAY[*DT_ENUM]
	Unk_41cdd20         DT_FIXEDARRAY[*DT_ENUM]
	DwFlags             DT_UINT
	Unk_165bc75         DT_INT64
}

func (t *ScriptEventDescription) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EEventType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzDescription.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzGrammar.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArParamTypes.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzParamNames.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzFuncParamNames.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzParamDescriptions.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aab17b3.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7ef4b8b.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_336d153.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_41cdd20.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_165bc75.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ItemSalvageLevel struct {
	SnoSalvageTreasureClassNormal    DT_SNO
	SnoSalvageTreasureClassMagic     DT_SNO
	SnoSalvageTreasureClassRare      DT_SNO
	SnoSalvageTreasureClassLegendary DT_SNO
	SnoSalvageTreasureClassUnique    DT_SNO
	SnoSalvageTreasureClassSetItem   DT_SNO
}

func (t *ItemSalvageLevel) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSalvageTreasureClassNormal.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSalvageTreasureClassMagic.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSalvageTreasureClassRare.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSalvageTreasureClassLegendary.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSalvageTreasureClassUnique.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSalvageTreasureClassSetItem.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalMarkerActorData struct {
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
}

func (t *GlobalMarkerActorData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConditionWrapper struct {
	SnoCondition      DT_SNO
	PtInlineCondition DT_POLYMORPHIC_VARIABLEARRAY[*Subcondition]
}

func (t *ConditionWrapper) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtInlineCondition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RogueSpecializationGlobalData struct {
	SnoSpecPower       DT_SNO
	SnoUnlockQuest     DT_SNO
	NUnlockLevel       DT_INT
	HUnlockDescription DT_UINT
}

func (t *RogueSpecializationGlobalData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSpecPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoUnlockQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NUnlockLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.HUnlockDescription.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WorldSyncedData struct {
	SnoWeatherOverride            DT_SNO
	FlWeatherIntensityOverride    DT_FLOAT
	DwWeatherIntensityOverrideEnd DT_UINT
	ArRevealedPortalInfo          DT_FIXEDARRAY[*WorldRevealedPortalInfo]
	Unk_9b85c0f                   DT_FIXEDARRAY[*DT_SNO]
	ArLevelAreaSNOs               DT_FIXEDARRAY[*DT_SNO]
	SnoMusicOverride              DT_SNO
	Unk_f4f9d6f                   DT_INT
	Unk_55eead1                   DT_FLOAT
}

func (t *WorldSyncedData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWeatherOverride.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 47,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlWeatherIntensityOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwWeatherIntensityOverrideEnd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArRevealedPortalInfo.UnmarshalD4(r, &Options{
		ArrayLength: 32,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1296, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b85c0f.UnmarshalD4(r, &Options{
		ArrayLength: 32,
		Flags:       9,
		Group:       22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1428, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArLevelAreaSNOs.UnmarshalD4(r, &Options{
		ArrayLength: 32,
		Flags:       9,
		Group:       22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1560, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMusicOverride.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 62,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1564, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f4f9d6f.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1568, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_55eead1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1572, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Subcondition struct {
	// Inherits PolymorphicBase
	DwType  DT_UINT
	BNegate DT_INT
	DwPad   DT_UINT
}

func (t *Subcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_df8f2b75 struct {
	Unk_746f6e7 DT_FLOAT
	Unk_c60221b DT_FLOAT
	Unk_1f66e44 DT_INT
	Unk_86e9b87 DT_FLOAT
	Unk_af4aac3 DT_ENUM
	Unk_e0262a4 DT_ENUM
	Unk_29b6a75 DT_ENUM
	Unk_1ccce48 DT_ENUM
	Unk_6fc84d8 DT_ENUM
	Unk_a2f5bc6 DT_ENUM
	Unk_507fb94 DT_ENUM
	Unk_3c55dd8 DT_ENUM
}

func (t *Type_df8f2b75) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_746f6e7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c60221b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1f66e44.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_86e9b87.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af4aac3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e0262a4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_29b6a75.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1ccce48.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6fc84d8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a2f5bc6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_507fb94.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3c55dd8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_dff70e83 struct {
	Unk_bd0bed5 DT_FIXEDARRAY[*DT_SNO]
}

func (t *Type_dff70e83) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bd0bed5.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
		Group:       73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BuffSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType       DT_UINT
	BNegate      DT_INT
	DwPad        DT_UINT
	SnoBuffPower DT_SNO
	SzBuffDataID DT_UINT
	Unk_c7b2b18  DT_ENUM
}

func (t *BuffSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoBuffPower.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzBuffDataID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c7b2b18.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimContactFrame struct {
	NFrameNumber DT_INT
	VLocalOffset DT_VECTOR3D
}

func (t *AnimContactFrame) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFrameNumber.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.VLocalOffset.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EmitterDataBase struct {
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
}

func (t *EmitterDataBase) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ComplexEffectAddMessage struct {
	THeader           RequiredMessageHeader
	IdSComplexEffect  DT_ENUM
	EType             DT_ENUM
	SnoEffectGroup    DT_SNO
	AnnSource         DT_ACD_NETWORK_NAME
	AnnDest           DT_ACD_NETWORK_NAME
	AnnOrigin         DT_ACD_NETWORK_NAME
	DwParam1          DT_UINT
	DwParam2          DT_UINT
	BIgnoreOwnerAlpha DT_UINT
}

func (t *ComplexEffectAddMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSComplexEffect.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnSource.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnDest.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnOrigin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwParam1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwParam2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIgnoreOwnerAlpha.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SummonedActorsPreloadHelper struct {
	SnoActor        DT_SNO
	TSummonedActors SerialDataInfo
}

func (t *SummonedActorsPreloadHelper) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSummonedActors.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_e12242af struct {
	Unk_cea351b DT_INT
}

func (t *Type_e12242af) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cea351b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_e1291b50 struct {
	EDevicePlugin DT_ENUM
	TName         WwiseName
	DwFlags       DT_UINT
}

func (t *Type_e1291b50) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDevicePlugin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupMaterialValueKeyData struct {
	// Inherits EffectGroupKeyData
	// Inherits PolymorphicBase
	DwType            DT_UINT
	DwPad             DT_UINT
	ArKeyItems        DT_VARIABLEARRAY[*EffectGroupKey]
	SnoMaterialValue  DT_SNO
	SnoMaterialFilter DT_SNO
}

func (t *EffectGroupMaterialValueKeyData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArKeyItems.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMaterialValue.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 81,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMaterialFilter.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 57,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionBase struct {
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
}

func (t *PowerConditionBase) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_e1a124f1 struct {
	SzBoneName           DT_UINT
	FlAdditionalRotation DT_FLOAT
}

func (t *Type_e1a124f1) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzBoneName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAdditionalRotation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_e1ac09b4 struct {
	Offset      HardpointOffset
	SnoItemType DT_SNO
}

func (t *Type_e1ac09b4) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Offset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoItemType.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 98,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_e1f41032 struct {
	M_localTransform Type_5f527528
	M_transform1     Type_5f527528
	M_transform2     Type_5f527528
	M_scale          DT_VECTOR4D
	M_invScale       DT_VECTOR4D
	Unk_fe69d65      DT_VECTOR4D
	M_params         DT_VECTOR4D
	M_type           DT_WORD
	M_boneIndex      DT_WORD
	M_padding        DT_FIXEDARRAY[*DT_WORD]
}

func (t *Type_e1f41032) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_localTransform.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_transform1.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_transform2.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_scale.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_invScale.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fe69d65.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_params.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_type.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+162, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_boneIndex.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_padding.UnmarshalD4(r, &Options{ArrayLength: 6}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AttributesChangedBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *AttributesChangedBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerPhaseInitialization struct {
	// Inherits PowerPhaseBase
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TPhaseName  DT_UINT
	Unk_fcb7313 DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	Unk_d0d932b DT_INT
	Unk_9a8200e DT_INT
}

func (t *PowerPhaseInitialization) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPhaseName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fcb7313.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0d932b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a8200e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WallInstanceData struct {
	Unk_e246d5a   DT_VARIABLEARRAY[*Type_e6b22340]
	TCornerPieces WallCornerPieces
	Unk_7b78b21   DT_VARIABLEARRAY[*Type_bc07d3c7]
	Unk_3bd1636   DT_VARIABLEARRAY[*Type_bc07d3c7]
}

func (t *WallInstanceData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e246d5a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCornerPieces.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7b78b21.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3bd1636.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestChainDefinition struct {
	DwNextID                     DT_UINT
	SnoSubzone                   DT_SNO
	Unk_2feafdd                  DT_INT
	Unk_23523de                  DT_INT
	EQuestChainType              DT_ENUM
	Unk_f6ed359                  DT_VARIABLEARRAY[*DT_SNO]
	Unk_97b742f                  DT_VARIABLEARRAY[*DT_SNO]
	SnoCompletionSubzoneOverride DT_SNO
	Unk_8c8a554                  DT_STARTLOC_NAME
	TMarkerHandle                MarkerHandle
	VecMarkerLocation            DT_VECTOR3D
	TFlipLocationMarkerHandle    MarkerHandle
	VecFlipLocation              DT_VECTOR3D
	Unk_d35a97e                  DT_SNO
	Unk_8da547c                  DT_SNO
	Unk_10a039b                  DT_SNO
	Unk_62b3134                  DT_SNO
	ArSteps                      DT_VARIABLEARRAY[*QuestChainStep]
}

func (t *QuestChainDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNextID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSubzone.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2feafdd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_23523de.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EQuestChainType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6ed359.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 96,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_97b742f.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCompletionSubzoneOverride.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8c8a554.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMarkerHandle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecMarkerLocation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFlipLocationMarkerHandle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecFlipLocation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d35a97e.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 123,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8da547c.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_10a039b.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_62b3134.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSteps.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalRoadSegment struct {
	ERoadType      DT_ENUM
	ArWorldPoints  DT_VARIABLEARRAY[*DT_VECTOR3D]
	Unk_c70bbe2    DT_VARIABLEARRAY[*DT_INT]
	Unk_b833e44    DT_VARIABLEARRAY[*DT_INT]
	ArCurveLengths DT_VARIABLEARRAY[*DT_FLOAT]
	FlLength       DT_FLOAT
	FIsLoop        DT_INT
	AabbBounds     AABB
}

func (t *GlobalRoadSegment) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ERoadType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArWorldPoints.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c70bbe2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b833e44.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCurveLengths.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.FIsLoop.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.AabbBounds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimTreeBlendCase struct {
	EParam         DT_ENUM
	NIntLiteral    DT_INT
	FlFloatLiteral DT_FLOAT
}

func (t *AnimTreeBlendCase) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParam.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NIntLiteral.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFloatLiteral.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_e2937db8 struct {
	// Inherits Type_7e418ba8
	// Inherits PolymorphicBase
	DwType       DT_UINT
	Unk_2de4987  DT_UINT
	ArConditions DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	BEnd         DT_INT
	DwPad        DT_UINT
}

func (t *Type_e2937db8) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2de4987.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEnd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SkillTreeNodeConnection struct {
	NIndexNodeA           DT_INT
	NIndexNodeB           DT_INT
	DwSourceId            DT_UINT
	DwDestinationId       DT_UINT
	ArCustomPathPositions DT_VARIABLEARRAY[*DT_VECTOR2D]
}

func (t *SkillTreeNodeConnection) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NIndexNodeA.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NIndexNodeB.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwSourceId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwDestinationId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArCustomPathPositions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SoundPlayHistory struct {
	NLastPlayedPerm  DT_INT
	FlLastPlayedTime DT_FLOAT
	ArPlayedFlags    DT_FIXEDARRAY[*DT_BYTE]
}

func (t *SoundPlayHistory) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLastPlayedPerm.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLastPlayedTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPlayedFlags.UnmarshalD4(r, &Options{
		ArrayLength: 16,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventEnableRagdoll struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType         DT_UINT
	DwPad          DT_UINT
	TConditions    TriggerConditions
	FGenerated     DT_INT
	Unk_6cba752    DT_INT
	Unk_e560b0b    DT_UINT
	TRagdollParams EnableRagdollParams
	DwActorID      DT_UINT
	Unk_279aa5a    DT_INT
}

func (t *TriggerEventEnableRagdoll) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TRagdollParams.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwActorID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_279aa5a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SkillTreeNodePersonalConnection struct {
	NIndexNode DT_INT
}

func (t *SkillTreeNodePersonalConnection) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NIndexNode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorEffectData struct {
	NHardpointIndexForRope          DT_INT
	FDoesntCauseCriticalBloodEffect DT_INT
	FNeverPlayGethitJitter          DT_INT
	Unk_2bf030e                     DT_FIXEDARRAY[*DT_SNO]
	Unk_e36d5f3                     DT_FIXEDARRAY[*DT_SNO]
	ArDOTEffectGroups               DT_FIXEDARRAY[*DT_SNO]
	Unk_4ed2a5b                     DT_FIXEDARRAY[*DT_SNO]
	SnoMonsterRarityEffectGroup     DT_SNO
	SnoShieldBlockEffectGroup       DT_SNO
}

func (t *ActorEffectData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NHardpointIndexForRope.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDoesntCauseCriticalBloodEffect.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FNeverPlayGethitJitter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2bf030e.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       1,
		Group:       14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e36d5f3.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       1,
		Group:       14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArDOTEffectGroups.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       1,
		Group:       14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4ed2a5b.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       1,
		Group:       14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMonsterRarityEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoShieldBlockEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type FloatingNumberMessage struct {
	THeader          RequiredMessageHeader
	AnnTarget        DT_ACD_NETWORK_NAME
	FlDamage         DT_FLOAT
	FlDamageUnscaled DT_FLOAT
	EType            DT_ENUM
	VImpactPos       DT_OPTIONAL[*DT_VECTOR2D]
	Unk_741de7       DT_OPTIONAL[*DT_FLOAT]
}

func (t *FloatingNumberMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDamage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDamageUnscaled.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.VImpactPos.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_741de7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_e3bec795 struct {
	Unk_27ff629     DT_VARIABLEARRAY[*Type_2cf6a209]
	SnoConversation DT_SNO
	DwNodeID        DT_UINT
	SnoSpeaker      DT_SNO
	ESpeakerGender  DT_ENUM
	ESpeakerClass   DT_ENUM
}

func (t *Type_e3bec795) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_27ff629.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoConversation.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 12,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNodeID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSpeaker.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 72,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESpeakerGender.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESpeakerClass.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BlizzconCVarsMessage struct {
	THeader              RequiredMessageHeader
	BMultiplayerEnabled  DT_INT
	BDHunterEnabled      DT_INT
	BBlizzconDropEnabled DT_INT
}

func (t *BlizzconCVarsMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BMultiplayerEnabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BDHunterEnabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.BBlizzconDropEnabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_e3f28f16 struct {
	EDamageType           DT_ENUM
	TDamage               HitpointSpecifier
	Unk_89dc285           DT_INT
	Unk_6331bb5           DT_FLOAT
	Unk_f551941           DT_ENUM
	Unk_dd4b5bf           DT_INT
	Unk_3d768b7           DT_INT
	Unk_b8f2b             DT_ENUM
	Unk_79ce2e1           DT_INT
	TCombatEffectOverride DT_STRING_FORMULA
	Unk_693b6db           DT_INT
	Unk_d50fe6e           DT_INT
}

func (t *Type_e3f28f16) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDamageType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDamage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_89dc285.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6331bb5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f551941.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dd4b5bf.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3d768b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b8f2b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_79ce2e1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCombatEffectOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_693b6db.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d50fe6e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ProximityDataBase struct {
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
}

func (t *ProximityDataBase) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ItemRequirementDefinition struct {
	BAnyWeapon    DT_INT
	BDualWielding DT_INT
	Unk_901b272   DT_INT
	Unk_24a783    DT_INT
	Unk_9f5f4cb   DT_INT
	ArItemLabels  DT_VARIABLEARRAY[*DT_ENUM]
	Unk_853db38   DT_UINT
}

func (t *ItemRequirementDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.BAnyWeapon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.BDualWielding.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_901b272.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_24a783.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9f5f4cb.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArItemLabels.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_853db38.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AIStateDebugSetAllEntryStatesMessage struct {
	THeader  RequiredMessageHeader
	AnnActor DT_ACD_NETWORK_NAME
	BEnabled DT_INT
}

func (t *AIStateDebugSetAllEntryStatesMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnActor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEnabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConstraintParameters struct {
	DwHash                DT_UINT
	DwHashPadding         DT_UINT
	DwFlags               DT_UINT
	EType                 DT_ENUM
	NBone1                DT_INT
	NBone2                DT_INT
	LocalFrame1           PRTransform
	LocalFrame2           PRTransform
	FlRevoluteAngleLow    DT_FLOAT
	FlRevoluteAngleHigh   DT_FLOAT
	FlRagdollConeAngle    DT_FLOAT
	FlRagdollTwistLow     DT_FLOAT
	FlRagdollTwistHigh    DT_FLOAT
	Unk_9d701d6           DT_INT
	FlFriction            DT_FLOAT
	FlCompliance          DT_FLOAT
	FlAngularFrequencyHz  DT_FLOAT
	FlAngularDampingRatio DT_FLOAT
	FlLinearFrequencyHz   DT_FLOAT
	FlLinearDampingRatio  DT_FLOAT
	Unk_66d7e12           DT_INT
	FlDuration            DT_FLOAT
	Unk_cfbfec2           DT_FLOAT
	FlStrengthRange       DT_RANGE[*DT_FLOAT]
	FIgnoreGravity        DT_INT
	QTwistAxis            bcQuat
	SnoParticleSystemSno  DT_SNO
	Unk_5cad7b9           DT_FLOAT
}

func (t *ConstraintParameters) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwHash.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwHashPadding.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NBone1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NBone2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.LocalFrame1.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.LocalFrame2.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRevoluteAngleLow.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRevoluteAngleHigh.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRagdollConeAngle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRagdollTwistLow.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRagdollTwistHigh.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9d701d6.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFriction.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlCompliance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAngularFrequencyHz.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAngularDampingRatio.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLinearFrequencyHz.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLinearDampingRatio.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_66d7e12.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cfbfec2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlStrengthRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.FIgnoreGravity.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.QTwistAxis.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoParticleSystemSno.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 27,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5cad7b9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WorldSyncedDataMessage struct {
	THeader     RequiredMessageHeader
	IdSWorld    DT_SHARED_SERVER_DATA_ID
	TSyncedData WorldSyncedData
}

func (t *WorldSyncedDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSWorld.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSyncedData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1596, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamTrackedReward struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType           DT_UINT
	EParamType       DT_ENUM
	DwPad            DT_UINT
	SnoTrackedReward DT_SNO
}

func (t *ScriptEventParamTrackedReward) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTrackedReward.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 126,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DRLGWorldDebugInfoMessage struct {
	THeader        RequiredMessageHeader
	IdSWorld       DT_SHARED_SERVER_DATA_ID
	TDRLGDebugInfo Type_18173024
}

func (t *DRLGWorldDebugInfoMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSWorld.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDRLGDebugInfo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16456, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WallDefinition struct {
	TInstanceData WallInstanceData
}

func (t *WallDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TInstanceData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BountyIcons struct {
	HIconNormal       DT_UINT
	HIconDisabled     DT_UINT
	HNotificationIcon DT_UINT
}

func (t *BountyIcons) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIconNormal.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIconDisabled.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.HNotificationIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type StringTableEntry struct {
	SzLabel DT_CSTRING[*DT_BYTE]
	SzText  DT_CSTRING[*DT_BYTE]
	HLabel  DT_UINT
}

func (t *StringTableEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLabel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzText.UnmarshalD4(r, &Options{Flags: 1048577}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.HLabel.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerQuestHistoryEntry struct {
	SnoQuest DT_SNO
	NStepUID DT_INT
}

func (t *PlayerQuestHistoryEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NStepUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SpeedTree8RippleGroup struct {
	AfBend                DT_FIXEDARRAY[*DT_FLOAT]
	AfTurbulenceFrequency DT_FIXEDARRAY[*DT_FLOAT]
	AfTurbulence          DT_FIXEDARRAY[*DT_FLOAT]
	Unk_5c74a81           DT_FLOAT
}

func (t *SpeedTree8RippleGroup) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.AfBend.UnmarshalD4(r, &Options{
		ArrayLength: 20,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.AfTurbulenceFrequency.UnmarshalD4(r, &Options{
		ArrayLength: 20,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.AfTurbulence.UnmarshalD4(r, &Options{
		ArrayLength: 20,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5c74a81.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+244, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MailSentResponseMessage struct {
	THeader RequiredMessageHeader
	IdMail  Type_f5ac91bb
	IdErr   DT_INT
}

func (t *MailSentResponseMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdMail.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdErr.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CustomizationData struct {
	SnoFace         DT_SNO
	SnoHairColor    DT_SNO
	SnoHairStyle    DT_SNO
	SnoFacialHair   DT_SNO
	SnoJewelry      DT_SNO
	SnoEyeColor     DT_SNO
	NSkinColorIndex DT_INT
	SnoMakeup       DT_SNO
	SnoMarkingShape DT_SNO
	SnoMarkingColor DT_SNO
}

func (t *CustomizationData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFace.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 140,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoHairColor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 134,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoHairStyle.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 138,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFacialHair.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 139,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoJewelry.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 119,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEyeColor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 131,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSkinColorIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMakeup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 132,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMarkingShape.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 115,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMarkingColor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 133,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_e5e3d6d6 struct {
	X DT_FLOAT
	Y DT_FLOAT
	Z DT_FLOAT
	W DT_FLOAT
}

func (t *Type_e5e3d6d6) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.X.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Y.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Z.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.W.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BountyZones struct {
	EZone        DT_ENUM
	SnoCondition DT_SNO
	ArBounties   DT_VARIABLEARRAY[*BountyData]
}

func (t *BountyZones) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EZone.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArBounties.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SurfaceDefinition struct {
	SnoSplashParticle                DT_SNO
	SnoFootstepEffectLeft            DT_SNO
	SnoFootstepEffectRight           DT_SNO
	SnoMonsterFootstepEffect         DT_SNO
	SnoMonsterFootstepWalkEffect     DT_SNO
	SnoResidualFootstepParticleLeft  DT_SNO
	SnoResidualFootstepParticleRight DT_SNO
	SnoFootstepDragEffect            DT_SNO
	SnoFootstepTrailEffect           DT_SNO
	SnoFootstepLiftEffect            DT_SNO
	SnoOverrideWhenWet               DT_SNO
	Unk_4b222fd                      DT_SNO
	FLiquid                          DT_INT
	FGrass                           DT_INT
}

func (t *SurfaceDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSplashParticle.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFootstepEffectLeft.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFootstepEffectRight.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMonsterFootstepEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMonsterFootstepWalkEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoResidualFootstepParticleLeft.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 27,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoResidualFootstepParticleRight.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 27,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFootstepDragEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFootstepTrailEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFootstepLiftEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOverrideWhenWet.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 43,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4b222fd.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 43,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FLiquid.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGrass.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIActorTagStyle struct {
	// Inherits UIButtonStyle
	// Inherits UITextStyle
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	TFont                     UIControlFont
	Unk_4741819               DT_TAGMAP[*DT_ENUM]
	TIcon                     UIControlIcon
	TClickSounds              Type_98c23c41
	Unk_10f81f0               DT_TAGMAP[*DT_ENUM]
}

func (t *UIActorTagStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFont.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4741819.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.TIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.TClickSounds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_10f81f0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DynamicGameParameter struct {
	TName   WwiseName
	TRadius DT_RANGE[*DT_FLOAT]
	BInvert DT_INT
}

func (t *DynamicGameParameter) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInvert.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SpawnerGizmoInstanceData struct {
	ESpawnTriggerType               DT_ENUM
	PtProxData                      DT_POLYMORPHIC_VARIABLEARRAY[*ProximityDataBase]
	SnoPowerSummoned                DT_SNO
	SnoEffectGroupSummoned          DT_SNO
	SnoSpawnEffectGroup             DT_SNO
	SnoSpawnEffectGroupActorToActor DT_SNO
	ESpawnMonsterRarity             DT_ENUM
	Unk_543b637                     DT_UINT
	SnoTreasureClassOverride        DT_SNO
	ArActorGroups                   DT_VARIABLEARRAY[*DT_GBID]
	ArPrefabScopedActorGroups       DT_VARIABLEARRAY[*DT_GBID]
	Unk_6232e63                     DT_RANGE[*DT_FLOAT]
	TSpawnTimeRange                 DT_RANGE[*DT_FLOAT]
	TSpawnQuantityRange             DT_RANGE[*DT_INT]
	FlSpawnStayOpenTime             DT_FLOAT
	FlDelayBeforeDeath              DT_FLOAT
	FSpawnTimeIsADelay              DT_INT
	NSpawnMaxCount                  DT_INT
	NSpawnMaxGenerated              DT_INT
	SnoSpawnCondition               DT_SNO
	Unk_b123ad6                     DT_INT
	Unk_b694fec                     DT_FLOAT
	FDontPerturb                    DT_INT
	FUseLinkedMarkersForLocation    DT_INT
	Unk_915258d                     DT_INT
	Unk_b043709                     DT_INT
	TOffsetRadius                   DT_RANGE[*DT_INT]
	EFacingType                     DT_ENUM
	FlSpecificFacing                DT_FLOAT
	Unk_c9a925d                     DT_INT
	Unk_3d07f2f                     DT_RANGE[*DT_INT]
	FSpawnedMonstersGiveLoot        DT_INT
	FSpawnedMonstersGiveXP          DT_INT
}

func (t *SpawnerGizmoInstanceData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESpawnTriggerType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtProxData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerSummoned.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEffectGroupSummoned.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSpawnEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSpawnEffectGroupActorToActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESpawnMonsterRarity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_543b637.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTreasureClassOverride.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArActorGroups.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 24,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPrefabScopedActorGroups.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6232e63.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSpawnTimeRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSpawnQuantityRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSpawnStayOpenTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDelayBeforeDeath.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.FSpawnTimeIsADelay.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSpawnMaxCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSpawnMaxGenerated.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSpawnCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b123ad6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b694fec.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDontPerturb.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseLinkedMarkersForLocation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_915258d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b043709.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.TOffsetRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.EFacingType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSpecificFacing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c9a925d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3d07f2f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.FSpawnedMonstersGiveLoot.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.FSpawnedMonstersGiveXP.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AttributeFormulaEntry struct {
	THeader  GBIDHeader
	ArRanges DT_VARIABLEARRAY[*AttributeFormulaRange]
}

func (t *AttributeFormulaEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArRanges.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestChestGizmoData struct {
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
	Unk_ebdd077                  DT_INT
}

func (t *QuestChestGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ebdd077.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CollisionHeightField struct {
	Transform            PRTransform
	FWater               DT_INT
	FLandscape           DT_INT
	Unk_81eccce          Type_18e49fff
	Unk_4e7e318          DT_VARIABLEARRAY[*Type_8aef87e7]
	PtWaterFlowDirection DT_VARIABLEARRAY[*DT_VECTOR2D]
}

func (t *CollisionHeightField) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Transform.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWater.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FLandscape.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_81eccce.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4e7e318.UnmarshalD4(r, &Options{Flags: 2097153}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtWaterFlowDirection.UnmarshalD4(r, &Options{Flags: 2097153}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TexAnimTranslation struct {
	// Inherits TexAnim
	// Inherits PolymorphicBase
	DwType               DT_UINT
	DwPad                DT_UINT
	FlUScale             DT_FLOAT
	FlVScale             DT_FLOAT
	FlUTransInitial      DT_FLOAT
	Unk_803e8a7          DT_RANGE[*DT_FLOAT]
	FlVTransInitial      DT_FLOAT
	Unk_42b1708          DT_RANGE[*DT_FLOAT]
	EPinTranslation      DT_ENUM
	EOrderOperation      DT_ENUM
	Unk_96b1a52          DT_UINT
	Unk_ec7cf93          DT_UINT
	DwAnimFlags          DT_UINT
	Unk_e5b0c7f          DT_RANGE[*DT_FLOAT]
	FXOffset             DT_FLOAT
	FYOffset             DT_FLOAT
	ARotationInitial     DT_FLOAT
	DwRotationRandomSeed DT_UINT
}

func (t *TexAnimTranslation) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlUScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlVScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlUTransInitial.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_803e8a7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlVTransInitial.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_42b1708.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPinTranslation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.EOrderOperation.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_96b1a52.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ec7cf93.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwAnimFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e5b0c7f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.FXOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.FYOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.ARotationInitial.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwRotationRandomSeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_e6b22340 struct {
	ArPieces          DT_VARIABLEARRAY[*WallPiece]
	EPieceSelectMode  DT_ENUM
	Unk_755f012       DT_RANGE[*DT_FLOAT]
	THorizontalOffset DT_RANGE[*DT_FLOAT]
	TScale            DT_RANGE[*DT_FLOAT]
	TYaw              DT_RANGE[*DT_FLOAT]
	Unk_609e23d       DT_INT
	Unk_d8fcfe4       DT_INT
	Unk_435bdfd       DT_INT
	Unk_f2dbd17       DT_INT
	TVerticalOffset   DT_RANGE[*DT_FLOAT]
	Unk_2a8c4b6       DT_FLOAT
}

func (t *Type_e6b22340) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPieces.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPieceSelectMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_755f012.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.THorizontalOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.TScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.TYaw.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_609e23d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d8fcfe4.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_435bdfd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f2dbd17.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.TVerticalOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2a8c4b6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerFolder struct {
	Unk_c5f0201 DT_INT
	NID         DT_INT
	EType       DT_ENUM
	SnoPrefab   DT_SNO
	Unk_5393220 DT_INT
	SzName      DT_CSTRING[*DT_BYTE]
	Unk_c7bd9ba DT_INT
	Unk_5310d2c DT_INT
	FIsSpawned  DT_INT
	Unk_cd2d0c6 DT_INT
	Unk_75f54c9 DT_INT
}

func (t *MarkerFolder) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c5f0201.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPrefab.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 24,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5393220.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c7bd9ba.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5310d2c.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.FIsSpawned.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cd2d0c6.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_75f54c9.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerFormulaTableEntry_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*PowerFormulaTableEntry]
}

func (t *PowerFormulaTableEntry_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DesignerVariable struct {
	THeader         GBIDHeader
	EScope          DT_ENUM
	EType           DT_ENUM
	NDefaultValue   DT_INT
	NDefaultString  DT_UINT
	EGameReset      DT_ENUM
	EPlayerReset    DT_ENUM
	NResetDuration  DT_INT
	NResetInterval  DT_INT
	SnoResetSubzone DT_SNO
	SnoResetQuest   DT_SNO
	ArUsedStrings   DT_VARIABLEARRAY[*DT_UINT]
}

func (t *DesignerVariable) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.EScope.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.NDefaultValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.NDefaultString.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	if err := t.EGameReset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPlayerReset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+284, io.SeekStart); err != nil {
		return err
	}
	if err := t.NResetDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.NResetInterval.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+292, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoResetSubzone.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 80,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoResetQuest.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArUsedStrings.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+320, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AttributeFormulaRange struct {
	NItemPowerRangeStart DT_INT
	TValueRange          DT_RANGE[*DT_FLOAT]
	TFormula             DT_STRING_FORMULA
}

func (t *AttributeFormulaRange) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NItemPowerRangeStart.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TValueRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFormula.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_e730cffb struct {
	Unk_2f97460 DT_RANGE[*DT_INT]
	Unk_90a5a75 DT_FLOAT
	Unk_1ad4878 DT_SNO
	Unk_b0e2c7  DT_RANGE[*DT_INT]
	Unk_49f6f23 DT_INT
}

func (t *Type_e730cffb) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2f97460.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_90a5a75.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1ad4878.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 84,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b0e2c7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49f6f23.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_e741cdb2 struct {
	I1            DT_INT
	I2            DT_INT
	I3            DT_INT
	DwMaterialId  DT_WORD
	DwGameFlags   DT_WORD
	DwIncludeMask DT_WORD
}

func (t *Type_e741cdb2) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.I1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.I2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.I3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMaterialId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+14, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwGameFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwIncludeMask.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionIsActorBerserk struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
	ESubject DT_ENUM
}

func (t *PowerConditionIsActorBerserk) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BoneKeyInfo struct {
	Unk_b3f7acb DT_INT
	Unk_b22ae3c DT_INT
	TTangents   AnimTangent
}

func (t *BoneKeyInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b3f7acb.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b22ae3c.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTangents.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CampaignChain struct {
	DwID          DT_UINT
	SnoQuestChain DT_SNO
}

func (t *CampaignChain) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuestChain.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 96,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameTestingSkillSamplingStartMessage struct {
	THeader     RequiredMessageHeader
	Unk_e99ade5 DT_CHARARRAY
	SzPowerName DT_CHARARRAY
	SnoClass    DT_SNO
}

func (t *GameTestingSkillSamplingStartMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e99ade5.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzPowerName.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoClass.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 74,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnDismountCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnDismountCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventCameraFollowSpline struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType              DT_UINT
	TConditions         TriggerConditions
	FGenerated          DT_INT
	Unk_6cba752         DT_INT
	Unk_e560b0b         DT_UINT
	TDuration           DT_FLOAT
	DwTriggerFlags      DT_UINT
	DwTriggerFlagsEx    DT_UINT
	TCleanup            TriggerCleanup
	Unk_49e9257         DT_INT
	Unk_5490979         DT_INT
	DwPad               DT_UINT
	FlBlendTime         DT_FLOAT
	SzSplineName        DT_UINT
	Unk_30b49c2         DT_ENUM
	Unk_8781d26         DT_UINT
	Unk_9a31592         DT_UINT
	FlFirstPercent      DT_FLOAT
	FlLastPercent       DT_FLOAT
	FlFirstDistance     DT_FLOAT
	FlLastDistance      DT_FLOAT
	Unk_71c05df         DT_INT
	Unk_325b1ab         DT_INT
	EEasing             DT_ENUM
	TEasingWeight       Type_f619930a
	Unk_802b7b          DT_INT
	Unk_e27112b         DT_SNO
	EOrientationMode    DT_ENUM
	TransformOffset     PRTransform
	Unk_daebe18         DT_ENUM
	Unk_6101673         DT_UINT
	Unk_8470ffc         HardpointLink
	Unk_46c8459         DT_UINT
	VecTargetOffset     DT_VECTOR3D
	EMicrophoneMode     DT_ENUM
	VecMicrophoneOffset DT_VECTOR3D
	EEasingType         DT_ENUM
	EBlendEasing        DT_ENUM
	Unk_90448b          DT_ENUM
	Unk_c443c2          DT_FLOAT
	Unk_741563          DT_FLOAT
}

func (t *TriggerEventCameraFollowSpline) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlBlendTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzSplineName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_30b49c2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8781d26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a31592.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFirstPercent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLastPercent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFirstDistance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLastDistance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_71c05df.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_325b1ab.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.EEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEasingWeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_802b7b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e27112b.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 26,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.EOrientationMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.TransformOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+228, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_daebe18.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6101673.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+236, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8470ffc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+244, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_46c8459.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecTargetOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.EMicrophoneMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecMicrophoneOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	if err := t.EEasingType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+284, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_90448b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c443c2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+292, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_741563.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MaterialTexture struct {
	SnoTex      DT_SNO
	PtTexAnim   DT_POLYMORPHIC_VARIABLEARRAY[*TexAnim]
	Unk_908e73d DT_INT
}

func (t *MaterialTexture) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTex.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtTexAnim.UnmarshalD4(r, &Options{Flags: 262145}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_908e73d.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_e7ead32b struct {
	SzBaseCamera DT_UINT
	FlScale      DT_FLOAT
	Unk_adeec18  DT_ENUM
	Unk_c1e1359  DT_FLOAT
	Unk_479eba2  PRTransform
	Unk_fc35c24  DT_FLOAT
	Unk_60a2e66  DT_FLOAT
	ArZoomLevels DT_VARIABLEARRAY[*Type_c5064aa7]
}

func (t *Type_e7ead32b) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzBaseCamera.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_adeec18.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c1e1359.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_479eba2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fc35c24.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_60a2e66.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArZoomLevels.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Animation2DDefinition struct {
	TFrameAnim FrameAnim
	SnoSound   DT_SNO
	PtFrames   DT_VARIABLEARRAY[*Anim2DFrame]
}

func (t *Animation2DDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFrameAnim.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtFrames.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ShaderOverride struct {
	DwShaderMapOverride DT_UINT
	SnoMinDefault       DT_SNO
	Unk_b8d46b          DT_SNO
	SnoMedDefault       DT_SNO
	Unk_71e61d          DT_SNO
	SnoHighDefault      DT_SNO
	Unk_24ebc07         DT_SNO
	SnoHighlight        DT_SNO
	SnoLootOverlay      DT_SNO
	SnoOccluded         DT_SNO
	SnoDepth            DT_SNO
	SnoCookie           DT_SNO
	SnoCookieBaseShader DT_SNO
	SnoUIRActor         DT_SNO
	SnoFaded            DT_SNO
	SnoFur              DT_SNO
	SnoFurBaseShader    DT_SNO
	SnoPowerCenters     DT_SNO
}

func (t *ShaderOverride) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwShaderMapOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMinDefault.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b8d46b.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMedDefault.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_71e61d.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoHighDefault.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_24ebc07.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoHighlight.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLootOverlay.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOccluded.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDepth.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCookie.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCookieBaseShader.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoUIRActor.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFaded.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFur.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFurBaseShader.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerCenters.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_e81e59e2 struct {
	M_aVertices     DT_INT64
	M_aPlanes       DT_INT64
	M_aSubEdges     DT_INT64
	M_aFaceSubEdges DT_INT64
	M_centroid      DT_VECTOR3D
	M_VertexCount   DT_INT
	M_FaceCount     DT_INT
	M_SubEdgeCount  DT_INT
	M_volume        DT_FLOAT
	M_area          DT_FLOAT
}

func (t *Type_e81e59e2) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_aVertices.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_aPlanes.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_aSubEdges.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_aFaceSubEdges.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_centroid.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_VertexCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_FaceCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_SubEdgeCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_volume.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_area.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_e83323fe struct {
	SzEventName DT_CHARARRAY
}

func (t *Type_e83323fe) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzEventName.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnProjectileCreateBuffCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnProjectileCreateBuffCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_e84cd001 struct {
	FlTime DT_FLOAT
	QRot   bcQuat
}

func (t *Type_e84cd001) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.QRot.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupKey struct {
	FlTime      DT_FLOAT
	FlValue     DT_FLOAT
	Unk_5fd7226 DT_VECTOR2D
	Unk_f044887 DT_VECTOR2D
}

func (t *EffectGroupKey) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5fd7226.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f044887.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_e8578394 struct{}

func (t *Type_e8578394) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+1, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestRewardChoicePickedMessage struct {
	THeader     RequiredMessageHeader
	IdQuest     DT_ENUM
	Unk_14e1214 DT_INT
}

func (t *QuestRewardChoicePickedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdQuest.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_14e1214.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIMinimapFoWStyle struct {
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
}

func (t *UIMinimapFoWStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_e87d70c1 struct {
	Unk_1afeee0 DT_GBID
	Unk_2a1fbb4 DT_SNO
}

func (t *Type_e87d70c1) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1afeee0.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 20,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2a1fbb4.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 84,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventSetWeaponSheathedDuration struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
	Unk_279aa5a      DT_INT
	DwActorID        DT_UINT
	BSheathed        DT_INT
}

func (t *TriggerEventSetWeaponSheathedDuration) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_279aa5a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwActorID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.BSheathed.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConversationTypeSounds struct {
	SnoGlobalChatterSound   DT_SNO
	SnoPersonalChatterSound DT_SNO
	SnoLocalChatterSound    DT_SNO
	Unk_2fec1de             DT_SNO
	Unk_c2ef7ca             DT_SNO
	Unk_c5ab5e8             DT_SNO
	Unk_5e34eb9             DT_SNO
	SnoEmoteSound           DT_SNO
}

func (t *ConversationTypeSounds) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoGlobalChatterSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPersonalChatterSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLocalChatterSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2fec1de.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c2ef7ca.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c5ab5e8.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5e34eb9.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoEmoteSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerDataBase struct {
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
}

func (t *MarkerDataBase) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UITreeFolderStyle struct {
	// Inherits UIButtonStyle
	// Inherits UITextStyle
	// Inherits UIWindowStyle
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	TConsoleInput             UIControlConsoleInput
	Unk_b4f614c               DT_TAGMAP[*DT_ENUM]
	TFont                     UIControlFont
	Unk_4741819               DT_TAGMAP[*DT_ENUM]
	TIcon                     UIControlIcon
	TClickSounds              Type_98c23c41
	Unk_10f81f0               DT_TAGMAP[*DT_ENUM]
	Unk_b6fa340               DT_TAGMAP[*DT_ENUM]
}

func (t *UITreeFolderStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConsoleInput.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4f614c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TFont.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4741819.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.TIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.TClickSounds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_10f81f0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b6fa340.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EndOfTickMessage struct {
	THeader      RequiredMessageHeader
	DwTickEnding DT_UINT
	DwTickNext   DT_UINT
}

func (t *EndOfTickMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTickEnding.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTickNext.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CloneBeingDeletedMessage struct {
	THeader  RequiredMessageHeader
	AnnClone DT_ACD_NETWORK_NAME
	AnnNPC   DT_ACD_NETWORK_NAME
}

func (t *CloneBeingDeletedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnClone.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnNPC.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuitGameMessage struct {
	THeader         RequiredMessageHeader
	EReason         DT_ENUM
	DwLastHeartbeat DT_OPTIONAL[*DT_UINT]
}

func (t *QuitGameMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EReason.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwLastHeartbeat.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupActorMovementTrack struct {
	// Inherits EffectGroupTrack
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
}

func (t *EffectGroupActorMovementTrack) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BannerColor struct {
	SzName    DT_UINT
	HLabel    StringLabelHandleEx
	RgbaColor DT_RGBACOLOR
}

func (t *BannerColor) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.HLabel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HairColorDefinition struct {
	NSortOrder           DT_INT
	FUsableByClass       DT_FIXEDARRAY[*DT_INT]
	RgbaColors           DT_FIXEDARRAY[*DT_RGBACOLOR]
	FlHairColorInfluence DT_FLOAT
}

func (t *HairColorDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSortOrder.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUsableByClass.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaColors.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHairColorInfluence.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_e97cce1f struct {
	Unk_9568563    DT_ENUM
	Unk_5c29242    DT_INT
	FlCameraOffset DT_FLOAT
}

func (t *Type_e97cce1f) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9568563.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5c29242.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlCameraOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionHasResource struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType        DT_UINT
	BInverse      DT_INT
	DwPad         DT_UINT
	ESubject      DT_ENUM
	EResourceType DT_ENUM
	FlAmount      DT_FLOAT
}

func (t *PowerConditionHasResource) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.EResourceType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorShaderMapOverrideChangedMessage struct {
	THeader             RequiredMessageHeader
	Ann                 DT_ACD_NETWORK_NAME
	NChange             DT_INT
	DwShaderMapOverride DT_UINT
}

func (t *ActorShaderMapOverrideChangedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NChange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwShaderMapOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_e9ff9a6f struct {
	// Inherits Type_7e418ba8
	// Inherits PolymorphicBase
	DwType       DT_UINT
	Unk_2de4987  DT_UINT
	ArConditions DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	BEnd         DT_INT
	DwPad        DT_UINT
}

func (t *Type_e9ff9a6f) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2de4987.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEnd.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DefaultTextureInfo struct {
	EShaderTex DT_ENUM
	SnoTexture DT_SNO
}

func (t *DefaultTextureInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EShaderTex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTexture.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventObjectFollowSpline struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
	DwObjectID       DT_UINT
	FlBlendTime      DT_FLOAT
	SzSplineName     DT_UINT
	Unk_30b49c2      DT_ENUM
	Unk_8781d26      DT_UINT
	Unk_9a31592      DT_UINT
	FlFirstPercent   DT_FLOAT
	FlLastPercent    DT_FLOAT
	FlFirstDistance  DT_FLOAT
	FlLastDistance   DT_FLOAT
	Unk_71c05df      DT_INT
	Unk_325b1ab      DT_INT
	EEasing          DT_ENUM
	TEasingWeight    Type_f619930a
	EOrientationMode DT_ENUM
	TransformOffset  PRTransform
	Unk_daebe18      DT_ENUM
	Unk_6101673      DT_UINT
	Unk_8470ffc      HardpointLink
	Unk_46c8459      DT_UINT
	EEasingType      DT_ENUM
	EBlendEasing     DT_ENUM
	Unk_90448b       DT_ENUM
	Unk_c443c2       DT_FLOAT
	Unk_741563       DT_FLOAT
}

func (t *TriggerEventObjectFollowSpline) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwObjectID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlBlendTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzSplineName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_30b49c2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8781d26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a31592.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFirstPercent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLastPercent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFirstDistance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLastDistance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_71c05df.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_325b1ab.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.EEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEasingWeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.EOrientationMode.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.TransformOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_daebe18.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+228, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6101673.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8470ffc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_46c8459.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+244, io.SeekStart); err != nil {
		return err
	}
	if err := t.EEasingType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+252, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_90448b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c443c2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_741563.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerHandle struct {
	SnoMarkerSet DT_SNO
	NID          DT_INT
}

func (t *MarkerHandle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMarkerSet.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 24,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ParametricInfo struct {
	SnoBaseLayer       DT_SNO
	ArParametricLayers DT_VARIABLEARRAY[*ParametricLayer]
}

func (t *ParametricInfo) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoBaseLayer.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 57,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArParametricLayers.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RestrictedComponent struct {
	TComponentId      DT_UINT
	PtValidComponents DT_FIXEDARRAY[*ValidComponents]
}

func (t *RestrictedComponent) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TComponentId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtValidComponents.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_eabc2b2b struct {
	TwinOffset DT_BYTE
	Tail       DT_BYTE
	Left       DT_BYTE
	Next       DT_BYTE
}

func (t *Type_eabc2b2b) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TwinOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1, io.SeekStart); err != nil {
		return err
	}
	if err := t.Tail.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2, io.SeekStart); err != nil {
		return err
	}
	if err := t.Left.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3, io.SeekStart); err != nil {
		return err
	}
	if err := t.Next.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DPathSinData struct {
	FlSinIncPerTick            DT_FLOAT
	FlSinIncAccel              DT_FLOAT
	FlLateralMaxDistance       DT_FLOAT
	FlOOLateralDistanceToScale DT_FLOAT
	FlLateralStartDistance     DT_FLOAT
	FlSpeed                    DT_FLOAT
	AnnOwner                   DT_ACD_NETWORK_NAME
}

func (t *DPathSinData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSinIncPerTick.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSinIncAccel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLateralMaxDistance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOOLateralDistanceToScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLateralStartDistance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnOwner.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type QuestSubcondition struct {
	// Inherits QuestSubconditionBase
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType          DT_UINT
	BNegate         DT_INT
	SnoQuest        DT_SNO
	DwPad           DT_UINT
	EState          DT_ENUM
	EStepComparison DT_ENUM
	NStepUID        DT_INT
}

func (t *QuestSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.EState.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.EStepComparison.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.NStepUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SalvageResultsMessage struct {
	THeader             RequiredMessageHeader
	ArNewItems          DT_FIXEDARRAY[*SalvageResultItem]
	ArUnlockedTransmogs DT_FIXEDARRAY[*DT_SNO]
}

func (t *SalvageResultsMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArNewItems.UnmarshalD4(r, &Options{
		ArrayLength: 16,
		Flags:       8,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArUnlockedTransmogs.UnmarshalD4(r, &Options{
		ArrayLength: 64,
		Flags:       9,
		Group:       73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+408, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ServerLogMessage struct {
	THeader   RequiredMessageHeader
	UsMessage DT_CHARARRAY
}

func (t *ServerLogMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.UsMessage.UnmarshalD4(r, &Options{
		ArrayLength: 1024,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1040, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GenericBlobRequestMessage struct {
	THeader   Type_72bd65f8
	UBlobSize DT_WORD
}

func (t *GenericBlobRequestMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.UBlobSize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_eb48e229 struct {
	// Inherits Type_d4213c9b
	DwType      DT_UINT
	Unk_9b2bc26 Type_80554fed
	Unk_77ed19a DT_ENUM
	DwPad       DT_UINT
}

func (t *Type_eb48e229) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b2bc26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77ed19a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_eb8eea32 struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType           DT_UINT
	EParamType       DT_ENUM
	DwPad            DT_UINT
	SnoMonsterFamily DT_SNO
	SzArchetype      DT_UINT
	DwArchetypeHash  DT_UINT
	EOptionalRarity  DT_ENUM
}

func (t *Type_eb8eea32) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMonsterFamily.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 82,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzArchetype.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwArchetypeHash.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.EOptionalRarity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_eb98da06 struct {
	SnoMaterialValue DT_SNO
	FlDefaultValue   DT_FLOAT
}

func (t *Type_eb98da06) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMaterialValue.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 81,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDefaultValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type bcQuat struct {
	X DT_FLOAT
	Y DT_FLOAT
	Z DT_FLOAT
	W DT_FLOAT
}

func (t *bcQuat) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.X.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Y.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Z.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.W.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionIsFortified struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
	ESubject DT_ENUM
}

func (t *PowerConditionIsFortified) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ACDPickupFailedMessage struct {
	THeader         RequiredMessageHeader
	ECurrencyType   DT_ENUM
	Unk_c9b5ba6     DT_INT
	EPickupResponse DT_ENUM
	AnnPickee       DT_ACD_NETWORK_NAME
}

func (t *ACDPickupFailedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECurrencyType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c9b5ba6.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EPickupResponse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnPickee.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DungeonStateSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType      DT_UINT
	BNegate     DT_INT
	DwPad       DT_UINT
	Unk_b23f628 DT_GBID
}

func (t *DungeonStateSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b23f628.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimFacingWindow struct {
	NFrameStart DT_INT
	NFrameEnd   DT_INT
	Unk_f28aa5a DT_FLOAT
	Unk_963cba8 DT_INT
	Unk_65d9350 DT_INT
}

func (t *AnimFacingWindow) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFrameStart.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFrameEnd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f28aa5a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_963cba8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_65d9350.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalDefinition struct {
	DwNextID  DT_UINT
	PtContent DT_POLYMORPHIC_VARIABLEARRAY[*GlobalBase]
}

func (t *GlobalDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNextID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtContent.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EventSubcondition struct {
	// Inherits QuestSubconditionBase
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType          DT_UINT
	BNegate         DT_INT
	SnoQuest        DT_SNO
	DwPad           DT_UINT
	EState          DT_ENUM
	EStepComparison DT_ENUM
	NStepUID        DT_INT
}

func (t *EventSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoQuest.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.EState.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.EStepComparison.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.NStepUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_ec9d1911 struct {
	// Inherits Type_4e43aa7a
	DwType      DT_UINT
	Unk_9b2bc26 Type_80fa280c
	Unk_77ed19a DT_ENUM
	DwPad       DT_UINT
}

func (t *Type_ec9d1911) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b2bc26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77ed19a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GeoChunk struct {
	AabbBounds  AABB
	PtLODs      DT_VARIABLEARRAY[*GeoSet]
	Unk_4137988 DT_VARIABLEARRAY[*GeoChunkVertexBuffer]
	Unk_457dee2 DT_VARIABLEARRAY[*GeoChunkIndexBuffer]
	Unk_8c8b576 DT_VARIABLEARRAY[*DT_FLOAT]
}

func (t *GeoChunk) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.AabbBounds.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtLODs.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4137988.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_457dee2.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8c8b576.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupRotationPitchKeyData struct {
	// Inherits EffectGroupKeyData
	// Inherits PolymorphicBase
	DwType     DT_UINT
	DwPad      DT_UINT
	ArKeyItems DT_VARIABLEARRAY[*EffectGroupKey]
}

func (t *EffectGroupRotationPitchKeyData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArKeyItems.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerBoneTransform struct {
	SzName    DT_UINT
	Transform PRSTransform
}

func (t *MarkerBoneTransform) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Transform.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalHealerEvents struct {
	SnoConversations DT_FIXEDARRAY[*DT_SNO]
}

func (t *GlobalHealerEvents) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoConversations.UnmarshalD4(r, &Options{
		ArrayLength: 1,
		Flags:       1,
		Group:       12,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NPCComponentRestrictionEntry struct {
	PtRestrictedComponents DT_VARIABLEARRAY[*RestrictedComponent]
}

func (t *NPCComponentRestrictionEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtRestrictedComponents.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnShapeshiftCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
	Unk_49ab17c           DT_INT
}

func (t *OnShapeshiftCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49ab17c.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LookVariantMaterialOverride struct {
	SnoBaseMaterial     DT_SNO
	SnoOverrideMaterial DT_SNO
}

func (t *LookVariantMaterialOverride) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoBaseMaterial.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 57,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOverrideMaterial.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 57,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalPortalData struct {
	// Inherits GlobalBase
	// Inherits PolymorphicBase
	DwType             DT_UINT
	DwPad              DT_UINT
	Unk_94ef354        PortalInfo
	Unk_17b3d69        PortalInfo
	Unk_40a7880        PortalInfo
	Unk_5b9ef28        PortalInfo
	Unk_70c33          PortalInfo
	Unk_aab21d0        PortalInfo
	TDefaultPortalInfo PortalInfo
	Unk_5d1c931        DT_FIXEDARRAY[*StaticLoadingImages]
	ArPortalTypes      DT_VARIABLEARRAY[*DynamicPortalInfo]
	DwTownPortalType   DT_UINT
	Unk_f3c5748        DT_UINT
	Unk_2b9b577        DT_UINT
	Unk_706c5c5        DT_UINT
}

func (t *GlobalPortalData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_94ef354.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_17b3d69.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+448, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_40a7880.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+664, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5b9ef28.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+880, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_70c33.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1096, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aab21d0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1312, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDefaultPortalInfo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1528, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5d1c931.UnmarshalD4(r, &Options{
		ArrayLength: 8,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1784, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPortalTypes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1800, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTownPortalType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1804, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f3c5748.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1808, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2b9b577.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1812, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_706c5c5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1816, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type InventoryStackTransferMessage struct {
	THeader     RequiredMessageHeader
	AnnItemSrc  DT_ACD_NETWORK_NAME
	AnnItemDest DT_ACD_NETWORK_NAME
	UAmount     DT_INT64
}

func (t *InventoryStackTransferMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnItemSrc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnItemDest.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.UAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ShakeDefinition struct {
	DwShakeFlags                DT_UINT
	TSystemDuration             DT_FLOAT
	TOutroDuration              DT_FLOAT
	WdMinRange                  DT_FLOAT
	WdMaxRange                  DT_FLOAT
	PathCameraPositionAmplitude VectorPath
	PathCameraPositionFrequency VectorPath
}

func (t *ShakeDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwShakeFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSystemDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TOutroDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.WdMinRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.WdMaxRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathCameraPositionAmplitude.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathCameraPositionFrequency.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerTextLabelData struct {
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType     DT_UINT
	DwPad      DT_UINT
	SzLabel    DT_CHARARRAY
	Unk_590b8b DT_INT
	FHidden    DT_INT
}

func (t *MarkerTextLabelData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLabel.UnmarshalD4(r, &Options{
		ArrayLength: 128,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_590b8b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.FHidden.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_eda64360 struct {
	DwID          DT_UINT
	DwRowIndex    DT_UINT
	DwColumnIndex DT_UINT
	ArQuestChains DT_VARIABLEARRAY[*DT_SNO]
}

func (t *Type_eda64360) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwRowIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwColumnIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArQuestChains.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 96,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BannerTextileTexture struct {
	SzName       DT_UINT
	HLabel       StringLabelHandleEx
	SnoNormal    DT_SNO
	SnoAlbedo    DT_SNO
	SnoRoughness DT_SNO
	HIcon        Type_6b1c5d9c
}

func (t *BannerTextileTexture) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.HLabel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoNormal.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAlbedo.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRoughness.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIcon.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HeadstoneGizmoData struct {
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
	EClassRestriction            DT_ENUM
}

func (t *HeadstoneGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.EClassRestriction.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PrefabData struct {
	DwFlags                 DT_UINT
	Unk_32bf9c6             DT_ENUM
	EFadeMethod             DT_ENUM
	NFadeGroup              DT_INT
	Unk_d094b9a             DT_ENUM
	ECullingLevel           DT_ENUM
	SzLookOverride          DT_UINT
	DwShaderMapOverride     DT_UINT
	SnoTraversalSurface     DT_SNO
	PtRunTimeMaterialValues DT_VARIABLEARRAY[*RunTimeMaterialValues]
}

func (t *PrefabData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_32bf9c6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.EFadeMethod.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFadeGroup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d094b9a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECullingLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzLookOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwShaderMapOverride.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTraversalSurface.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 43,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtRunTimeMaterialValues.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MaterialEnumValue struct {
	Value DT_UINT
}

func (t *MaterialEnumValue) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Value.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_edf178eb struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *Type_edf178eb) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_ee444ea1 struct {
	THeader  RequiredMessageHeader
	DwID     DT_UINT
	TSNOName DT_SNO_NAME
}

func (t *Type_ee444ea1) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSNOName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_ee5a7d4a struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType         DT_UINT
	BInverse       DT_INT
	DwPad          DT_UINT
	SzVariableName DT_UINT
	FlValue        DT_FLOAT
}

func (t *Type_ee5a7d4a) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzVariableName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SkillTagStruct struct {
	GbidSkillTag DT_GBID
	BSearchOnly  DT_INT
}

func (t *SkillTagStruct) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidSkillTag.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 56,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.BSearchOnly.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_eec814dc struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
}

func (t *Type_eec814dc) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_ef0eb7cf struct {
	PtVertices  DT_VARIABLEARRAY[*Type_e5e3d6d6]
	PtTriangles DT_VARIABLEARRAY[*Type_e741cdb2]
}

func (t *Type_ef0eb7cf) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtVertices.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtTriangles.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ExplosionDefinition struct {
	DwFlags               DT_UINT
	EType                 DT_ENUM
	WvDirection           DT_VECTOR3D
	Unk_d03716d           Type_cbfdd2ea
	PathRadius            Type_cbfdd2ea
	THorizontalAngleRange DT_RANGE[*DT_FLOAT]
	TVerticalAngleRange   DT_RANGE[*DT_FLOAT]
	FlCutoffRadius        DT_FLOAT
	AHorizontalAngle      DT_FLOAT
	AVerticalAngle        DT_FLOAT
	FlDuration            DT_FLOAT
	FlChance              DT_FLOAT
	FlFrequency           DT_FLOAT
	WpOffsetMin           DT_VECTOR3D
	WpOffsetMax           DT_VECTOR3D
	Unk_c5b3851           DT_FLOAT
}

func (t *ExplosionDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.EType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.WvDirection.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d03716d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.THorizontalAngleRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.TVerticalAngleRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlCutoffRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.AHorizontalAngle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.AVerticalAngle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlChance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFrequency.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpOffsetMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpOffsetMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c5b3851.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_ef480d59 struct {
	THeader     RequiredMessageHeader
	SampleIndex DT_INT
}

func (t *Type_ef480d59) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SampleIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerLevelAreaVolumeData struct {
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType       DT_UINT
	DwPad        DT_UINT
	Unk_97fcdff  DT_ENUM
	SnoLevelArea DT_SNO
}

func (t *MarkerLevelAreaVolumeData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_97fcdff.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelArea.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type VectorFieldDefinition struct {
	NDimX     DT_INT
	NDimY     DT_INT
	NDimZ     DT_INT
	FlMagMin  DT_FLOAT
	FlMagMax  DT_FLOAT
	Aabb      AABB
	PtSamples DT_VARIABLEARRAY[*DT_VECTOR3D]
}

func (t *VectorFieldDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NDimX.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.NDimY.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NDimZ.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMagMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMagMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Aabb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtSamples.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_f013302b struct {
	Unk_51d08f2             UIControlHandle
	Unk_a97a767             DT_SNO
	Unk_9a8825c             DT_FLOAT
	Unk_a17abed             DT_INT
	Unk_e5c42a5             DT_INT
	Unk_3e85a0f             DT_RGBACOLOR
	Unk_6b07c49             UIEffect
	SzClickPredicate        DT_CSTRING[*DT_BYTE]
	SzMiddleMax             DT_CSTRING[*DT_BYTE]
	Unk_520cc33             DT_CSTRING[*DT_BYTE]
	Unk_60529d7             DT_CSTRING[*DT_BYTE]
	SzOnGainedFocus         DT_CSTRING[*DT_BYTE]
	SzOnLostFocus           DT_CSTRING[*DT_BYTE]
	SzOnHitRegionEnter      DT_CSTRING[*DT_BYTE]
	SzOnHitRegionExit       DT_CSTRING[*DT_BYTE]
	EHotkey                 DT_ENUM
	EHotkeyAlternate        DT_ENUM
	NButtonPressHorizontal  DT_INT
	NButtonPressVertical    DT_INT
	SnoRightClickSound      DT_SNO
	SnoMiddleClickSound     DT_SNO
	Unk_b63d29b             Type_6b1c5d9c
	Unk_d75128c             Type_6b1c5d9c
	Unk_daefcaa             Type_6b1c5d9c
	Unk_1844a00             DT_SNO
	Unk_c43c17c             DT_SNO
	Unk_219d52d             DT_SNO
	Unk_ccba90f             DT_SNO
	RgbaForegroundHighlight DT_RGBACOLOR
	Unk_62ef7cf             DT_RGBACOLOR
	RgbaForegroundPushed    DT_RGBACOLOR
	Unk_9e1e600             DT_RGBACOLOR
	Unk_860d478             DT_RGBACOLOR
	Unk_2895fd8             DT_RGBACOLOR
	Unk_3368b               DT_INT
}

func (t *Type_f013302b) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_51d08f2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a97a767.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9a8825c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a17abed.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e5c42a5.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3e85a0f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6b07c49.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzClickPredicate.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzMiddleMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_520cc33.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_60529d7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnGainedFocus.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnLostFocus.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnHitRegionEnter.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnHitRegionExit.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.EHotkey.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.EHotkeyAlternate.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.NButtonPressHorizontal.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.NButtonPressVertical.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRightClickSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMiddleClickSound.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b63d29b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+228, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d75128c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_daefcaa.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+236, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1844a00.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 103,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c43c17c.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 103,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+244, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_219d52d.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 103,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ccba90f.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 103,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+252, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaForegroundHighlight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_62ef7cf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaForegroundPushed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9e1e600.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_860d478.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2895fd8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3368b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupPositionXKeyData struct {
	// Inherits EffectGroupKeyData
	// Inherits PolymorphicBase
	DwType     DT_UINT
	DwPad      DT_UINT
	ArKeyItems DT_VARIABLEARRAY[*EffectGroupKey]
}

func (t *EffectGroupPositionXKeyData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArKeyItems.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AttachActorToActorMessage struct {
	THeader               RequiredMessageHeader
	AnnMain               DT_ACD_NETWORK_NAME
	AnnAttachment         DT_ACD_NETWORK_NAME
	DwHardPointMain       DT_UINT
	DwHardPointAttachment DT_UINT
	QRot                  DT_OPTIONAL[*bcQuat]
	Unk_9afdd21           DT_OPTIONAL[*DT_INT]
}

func (t *AttachActorToActorMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnMain.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnAttachment.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwHardPointMain.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwHardPointAttachment.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.QRot.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9afdd21.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorBrainData struct {
	EDefaultBrain         DT_ENUM
	EBehaviorType         DT_ENUM
	FlRadiusTriggerRadius DT_FLOAT
	Unk_95830e2           DT_RANGE[*DT_FLOAT]
	FRadiusTriggerOneShot DT_INT
	Unk_595c677           Type_3ecfe93c
	SnoRetreatOverride    DT_SNO
}

func (t *ActorBrainData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDefaultBrain.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBehaviorType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRadiusTriggerRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_95830e2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FRadiusTriggerOneShot.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_595c677.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRetreatOverride.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SavePointPortalGizmoData struct {
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
	DwEntranceName               DT_STARTLOC_NAME
	Unk_d2a1272                  DT_INT
}

func (t *SavePointPortalGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwEntranceName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d2a1272.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectItem struct {
	DwWeight            DT_UINT
	SnoSurfaces         DT_VARIABLEARRAY[*DT_SNO]
	ArWeaponItemTypes   DT_VARIABLEARRAY[*DT_SNO]
	ArMonsterArchetypes DT_VARIABLEARRAY[*DT_UINT]
	ArActorVariantTypes DT_VARIABLEARRAY[*DT_ENUM]
	ArTopology          DT_VARIABLEARRAY[*DT_ENUM]
	Unk_43e7b5a         DT_VARIABLEARRAY[*DT_ENUM]
	DwHash              DT_UINT
	TMsgTriggeredEvents MsgTriggeredEvent
}

func (t *EffectItem) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwWeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSurfaces.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 43,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArWeaponItemTypes.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 98,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArMonsterArchetypes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArActorVariantTypes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArTopology.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_43e7b5a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwHash.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMsgTriggeredEvents.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AppearanceMaterial struct {
	DwMaterialHash   DT_UINT
	FPersonaMaterial DT_INT
	DwPersona        DT_BYTE
	PtSOAs           DT_VARIABLEARRAY[*SubObjectAppearance]
}

func (t *AppearanceMaterial) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMaterialHash.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FPersonaMaterial.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPersona.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtSOAs.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamPrefabScopedActorGroup struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType      DT_UINT
	EParamType  DT_ENUM
	DwPad       DT_UINT
	Unk_5b5276a DT_GBID
}

func (t *ScriptEventParamPrefabScopedActorGroup) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5b5276a.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_f0f63f3d struct {
	Unk_c6ab696 DT_UINT
}

func (t *Type_f0f63f3d) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c6ab696.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HiddenCacheEntry struct {
	THeader          GBIDHeader
	SnoTrackedReward DT_SNO
}

func (t *HiddenCacheEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTrackedReward.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 126,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ScriptEventParamLinkedMarkerInGroup struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType      DT_UINT
	EParamType  DT_ENUM
	DwPad       DT_UINT
	DwGroupHash DT_UINT
	IdValue     DT_INT
	SzGroup     DT_CSTRING[*DT_BYTE]
}

func (t *ScriptEventParamLinkedMarkerInGroup) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwGroupHash.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdValue.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzGroup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_f1ddf15d struct {
	THeader RequiredMessageHeader
	TTrace  TraceMessage
}

func (t *Type_f1ddf15d) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTrace.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GameSyncedDebugDataMessage struct {
	THeader     RequiredMessageHeader
	Unk_b6d083b Type_7e0a5501
}

func (t *GameSyncedDebugDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b6d083b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+416, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_f1fed2b7 struct {
	Q DT_VECTOR4D
	P DT_VECTOR4D
	S DT_VECTOR4D
}

func (t *Type_f1fed2b7) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Q.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.P.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.S.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LookAtBone struct {
	Unk_e1f84a7  HardpointLink
	AYawMin      DT_FLOAT
	AYawMax      DT_FLOAT
	Unk_5559079  DT_RANGE[*DT_FLOAT]
	APitchMin    DT_FLOAT
	APitchMax    DT_FLOAT
	Unk_5d19a0   DT_RANGE[*DT_FLOAT]
	APitchOffset DT_FLOAT
	ASpeed       DT_FLOAT
	BYawOnly     DT_INT
	Unk_e560406  DT_INT
	FlDelay      DT_FLOAT
}

func (t *LookAtBone) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e1f84a7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.AYawMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.AYawMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5559079.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.APitchMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.APitchMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5d19a0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.APitchOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.ASpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.BYawOnly.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560406.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDelay.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LookAtData struct {
	FlRange     DT_FLOAT
	Unk_5115351 DT_FLOAT
	ArBones     DT_VARIABLEARRAY[*LookAtBone]
	TSlopeBone  SlopeBone
	Unk_8470ffc HardpointLink
}

func (t *LookAtData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5115351.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArBones.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSlopeBone.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8470ffc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NecroArmySpecMessage struct {
	THeader         RequiredMessageHeader
	EUnitType       DT_ENUM
	ESpecialization DT_ENUM
}

func (t *NecroArmySpecMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EUnitType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESpecialization.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnRetreatCallback struct {
	// Inherits BuffCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	ArConditions          DT_POLYMORPHIC_VARIABLEARRAY[*DT_INT64]
}

func (t *OnRetreatCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalCharacterPresets struct {
	// Inherits GlobalBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	ArHeroes DT_VARIABLEARRAY[*HeroPreset]
	ArMounts DT_VARIABLEARRAY[*MountPreset]
	ArNPCs   DT_VARIABLEARRAY[*NPCPreset]
}

func (t *GlobalCharacterPresets) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArHeroes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArMounts.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArNPCs.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type StopConvLineMessage struct {
	THeader        RequiredMessageHeader
	NConvLineGUID  DT_INT
	FStoppedByUser DT_INT
}

func (t *StopConvLineMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.NConvLineGUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FStoppedByUser.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_f2e060ba struct {
	Unk_bafabd7             Type_6b1c5d9c
	Unk_7760c7f             Type_6b1c5d9c
	Unk_75b4c82             Type_6b1c5d9c
	SnoTiledStyleMouseOver  DT_SNO
	SnoTiledStyleSelected   DT_SNO
	SnoTiledStyleUnselected DT_SNO
}

func (t *Type_f2e060ba) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bafabd7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7760c7f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_75b4c82.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTiledStyleMouseOver.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 103,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTiledStyleSelected.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 103,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTiledStyleUnselected.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 103,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ActorDeathData struct {
	ArDeathEffectGroups DT_FIXEDARRAY[*DT_SNO]
	SnoPowerDeath       DT_SNO
	Unk_6f9a204         DT_INT
}

func (t *ActorDeathData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArDeathEffectGroups.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       1,
		Group:       14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerDeath.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6f9a204.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionParagonNodeIsPurchased struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType         DT_UINT
	BInverse       DT_INT
	DwPad          DT_UINT
	ESubject       DT_ENUM
	SnoParagonNode DT_SNO
}

func (t *PowerConditionParagonNodeIsPurchased) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoParagonNode.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 106,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventPlayConversationLine struct {
	// Inherits TriggerEventRangedDuration
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType               DT_UINT
	TConditions          TriggerConditions
	FGenerated           DT_INT
	Unk_6cba752          DT_INT
	Unk_e560b0b          DT_UINT
	TDuration            DT_FLOAT
	DwTriggerFlags       DT_UINT
	DwTriggerFlagsEx     DT_UINT
	TCleanup             TriggerCleanup
	Unk_49e9257          DT_INT
	Unk_5490979          DT_INT
	DwPad                DT_UINT
	DwConversationNodeID DT_UINT
	DwActorID            DT_UINT
	Unk_acdb8a3          DT_INT
	Unk_e8a81a5          DT_UINT
}

func (t *TriggerEventPlayConversationLine) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwConversationNodeID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwActorID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_acdb8a3.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e8a81a5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ACDTranslateDetPathMessage struct {
	THeader             RequiredMessageHeader
	Ann                 DT_ACD_NETWORK_NAME
	EDPath              DT_ENUM
	TSeed               RandomNumberGenerator
	WvVelocity          DT_VECTOR3D
	AOriginalYaw        DT_FLOAT
	VStartPos           DT_VECTOR3D
	VTargetPos          DT_VECTOR3D
	UMoveFlags          DT_UINT
	SnoPowerPassability DT_SNO
	NInt0               DT_INT
	FlVar0              DT_FLOAT
	FlVar1              DT_FLOAT
	FlVar2              DT_FLOAT
	FlVar3              DT_FLOAT
	FlVar4              DT_FLOAT
	FlSpeedMult         DT_FLOAT
}

func (t *ACDTranslateDetPathMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EDPath.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.WvVelocity.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.AOriginalYaw.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.VStartPos.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.VTargetPos.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.UMoveFlags.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerPassability.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.NInt0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlVar0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlVar1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlVar2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlVar3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlVar4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSpeedMult.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EndConversationMessage struct {
	THeader         RequiredMessageHeader
	SnoConversation DT_SNO
	Unk_1dc956e     DT_UINT
}

func (t *EndConversationMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoConversation.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 12,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1dc956e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_f3f5a120 struct {
	SzOnKey     DT_CSTRING[*DT_BYTE]
	Unk_147ed31 DT_INT
}

func (t *Type_f3f5a120) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzOnKey.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_147ed31.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerSetDefinition struct {
	TMarkerSet                 DT_VARIABLEARRAY[*Marker]
	DwMarkerSetFlags           DT_UINT
	NLabel                     DT_GBID
	SnoCampaignEnableCondition DT_SNO
	ArPrefabDataInfo           DT_VARIABLEARRAY[*PrefabDataInfo]
	PtPrefabDataMap            DT_INT64
	PtChunks                   DT_VARIABLEARRAY[*MarkerInstanceChunk]
	Unk_a3613db                DT_VARIABLEARRAY[*Type_9e555889]
	Unk_6458d11                DT_VARIABLEARRAY[*Type_6ee9427a]
	Unk_2bbd1d                 Type_c8d78ce7
	ArVertexAO                 DT_VARIABLEARRAY[*DT_BYTE]
	Unk_2f217b0                DT_INT
	Unk_d0a9662                DT_INT64
}

func (t *MarkerSetDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMarkerSet.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMarkerSetFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLabel.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 4,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCampaignEnableCondition.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPrefabDataInfo.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPrefabDataMap.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtChunks.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a3613db.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6458d11.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2bbd1d.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArVertexAO.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2f217b0.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0a9662.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_f4703db9 struct {
	TMarker Marker
}

func (t *Type_f4703db9) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMarker.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupMaterialTrack struct {
	// Inherits EffectGroupStandardTrack
	// Inherits EffectGroupTrack
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
}

func (t *EffectGroupMaterialTrack) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerWarpedMessage struct {
	THeader     RequiredMessageHeader
	Unk_e012d2b DT_INT
	EWarpReason DT_ENUM
}

func (t *PlayerWarpedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e012d2b.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.EWarpReason.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TryConsoleCommand struct {
	THeader      RequiredMessageHeader
	Unk_dce541c  DT_UINT
	Unk_243faa3  DT_OPTIONAL[*DT_UINT]
	UsMessage    DT_CHARARRAY
	TPlaceTarget SharedServerWorldPlace
	AnnTarget    DT_ACD_NETWORK_NAME
	DwFlags      DT_UINT
}

func (t *TryConsoleCommand) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_243faa3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.UsMessage.UnmarshalD4(r, &Options{
		ArrayLength: 1024,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1052, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPlaceTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1072, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1080, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1084, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_f49e9532 struct {
	BEnabled    DT_INT
	Unk_f14ffed DT_VECTOR3D
	Unk_4899292 Type_cbfdd2ea
	Unk_169823a Type_cbfdd2ea
	Unk_f052750 DT_FLOAT
	Unk_beb976c Type_cbfdd2ea
	Unk_99175b8 Type_cbfdd2ea
	Unk_b854fe5 Type_cbfdd2ea
	Unk_d14bc79 DT_FLOAT
	Unk_f852d87 DT_FLOAT
	Unk_86d2585 DT_FLOAT
	Unk_331d48f DT_VECTOR2D
	Unk_67b3c4a DT_FLOAT
	Unk_1ecb588 DT_FLOAT
	Unk_211837d DT_VECTOR2D
	Unk_95e2b10 Type_cbfdd2ea
	Unk_b9a067e Type_cbfdd2ea
	Unk_2f13301 Type_cbfdd2ea
	Unk_caea994 DT_FLOAT
	Unk_e4f6034 DT_FLOAT
	Unk_924ac95 Type_cbfdd2ea
	Unk_de5453f DT_VECTOR3D
	Unk_ab0e39e Type_cbfdd2ea
	Unk_b75acc5 DT_FLOAT
	Unk_fd448cd DT_FLOAT
	Unk_35d43ee DT_FLOAT
	Unk_6b9f105 DT_INT
	Unk_ddba751 DT_VECTOR3D
	Unk_48b7873 DT_FLOAT
	Unk_b74898b DT_SNO
	Unk_3ce7419 DT_SNO
}

func (t *Type_f49e9532) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEnabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f14ffed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4899292.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_169823a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f052750.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_beb976c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_99175b8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b854fe5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d14bc79.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+308, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f852d87.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+312, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_86d2585.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+316, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_331d48f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+324, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_67b3c4a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+328, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1ecb588.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+332, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_211837d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+344, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_95e2b10.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+400, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b9a067e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+456, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2f13301.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+512, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_caea994.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+516, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e4f6034.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+520, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_924ac95.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+576, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_de5453f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+592, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab0e39e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+648, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b75acc5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+652, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd448cd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+656, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_35d43ee.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+660, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6b9f105.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+664, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ddba751.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+676, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_48b7873.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+680, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b74898b.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+684, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3ce7419.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+688, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalQuestData struct {
	// Inherits GlobalBase
	// Inherits PolymorphicBase
	DwType           DT_UINT
	DwPad            DT_UINT
	Unk_23c11ba      DT_INT64
	Unk_8bd826d      DT_INT64
	Unk_d9bddf0      DT_INT64
	Unk_70db485      DT_INT64
	Unk_daeff02      DT_INT64
	Unk_de43c60      DT_INT64
	Unk_8726862      DT_INT64
	Unk_4b26f7       DT_INT64
	Unk_c6d58a9      DT_UINT
	Unk_e318094      DT_UINT
	Unk_a49964c      DT_UINT
	SnoStartingQuest DT_SNO
	TCampaignData    CampaignData
	Unk_36bc0dc      DT_VARIABLEARRAY[*DT_SNO]
	Unk_b419a05      DT_VARIABLEARRAY[*DT_SNO]
	Unk_a70acb6      DT_VARIABLEARRAY[*DT_SNO]
	Unk_68fb226      DT_UINT
	Unk_3286df3      ConnectorProperties
	Unk_dd4bd56      ConnectorProperties
	Unk_195043d      DT_UINT
}

func (t *GlobalQuestData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_23c11ba.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8bd826d.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9bddf0.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_70db485.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_daeff02.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_de43c60.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8726862.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4b26f7.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c6d58a9.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e318094.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a49964c.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoStartingQuest.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCampaignData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_36bc0dc.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b419a05.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a70acb6.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 123,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_68fb226.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3286df3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dd4bd56.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_195043d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BreakableContainerGizmoData struct {
	// Inherits NamedGizmoData
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
	SnoTreasureClass             DT_SNO
	SnoDeathPower                DT_SNO
	SnoPostDeathPower            DT_SNO
	Unk_6f5394d                  DT_FLOAT
	Unk_c0f7c                    DT_INT
	Unk_4d93264                  DT_ENUM
}

func (t *BreakableContainerGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTreasureClass.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 52,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDeathPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPostDeathPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6f5394d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c0f7c.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4d93264.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventOutroObject struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
	DwID        DT_UINT
}

func (t *TriggerEventOutroObject) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PRSTransform struct {
	Q      bcQuat
	Wp     DT_VECTOR3D
	VScale DT_VECTOR3D
}

func (t *PRSTransform) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Q.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.VScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnFirstHitPowerCallback struct {
	// Inherits PowerCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	BCouldHaveRagdolled   DT_INT
}

func (t *OnFirstHitPowerCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCouldHaveRagdolled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type HairStyleDefinition struct {
	FUsableByClass DT_FIXEDARRAY[*DT_INT]
	Unk_305622d    DT_UINT
}

func (t *HairStyleDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUsableByClass.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_305622d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GroupRegionEntry struct {
	THeader GBIDHeader
}

func (t *GroupRegionEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnEquipPowerCallback struct {
	// Inherits PowerCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	BCouldHaveRagdolled   DT_INT
}

func (t *OnEquipPowerCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCouldHaveRagdolled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_f58f01c3 struct {
	SnoMaterialValue DT_SNO
	VDefaultValue    DT_VECTOR4D
}

func (t *Type_f58f01c3) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMaterialValue.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 81,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.VDefaultValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ResolvedPortalDestination struct {
	SnoWorld         DT_SNO
	UEntranceGUID    DT_STARTLOC_NAME
	SnoDestLevelArea DT_SNO
}

func (t *ResolvedPortalDestination) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.UEntranceGUID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDestLevelArea.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SubObject struct {
	DwFlags                        DT_UINT
	Unk_334eb2d                    DT_INT
	PtClothData                    DT_VARIABLEARRAY[*ClothData]
	Unk_26f39c1                    DT_VARIABLEARRAY[*Type_72081710]
	DwBAOffset                     DT_UINT
	Unk_87b4c64                    DT_UINT
	Unk_d28c748                    DT_UINT
	DwBASize                       DT_UINT
	TNameInfo                      SubObjectNameInfo
	NMaterialIndex                 DT_INT
	DwSubObjectHash                DT_UINT
	Unk_79283f                     DT_INT
	NVertBufferIndex               DT_INT
	NIndexBufferIndex              DT_INT
	Unk_a758781                    DT_INT
	Unk_a1b71f5                    DT_INT
	Unk_95f2e14                    DT_INT
	DwShaderMapOverride            DT_UINT
	SnoCampaignVisibilityCondition DT_SNO
	AabbBounds                     AABB
	PtShapes                       DT_VARIABLEARRAY[*CollisionShape]
	Unk_eba16f                     DT_VARIABLEARRAY[*DT_BYTE]
	PtPostprocessed                DT_INT64
	PtSegments                     DT_VARIABLEARRAY[*SubObjectSegment]
	WpFixedPointPosOffset          DT_VECTOR3D
	WpFixedPointPosScale           DT_VECTOR3D
}

func (t *SubObject) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_334eb2d.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtClothData.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_26f39c1.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwBAOffset.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87b4c64.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d28c748.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwBASize.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.TNameInfo.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMaterialIndex.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwSubObjectHash.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_79283f.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NVertBufferIndex.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.NIndexBufferIndex.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a758781.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a1b71f5.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_95f2e14.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwShaderMapOverride.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCampaignVisibilityCondition.UnmarshalD4(r, &Options{Group: 51}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.AabbBounds.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtShapes.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eba16f.UnmarshalD4(r, &Options{Flags: 2097152}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPostprocessed.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtSegments.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpFixedPointPosOffset.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+228, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpFixedPointPosScale.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_f5ac91bb struct {
	Data1 DT_INT64
	Data2 DT_INT64
}

func (t *Type_f5ac91bb) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Data1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Data2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WwiseGameParameter struct {
	TName   WwiseName
	FlValue DT_FLOAT
	FlMin   DT_FLOAT
	FlMax   DT_FLOAT
}

func (t *WwiseGameParameter) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlValue.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SurveyTypeEntry struct {
	THeader          GBIDHeader
	FlChance         DT_FLOAT
	Unk_b28752e      DT_VARIABLEARRAY[*DT_SNO]
	BIgnoresCooldown DT_INT
	Unk_69022        DT_INT
	Unk_e04d458      DT_INT
}

func (t *SurveyTypeEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlChance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b28752e.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 42,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIgnoresCooldown.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+284, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_69022.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e04d458.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_f5c4e3ed struct {
	TAppearance SerialDataInfo
	TMaterial   SerialDataInfo
}

func (t *Type_f5c4e3ed) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAppearance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMaterial.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_f5cd87eb struct {
	TCapsule   CollisionCapsule
	DwSlotHash DT_UINT
}

func (t *Type_f5cd87eb) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCapsule.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwSlotHash.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_f619930a struct {
	FlFirstWeight  DT_FLOAT
	FlMiddleWeight DT_FLOAT
	FlLastWeight   DT_FLOAT
}

func (t *Type_f619930a) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlFirstWeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMiddleWeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlLastWeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TrackedCheckpointGizmoData struct {
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
	PtProxData                   DT_POLYMORPHIC_VARIABLEARRAY[*ProximityDataBase]
	Unk_c0f24ec                  DT_INT
}

func (t *TrackedCheckpointGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtProxData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c0f24ec.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerSpawnLocData struct {
	// Inherits MarkerDataBase
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	SnoScript                 DT_VARIABLEARRAY[*DT_SNO]
	GbidSpawnLocType          DT_GBID
	ArActorGroups             DT_VARIABLEARRAY[*DT_GBID]
	ArPrefabScopedActorGroups DT_VARIABLEARRAY[*DT_GBID]
	ArPrefabCustomizations    DT_VARIABLEARRAY[*PrefabCustomization]
	BIsChild                  DT_INT
}

func (t *MarkerSpawnLocData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoScript.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 35,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidSpawnLocType.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 20,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArActorGroups.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 24,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPrefabScopedActorGroups.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 51,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArPrefabCustomizations.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsChild.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MsgTriggeredEvent struct {
	DwMsgKey       DT_ENUM
	PtTriggerEvent DT_POLYMORPHIC_VARIABLEARRAY[*TriggerEvent]
	TCooldown      DT_FLOAT
}

func (t *MsgTriggeredEvent) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwMsgKey.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtTriggerEvent.UnmarshalD4(r, &Options{Flags: 262145}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_f675b103 struct {
	Unk_b2b0e88 DT_TAGMAP[*DT_ENUM]
}

func (t *Type_f675b103) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b2b0e88.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LevelScalingDefinition_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*LevelScalingDefinition]
}

func (t *LevelScalingDefinition_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_f67f903d struct {
	// Inherits StoryboardTrack
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
}

func (t *Type_f67f903d) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionHasSkillRequirement struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType              DT_UINT
	BInverse            DT_INT
	DwPad               DT_UINT
	SnoSkillRequirement DT_SNO
}

func (t *PowerConditionHasSkillRequirement) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSkillRequirement.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 116,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AccountProfilePrivacyFlagMessage struct {
	THeader      RequiredMessageHeader
	Unk_dce541c  DT_UINT
	BPrivacyFlag DT_INT
}

func (t *AccountProfilePrivacyFlagMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dce541c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BPrivacyFlag.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SetBonusTier struct {
	NRequired DT_INT
	SnoAffix  DT_SNO
}

func (t *SetBonusTier) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NRequired.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoAffix.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 104,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupRotationYawKeyData struct {
	// Inherits EffectGroupKeyData
	// Inherits PolymorphicBase
	DwType     DT_UINT
	DwPad      DT_UINT
	ArKeyItems DT_VARIABLEARRAY[*EffectGroupKey]
}

func (t *EffectGroupRotationYawKeyData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArKeyItems.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_f6b21430 struct {
	Unk_c63f49e        DT_INT
	DwCCFlags          DT_UINT
	TSlowAmount        DT_STRING_FORMULA
	TChillAmount       DT_STRING_FORMULA
	TStaggerMultiplier DT_STRING_FORMULA
}

func (t *Type_f6b21430) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c63f49e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwCCFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TSlowAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.TChillAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.TStaggerMultiplier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type WeaponExpertiseRankReward struct {
	NRequiredRank   DT_INT
	SnoPassivePower DT_SNO
}

func (t *WeaponExpertiseRankReward) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NRequiredRank.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPassivePower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NPCComponentInstanceData struct {
	TNPCColorSet NPCColorSet
	PtComponents DT_FIXEDARRAY[*ValidComponent]
}

func (t *NPCComponentInstanceData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TNPCColorSet.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtComponents.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_f7485455 struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType  DT_UINT
	BNegate DT_INT
	DwPad   DT_UINT
}

func (t *Type_f7485455) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_f7abefc8 struct {
	// Inherits Type_303dbf00
	DwType      DT_UINT
	Unk_9b2bc26 Type_340f2b52
	Unk_77ed19a DT_ENUM
	DwPad       DT_UINT
}

func (t *Type_f7abefc8) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b2bc26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77ed19a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_f7c3172d struct {
	THeader RequiredMessageHeader
	Ann     DT_ACD_NETWORK_NAME
}

func (t *Type_f7c3172d) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BossDoorGizmoData struct {
	// Inherits NamedGizmoData
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
	TBossDoorData                BossDoorInstanceData
}

func (t *BossDoorGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.TBossDoorData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MountSetMessage struct {
	THeader     RequiredMessageHeader
	Unk_70bf7e7 DT_UINT
	AnnMount    DT_ACD_NETWORK_NAME
}

func (t *MountSetMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_70bf7e7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnMount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionIsMonsterFamilyArchetype struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType            DT_UINT
	BInverse          DT_INT
	DwPad             DT_UINT
	ESubject          DT_ENUM
	SnoMonsterFamily  DT_SNO
	BTargetFullFamily DT_INT
	SzArchetype       DT_UINT
}

func (t *PowerConditionIsMonsterFamilyArchetype) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESubject.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMonsterFamily.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 82,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.BTargetFullFamily.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzArchetype.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalHealthPotionData struct {
	// Inherits GlobalBase
	// Inherits PolymorphicBase
	DwType          DT_UINT
	DwPad           DT_UINT
	ArHealthPotions DT_VARIABLEARRAY[*HealthPotionData]
}

func (t *GlobalHealthPotionData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArHealthPotions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_f85d750a struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType      DT_UINT
	DwPad       DT_UINT
	TConditions TriggerConditions
	FGenerated  DT_INT
	Unk_6cba752 DT_INT
	Unk_e560b0b DT_UINT
}

func (t *Type_f85d750a) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CompInfluence struct{}

func (t *CompInfluence) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+1, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventOutroServicesDisable struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType       DT_UINT
	DwPad        DT_UINT
	TConditions  TriggerConditions
	FGenerated   DT_INT
	Unk_6cba752  DT_INT
	Unk_e560b0b  DT_UINT
	Unk_a82d707  DT_ENUM
	FlDuration   DT_FLOAT
	FlDistance   DT_FLOAT
	EBlendEasing DT_ENUM
}

func (t *TriggerEventOutroServicesDisable) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a82d707.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDistance.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.EBlendEasing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ACDTranslateSnappedMessage struct {
	THeader              RequiredMessageHeader
	Ann                  DT_ACD_NETWORK_NAME
	VDestX               DT_OPTIONAL[*DT_INT]
	VDestY               DT_OPTIONAL[*DT_INT]
	VDestZ               DT_OPTIONAL[*DT_INT]
	ADesiredYaw          DT_FLOAT
	BSnapFacing          DT_INT
	UMoveFlags           DT_UINT
	UAckValue            DT_OPTIONAL[*DT_UINT]
	UCameraSmoothingTime DT_OPTIONAL[*DT_UINT]
	Unk_91b31d5          DT_OPTIONAL[*DT_UINT]
}

func (t *ACDTranslateSnappedMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.VDestX.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.VDestY.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.VDestZ.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.ADesiredYaw.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.BSnapFacing.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.UMoveFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.UAckValue.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.UCameraSmoothingTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91b31d5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerEventRangedDuration struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType           DT_UINT
	TConditions      TriggerConditions
	FGenerated       DT_INT
	Unk_6cba752      DT_INT
	Unk_e560b0b      DT_UINT
	TDuration        DT_FLOAT
	DwTriggerFlags   DT_UINT
	DwTriggerFlagsEx DT_UINT
	TCleanup         TriggerCleanup
	Unk_49e9257      DT_INT
	Unk_5490979      DT_INT
	DwPad            DT_UINT
}

func (t *TriggerEventRangedDuration) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.TDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwTriggerFlagsEx.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.TCleanup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_49e9257.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5490979.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalUIData struct {
	// Inherits GlobalBase
	// Inherits PolymorphicBase
	DwType                      DT_UINT
	DwPad                       DT_UINT
	ArUILayoutEntries           DT_FIXEDARRAY[*UILayoutList]
	Unk_7e4617a                 DT_FLOAT
	Unk_1598718                 DT_FLOAT
	Unk_2c2d08c                 DT_FLOAT
	Unk_3687be2                 DT_FLOAT
	Unk_f29cf9f                 DT_FLOAT
	Unk_a1a0b99                 DT_FLOAT
	Unk_8fd95d7                 DT_FLOAT
	Unk_7fad401                 DT_FLOAT
	Unk_5610641                 DT_FLOAT
	Unk_876f67                  DT_FLOAT
	Unk_196eaf0                 DT_FLOAT
	Unk_cd8b828                 DT_FLOAT
	Unk_c13ed3                  DT_FLOAT
	Unk_b86032f                 DT_FLOAT
	Unk_d3174a3                 DT_FLOAT
	Unk_6ccfe46                 DT_FLOAT
	Unk_837ae57                 DT_FLOAT
	Unk_3e0d388                 DT_FLOAT
	Unk_4708c6a                 DT_FLOAT
	Unk_faf290a                 DT_FLOAT
	Unk_57eb5c3                 DT_FLOAT
	Unk_1224aa7                 DT_FLOAT
	Unk_9801a36                 DT_FLOAT
	Unk_9946cbb                 DT_FLOAT
	Unk_9f87fb4                 DT_FLOAT
	Unk_aaf0c18                 DT_FLOAT
	Unk_e16b011                 DT_UINT
	Unk_4f3cd66                 DT_UINT
	Unk_b825f41                 DT_UINT
	Unk_478de7c                 DT_UINT
	Unk_5e323f0                 DT_UINT
	Unk_c47180a                 DT_FLOAT
	Unk_b12c0aa                 DT_FLOAT
	Unk_9b4effb                 DT_FLOAT
	Unk_f65fa83                 DT_FLOAT
	Unk_d30a7e3                 DT_VECTOR2D
	Unk_1b1414e                 DT_SNO
	SnoMinimapNoiseTexture      DT_SNO
	Unk_a48542c                 DT_SNO
	Unk_ef09f54                 DT_FLOAT
	Unk_11c15f5                 DT_FLOAT
	Unk_6ed18a4                 DT_RGBACOLOR
	Unk_29e5ce5                 DT_RGBACOLOR
	Unk_6f7d3ac                 DT_RGBACOLOR
	Unk_2a917ed                 DT_RGBACOLOR
	Unk_72266f8                 DT_RGBACOLOR
	Unk_435bf79                 DT_RGBACOLOR
	Unk_ac1d2c7                 DT_RGBACOLOR
	Unk_72dd8a6                 DT_RGBACOLOR
	FlBorderWidth               DT_FLOAT
	FlBorderStrength            DT_FLOAT
	FlHighlightedBorderStrength DT_FLOAT
	Unk_c4559fc                 DT_FLOAT
	Unk_786fe3d                 DT_FLOAT
	FlMinimapDistortionFactor   DT_FLOAT
	FlMinimapDistortionScale    DT_FLOAT
	Unk_8badfc2                 DT_FLOAT
	Unk_d55c009                 DT_FLOAT
	Unk_d0f26d6                 DT_FLOAT
	Unk_7a8104a                 DT_FLOAT
	Unk_ce839dc                 DT_FLOAT
	Unk_1a7cebb                 DT_VECTOR2D
	Unk_cd7a774                 DT_FLOAT
	Unk_2dbafe8                 DT_FLOAT
	Unk_f1bb679                 DT_FLOAT
	Unk_f1bb57b                 DT_FLOAT
	Unk_ecabd08                 DT_FLOAT
	FlDurationMicroseconds      DT_FLOAT
	Unk_dbf4030                 DT_FLOAT
	Unk_a133a8                  DT_FLOAT
	Unk_f577b0                  DT_FLOAT
	Unk_3ab43a3                 DT_INT
	Unk_9c8f277                 DT_FLOAT
	Unk_f2cc835                 DT_UINT
	Unk_a5093bf                 DT_FLOAT
	Unk_eeb8012                 DT_UINT
	SnoFoWShader                DT_SNO
	Unk_5dbe647                 DT_SNO
	Unk_149bdee                 DT_FLOAT
	Unk_10d9d74                 DT_FLOAT
	Unk_d347c44                 DT_FLOAT
	Unk_430d091                 DT_FLOAT
	Unk_7a41cb9                 DT_FLOAT
	Unk_5c6981e                 DT_FLOAT
	Unk_62b69ec                 DT_INT
	Unk_3a17c48                 DT_FLOAT
	TRegions                    DT_FIXEDARRAY[*ObjectiveRegionParams]
	TTerritoryRegion            TerritoryRegionParams
	Unk_2c3270                  DT_FLOAT
	Unk_ec0001f                 DT_FLOAT
	Unk_c0496bf                 DT_FLOAT
	Unk_ec858c                  DT_FLOAT
	Unk_5135a05                 DT_FLOAT
	Unk_3f64492                 DT_FLOAT
	Unk_c993839                 DT_FLOAT
	Unk_4cf9be8                 DT_FLOAT
	Unk_eee69a4                 DT_FLOAT
	Unk_df2414f                 DT_FLOAT
	Unk_3fdcbeb                 DT_FLOAT
	Unk_3fdcaed                 DT_FLOAT
	Unk_b0e8e55                 DT_FLOAT
	Unk_85356ef                 DT_FLOAT
	Unk_a82d7f5                 Type_894bd255
	Unk_cfff5f6                 Type_894bd255
	Unk_f2e396e                 DT_FIXEDARRAY[*Type_894bd255]
	Unk_d9fccf3                 Type_31220ee1
	Unk_c0e1b71                 DT_VECTOR2D
	Unk_5161778                 DT_VECTOR2D
	Unk_78b2a91                 DT_VECTOR2D
	Unk_10c7eaa                 DT_FLOAT
	Unk_a61c4bf                 DT_FLOAT
	Unk_e058ac2                 Type_55ee8277
	Unk_abdc576                 ConnectorProperties
	Unk_55e00d8                 ConnectorProperties
	Unk_3ba9d7b                 ConnectorProperties
	Unk_575246e                 ConnectorProperties
	Unk_155fd0                  ConnectorProperties
	Unk_9c59a73                 ConnectorProperties
	Unk_88a6181                 ConnectorProperties
	Unk_cfbdf91                 DT_RGBACOLOR
	Unk_62538b3                 DT_RGBACOLOR
	Unk_988bcb0                 DT_RGBACOLOR
	Unk_f581a6f                 DT_RGBACOLOR
	Unk_78ed1cc                 Type_31220ee1
	Unk_5cf738e                 DT_FLOAT
	Unk_695a8a5                 DT_FLOAT
	Unk_b2e2e43                 DT_FLOAT
	Unk_e2be78                  DT_FLOAT
	Unk_dada65f                 DT_FLOAT
	Unk_ccab046                 DT_BYTE
	Unk_78e60c2                 DT_BYTE
	Unk_1333341                 DT_BYTE
	Unk_15a4084                 DT_BYTE
	Unk_c019b27                 DT_BYTE
	Unk_c091278                 DT_BYTE
	Unk_7c3f20c                 DT_FLOAT
	Unk_f993efd                 DT_UINT
	Unk_ba98f17                 DT_UINT
	ArHeroDetailsEntries        DT_FIXEDARRAY[*HeroDetailsArray]
	Unk_934d708                 DT_FLOAT
	FCreatedTangents            DT_FLOAT
	Unk_e3de54d                 DT_FLOAT
	Unk_2bdd3a2                 DT_UINT
	Unk_6d92ca8                 DT_FLOAT
	Unk_124d5ff                 DT_FLOAT
	Unk_99df291                 DT_FLOAT
	Unk_ecfa0a0                 DT_FLOAT
	Unk_599fb20                 DT_FLOAT
	Unk_6fd1380                 DT_UINT
	Unk_71f6e7e                 DT_UINT
	Unk_5df2c46                 DT_UINT
	Unk_80370e6                 DT_UINT
	Unk_321b8d8                 DT_UINT
	Unk_59d8d4                  DT_BYTE
	Unk_15da863                 DT_BYTE
	Unk_67c326a                 DT_FLOAT
	Unk_994e59c                 DT_FIXEDARRAY[*ScrollbarStyle]
	NMaxRecentAchievements      DT_UINT
	Unk_90ccf89                 DT_VARIABLEARRAY[*DT_SNO]
	Unk_2738127                 DT_UINT
	Unk_d9cee69                 Type_22d9402d
	Unk_d9cee6a                 Type_22d9402d
	Unk_d9cee6b                 Type_22d9402d
	Unk_d9cee6c                 Type_22d9402d
	Unk_d9cee6d                 Type_22d9402d
	Unk_d9cee6e                 Type_22d9402d
	Unk_d9cee6f                 Type_22d9402d
	Unk_d9cee70                 Type_22d9402d
	Unk_d9cf2aa                 Type_22d9402d
	Unk_d9cf2ab                 Type_22d9402d
	Unk_d9cf2ac                 Type_22d9402d
	Unk_d9cf2ad                 Type_22d9402d
	Unk_d9cf2ae                 Type_22d9402d
	Unk_d9cf2af                 Type_22d9402d
	Unk_d9cf2b0                 Type_22d9402d
	Unk_d9cf2b1                 Type_22d9402d
	Unk_d9cf6eb                 Type_22d9402d
	Unk_d9cf6ec                 Type_22d9402d
	Unk_d9cf6ed                 Type_22d9402d
	Unk_d9cf6ee                 Type_22d9402d
	Unk_d9cf6ef                 Type_22d9402d
	Unk_d9cf6f0                 Type_22d9402d
	Unk_d9cf6f1                 Type_22d9402d
	Unk_d9cf6f2                 Type_22d9402d
	Unk_db41c87                 DT_UINT
	Unk_ee3ceab                 DT_UINT
	Unk_bd7d800                 DT_UINT
	Unk_9d49dc4                 DT_UINT
	Unk_537458b                 DT_UINT
	Unk_d1d3a2f                 DT_UINT
	Unk_8e05798                 DT_UINT
	Unk_d949c5c                 DT_UINT
	Unk_d3dd9b3                 DT_UINT
	Unk_1aea757                 DT_UINT
	Unk_ac8d9e4                 DT_UINT
	Unk_666e28                  DT_UINT
	Unk_a47711                  DT_UINT
	SzDetailThreshhold          DT_UINT
	Unk_81f03e4                 DT_UINT
	Unk_c26d828                 DT_UINT
	SzDetailOptimize            DT_UINT
	Unk_dd1f975                 DT_UINT
	Unk_444be6e                 DT_UINT
	Unk_8d8b8f2                 DT_UINT
	Unk_b45637b                 DT_UINT
	Unk_15b8e1f                 DT_UINT
	Unk_84522db                 DT_UINT
	Unk_ef9e97f                 DT_UINT
	Unk_da9dee8                 DT_UINT
	Unk_b0735ac                 DT_UINT
	Unk_41cf76a                 DT_UINT
	Unk_c67ef6e                 DT_UINT
	Unk_47c4557                 DT_UINT
	Unk_635f97b                 DT_UINT
	Unk_2e61264                 DT_UINT
	Unk_e1af6a8                 DT_UINT
	Unk_c68bf91                 DT_UINT
	Unk_e49e7f5                 DT_UINT
	Unk_6eebf91                 DT_UINT
	Unk_c8fe7f5                 DT_UINT
	Unk_187125e                 DT_UINT
	Unk_b5d02e2                 DT_UINT
	Unk_e931d19                 DT_FIXEDARRAY[*DT_UINT]
	ArBountyIcons               DT_FIXEDARRAY[*BountyIcons]
	ArBountyTierIcons           DT_FIXEDARRAY[*BountyTierIcons]
	Unk_aa34698                 DT_UINT
	TClassInfo                  DT_FIXEDARRAY[*ClassInfoDataArray]
	Unk_51e3091                 DT_VARIABLEARRAY[*Type_7a02a8d6]
	Unk_dc621b6                 DT_VARIABLEARRAY[*DT_ENUM]
	Unk_1ff54e                  DT_VARIABLEARRAY[*DT_ENUM]
	Unk_6a92c0c                 DT_VARIABLEARRAY[*DT_ENUM]
	Unk_2db68                   DT_VARIABLEARRAY[*DT_ENUM]
	Unk_dbd3ebc                 DT_VARIABLEARRAY[*DT_ENUM]
	Unk_bb45514                 DT_VARIABLEARRAY[*DT_FLOAT]
	Unk_6494906                 DT_INT
	Unk_31fce21                 DT_FLOAT
	Unk_774d89f                 DT_FLOAT
	Unk_ef2cbab                 DT_FLOAT
	Unk_4f23516                 DT_FLOAT
	Unk_d3ef4e8                 DT_FLOAT
	Unk_618bf22                 DT_FLOAT
	Unk_199897                  DT_VARIABLEARRAY[*DT_SNO]
	Unk_17dc82                  DT_FLOAT
	Unk_29f26f5                 DT_FLOAT
	FlMinimapRevealRadius       DT_FLOAT
	Unk_b8c638c                 DT_UINT
	Unk_2b6498d                 DT_VARIABLEARRAY[*GlobalFontColor]
	Unk_7b6861c                 DT_FLOAT
	Unk_c56ad90                 DT_FLOAT
	Unk_1f7cfee                 DT_FLOAT
	Unk_85af920                 DT_FLOAT
	Unk_3ec7e81                 DT_FLOAT
	Unk_586724                  DT_FLOAT
	Unk_1fa8d3c                 DT_INT
	Unk_1fa8c3e                 DT_INT
	Unk_17a967d                 DT_INT
	Unk_f063bba                 DT_INT
	Unk_ce72bfa                 DT_INT
	Unk_ce72afc                 DT_INT
	Unk_9ecbbb                  DT_INT
	Unk_39edff8                 DT_INT
	Unk_c79c16e                 DT_INT
	Unk_c79c070                 DT_INT
	Unk_c70a82f                 DT_INT
	BInfiniteAmount             DT_INT
	Unk_26a4b93                 DT_FIXEDARRAY[*Type_e3bec795]
}

func (t *GlobalUIData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArUILayoutEntries.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7e4617a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1598718.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2c2d08c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3687be2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f29cf9f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a1a0b99.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8fd95d7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7fad401.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5610641.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_876f67.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_196eaf0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cd8b828.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c13ed3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b86032f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d3174a3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6ccfe46.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_837ae57.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3e0d388.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4708c6a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_faf290a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_57eb5c3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1224aa7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9801a36.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9946cbb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9f87fb4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aaf0c18.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e16b011.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+172, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4f3cd66.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b825f41.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_478de7c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5e323f0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+188, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c47180a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b12c0aa.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+196, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b4effb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+200, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f65fa83.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+204, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d30a7e3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+212, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1b1414e.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+216, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMinimapNoiseTexture.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a48542c.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ef09f54.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+228, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_11c15f5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+232, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6ed18a4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+236, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_29e5ce5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6f7d3ac.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+244, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2a917ed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+248, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_72266f8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+252, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_435bf79.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ac1d2c7.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_72dd8a6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlBorderWidth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlBorderStrength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlHighlightedBorderStrength.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c4559fc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_786fe3d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+284, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMinimapDistortionFactor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+288, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMinimapDistortionScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+292, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8badfc2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d55c009.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+300, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0f26d6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7a8104a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+308, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ce839dc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+312, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1a7cebb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+320, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cd7a774.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+324, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2dbafe8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+328, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f1bb679.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+332, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f1bb57b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+336, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ecabd08.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+340, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDurationMicroseconds.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+344, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dbf4030.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+348, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a133a8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+352, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f577b0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+356, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3ab43a3.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+360, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8f277.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+364, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f2cc835.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+368, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a5093bf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+372, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eeb8012.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+376, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoFoWShader.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+380, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5dbe647.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 37,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+384, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_149bdee.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+388, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_10d9d74.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+392, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d347c44.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+396, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_430d091.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+400, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7a41cb9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+404, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5c6981e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+408, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_62b69ec.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+412, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3a17c48.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+416, io.SeekStart); err != nil {
		return err
	}
	if err := t.TRegions.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+836, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTerritoryRegion.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+860, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2c3270.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+864, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ec0001f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+868, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c0496bf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+872, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ec858c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+876, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5135a05.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+880, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3f64492.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+884, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c993839.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+888, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4cf9be8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+892, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eee69a4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+896, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_df2414f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+900, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3fdcbeb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+904, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3fdcaed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+908, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b0e8e55.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+912, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_85356ef.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+916, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a82d7f5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+952, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cfff5f6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+988, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f2e396e.UnmarshalD4(r, &Options{
		ArrayLength: 2,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1060, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9fccf3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c0e1b71.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5161778.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_78b2a91.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_10c7eaa.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a61c4bf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e058ac2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1196, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_abdc576.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1224, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_55e00d8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1252, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3ba9d7b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1280, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_575246e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1308, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_155fd0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1336, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c59a73.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1364, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_88a6181.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1392, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cfbdf91.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1396, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_62538b3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1400, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_988bcb0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1404, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f581a6f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1408, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_78ed1cc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1476, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5cf738e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1480, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_695a8a5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1484, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b2e2e43.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1488, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e2be78.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1492, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dada65f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1496, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ccab046.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1497, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_78e60c2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1498, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1333341.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1499, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_15a4084.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1500, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c019b27.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1501, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c091278.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1504, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7c3f20c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1508, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f993efd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1512, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ba98f17.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1520, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArHeroDetailsEntries.UnmarshalD4(r, &Options{
		ArrayLength: 6,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1616, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_934d708.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1620, io.SeekStart); err != nil {
		return err
	}
	if err := t.FCreatedTangents.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1624, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e3de54d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1628, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2bdd3a2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1632, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d92ca8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1636, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_124d5ff.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1640, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_99df291.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1644, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ecfa0a0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1648, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_599fb20.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1652, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6fd1380.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1656, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_71f6e7e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1660, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5df2c46.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1664, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_80370e6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1668, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_321b8d8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1672, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_59d8d4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1673, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_15da863.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1676, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_67c326a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1680, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_994e59c.UnmarshalD4(r, &Options{
		ArrayLength: 4,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1920, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMaxRecentAchievements.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1928, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_90ccf89.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1944, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2738127.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1948, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cee69.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1964, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cee6a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1980, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cee6b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1996, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cee6c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2012, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cee6d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2028, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cee6e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2044, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cee6f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2060, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cee70.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2076, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cf2aa.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2092, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cf2ab.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2108, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cf2ac.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cf2ad.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cf2ae.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cf2af.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2172, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cf2b0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2188, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cf2b1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2204, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cf6eb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2220, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cf6ec.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2236, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cf6ed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2252, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cf6ee.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2268, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cf6ef.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2284, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cf6f0.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2300, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cf6f1.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2316, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9cf6f2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2332, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_db41c87.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2336, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ee3ceab.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2340, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bd7d800.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2344, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9d49dc4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2348, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_537458b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2352, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d1d3a2f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2356, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8e05798.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2360, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d949c5c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2364, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d3dd9b3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2368, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1aea757.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2372, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ac8d9e4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2376, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_666e28.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2380, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a47711.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2384, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzDetailThreshhold.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2388, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_81f03e4.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2392, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c26d828.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2396, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzDetailOptimize.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2400, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dd1f975.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2404, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_444be6e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2408, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_8d8b8f2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2412, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b45637b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2416, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_15b8e1f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2420, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_84522db.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2424, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ef9e97f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2428, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_da9dee8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2432, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b0735ac.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2436, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_41cf76a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2440, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c67ef6e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2444, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_47c4557.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2448, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_635f97b.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2452, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2e61264.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2456, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e1af6a8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2460, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c68bf91.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2464, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e49e7f5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2468, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6eebf91.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2472, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c8fe7f5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2476, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_187125e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2480, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b5d02e2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2484, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e931d19.UnmarshalD4(r, &Options{
		ArrayLength: 23,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2576, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArBountyIcons.UnmarshalD4(r, &Options{
		ArrayLength: 10,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2696, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArBountyTierIcons.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2744, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aa34698.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2752, io.SeekStart); err != nil {
		return err
	}
	if err := t.TClassInfo.UnmarshalD4(r, &Options{
		ArrayLength: 5,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2912, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_51e3091.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2928, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dc621b6.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2944, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1ff54e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2960, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6a92c0c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2976, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2db68.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2992, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_dbd3ebc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3008, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bb45514.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3024, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6494906.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3028, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_31fce21.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3032, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_774d89f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3036, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ef2cbab.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3040, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4f23516.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3044, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d3ef4e8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3048, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_618bf22.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3056, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_199897.UnmarshalD4(r, &Options{
		Flags: 513,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3072, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_17dc82.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3076, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_29f26f5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3080, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMinimapRevealRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3084, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b8c638c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3088, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2b6498d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7b6861c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3108, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c56ad90.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1f7cfee.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_85af920.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_3ec7e81.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_586724.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1fa8d3c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_1fa8c3e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_17a967d.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f063bba.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ce72bfa.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ce72afc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9ecbbb.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_39edff8.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3160, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c79c16e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3164, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c79c070.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_c70a82f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3172, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInfiniteAmount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_26a4b93.UnmarshalD4(r, &Options{
		ArrayLength: 1,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+3216, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CompVertInfluences struct{}

func (t *CompVertInfluences) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+1, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DebugActorTooltipMessage struct {
	THeader   RequiredMessageHeader
	Ann       DT_ACD_NETWORK_NAME
	SzTooltip DT_CHARARRAY
}

func (t *DebugActorTooltipMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzTooltip.UnmarshalD4(r, &Options{
		ArrayLength: 1024,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+1048, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AnimSetDefinition struct {
	PtWeaponClasses  DT_VARIABLEARRAY[*DT_ENUM]
	EAnimsetType     DT_ENUM
	PtPowerEntryList DT_VARIABLEARRAY[*AnimSetPowerEntry]
	Unk_d9dcd40      DT_VARIABLEARRAY[*Type_5524bcce]
	Unk_4ff6b8e      DT_VARIABLEARRAY[*Type_a1889860]
}

func (t *AnimSetDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtWeaponClasses.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EAnimsetType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.PtPowerEntryList.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d9dcd40.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4ff6b8e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type RevealWorldMessage struct {
	THeader               RequiredMessageHeader
	IdSWorld              DT_SHARED_SERVER_DATA_ID
	SnoWorld              DT_SNO
	Unk_2573139           DT_UINT
	Unk_b4055da           DT_OPTIONAL[*DT_VECTOR2D]
	UKeyedDungeonTier     DT_OPTIONAL[*DT_UINT]
	ArDungeonStates       DT_FIXEDARRAY[*DT_GBID]
	NDungeonStatesCount   DT_INT
	ArDungeonAffixes      DT_FIXEDARRAY[*DT_SNO]
	Unk_6966598           DT_FIXEDARRAY[*DT_SNO]
	NRemainingReviveCount DT_INT
}

func (t *RevealWorldMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdSWorld.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoWorld.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 48,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2573139.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b4055da.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.UKeyedDungeonTier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArDungeonStates.UnmarshalD4(r, &Options{
		ArrayLength: 32,
		Flags:       1,
		Group:       31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+180, io.SeekStart); err != nil {
		return err
	}
	if err := t.NDungeonStatesCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArDungeonAffixes.UnmarshalD4(r, &Options{
		ArrayLength: 8,
		Flags:       9,
		Group:       135,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+220, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6966598.UnmarshalD4(r, &Options{
		ArrayLength: 8,
		Flags:       9,
		Group:       31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.NRemainingReviveCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupStandardTrack struct {
	// Inherits EffectGroupTrack
	// Inherits PolymorphicBase
	DwType DT_UINT
	DwPad  DT_UINT
}

func (t *EffectGroupStandardTrack) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type UIDrawHookStyle struct {
	// Inherits UIControlStyle
	// Inherits PolymorphicBase
	DwType                    DT_UINT
	DwPad                     DT_UINT
	HParentStyle              UIControlHandle
	Unk_441f783               DT_INT64
	M_eHasModifiedPowerTagMap DT_TAGMAP[*DT_ENUM]
	Unk_db47553               DT_TAGMAP[*DT_ENUM]
}

func (t *UIDrawHookStyle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.HParentStyle.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_441f783.UnmarshalD4(r, &Options{Flags: 4194304}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.M_eHasModifiedPowerTagMap.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_db47553.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_fa8eb4a0 struct {
	FlTime       DT_FLOAT
	FlDistortion DT_FLOAT
}

func (t *Type_fa8eb4a0) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlDistortion.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_fa97e5b9 struct {
	SnoOceanAmbient     DT_SNO
	Unk_31e7772         DT_SNO
	SnoRiverAmbient     DT_SNO
	SnoStreamAmbient    DT_SNO
	SnoCliffEdgeAmbient DT_SNO
}

func (t *Type_fa97e5b9) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOceanAmbient.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 5,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_31e7772.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 5,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoRiverAmbient.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 5,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoStreamAmbient.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 5,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoCliffEdgeAmbient.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 5,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ACDCollFlagsMessage struct {
	THeader                RequiredMessageHeader
	Ann                    DT_ACD_NETWORK_NAME
	UDynamicFlagsNoOverlap DT_UINT
	UDynamicMyFlags        DT_UINT
}

func (t *ACDCollFlagsMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.UDynamicFlagsNoOverlap.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.UDynamicMyFlags.UnmarshalD4(r, &Options{Flags: 524289}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PopGroupHandle struct {
	SnoPopulation DT_SNO
	GbidType      DT_GBID
	NID           DT_INT
}

func (t *PopGroupHandle) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPopulation.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 84,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidType.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 20,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ConnectorProperties struct {
	FlThickness      DT_FLOAT
	RgbaColor        DT_RGBACOLOR
	SnoTexPattern    DT_SNO
	Unk_74b9406      DT_FLOAT
	Unk_a7a54fd      DT_FLOAT
	HDownCornerImage DT_UINT
	HUpCornerImage   DT_UINT
}

func (t *ConnectorProperties) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlThickness.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.RgbaColor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTexPattern.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 44,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_74b9406.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a7a54fd.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.HDownCornerImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.HUpCornerImage.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MainHandItemLabelSubcondition struct {
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType     DT_UINT
	BNegate    DT_INT
	DwPad      DT_UINT
	NItemLabel DT_ENUM
}

func (t *MainHandItemLabelSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.NItemLabel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_fb08076b struct {
	THeader RequiredMessageHeader
}

func (t *Type_fb08076b) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TriggerGizmoData struct {
	// Inherits ActorGizmoData
	// Inherits PolymorphicBase
	DwType                       DT_UINT
	DwPad                        DT_UINT
	FDisableNonFriendlyOperation DT_INT
	FWalkToCenter                DT_INT
	FGizmoStartsDisabled         DT_INT
	FUseStringListName           DT_INT
	FForceMinimapIcon            DT_INT
	FlOperationRadius            DT_FLOAT
	Unk_d0b1df5                  DT_FLOAT
	FlGizmoUseTime               DT_FLOAT
	SnoChannelingEffect          DT_SNO
	Unk_2767229                  DT_INT
	FGizmoShowProgressBar        DT_INT
	Unk_6d9ebe1                  DT_INT
	Unk_5456245                  DT_INT
	Unk_af5815a                  DT_INT
	SnoOnClickEffect             DT_SNO
	SnoPickedUpEffect            DT_SNO
	SnoDropOnGroundEffect        DT_SNO
	TConditionData               GizmoConditionData
	SnoPowerOperator             DT_SNO
	SnoPowerOperate              DT_SNO
	SnoPowerOperatorActive       DT_SNO
	SnoPowerOperateActive        DT_SNO
	Unk_359810e                  DT_INT
	NCooldown                    DT_UINT
	Unk_9c8478e                  DT_UINT
	Unk_d45ed2d                  DT_INT
	Unk_f6b20b7                  DT_INT
	Unk_54513b8                  DT_INT
	Unk_fd1f378                  DT_UINT
	Unk_487c14                   DT_UINT
	Unk_87f2609                  DT_UINT
	Unk_158eb4f                  DT_FLOAT
	Unk_ab58cd3                  DT_ENUM
	Unk_91a3966                  DT_UINT
	Unk_25312e5                  DT_UINT
	Unk_4be4371                  DT_INT
	TTriggerData                 TriggerData
}

func (t *TriggerGizmoData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FDisableNonFriendlyOperation.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.FWalkToCenter.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoStartsDisabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.FUseStringListName.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FForceMinimapIcon.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlOperationRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d0b1df5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlGizmoUseTime.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoChannelingEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_2767229.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGizmoShowProgressBar.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6d9ebe1.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_5456245.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_af5815a.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoOnClickEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPickedUpEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoDropOnGroundEffect.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditionData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperator.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperate.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperatorActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPowerOperateActive.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_359810e.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+108, io.SeekStart); err != nil {
		return err
	}
	if err := t.NCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9c8478e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+116, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_d45ed2d.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+120, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_f6b20b7.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+124, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_54513b8.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd1f378.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+132, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_487c14.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+136, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_87f2609.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+140, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_158eb4f.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_ab58cd3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+148, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_91a3966.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_25312e5.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+156, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4be4371.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTriggerData.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_fb1b44b9 struct {
	SzProgressTarget                DT_CSTRING[*DT_BYTE]
	SzForegroundChild               DT_CSTRING[*DT_BYTE]
	SnoProgressForegroundTiledStyle DT_SNO
	SnoProgressBackgroundTiledStyle DT_SNO
	Unk_309438d                     DT_SNO
	ESmoothing                      DT_ENUM
	FlSmoothingSpeed                DT_FLOAT
}

func (t *Type_fb1b44b9) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzProgressTarget.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzForegroundChild.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoProgressForegroundTiledStyle.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 103,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoProgressBackgroundTiledStyle.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 103,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_309438d.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 40,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESmoothing.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlSmoothingSpeed.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TransmogSlot struct {
	ESlot     DT_ENUM
	TTransmog Transmog
	BEnabled  DT_INT
}

func (t *TransmogSlot) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESlot.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTransmog.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.BEnabled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LogoutTickTimeMessage struct {
	THeader       RequiredMessageHeader
	EContext      DT_ENUM
	UMinWaitTicks DT_UINT
	UMaxWaitTicks DT_UINT
	UKickTicks    DT_UINT
}

func (t *LogoutTickTimeMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EContext.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.UMinWaitTicks.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.UMaxWaitTicks.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.UKickTicks.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ImageFileID struct {
	SzFileName       DT_CHARARRAY
	SzSourceFileName DT_CHARARRAY
	NFrameIndex      DT_INT
}

func (t *ImageFileID) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzFileName.UnmarshalD4(r, &Options{
		ArrayLength: 256,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzSourceFileName.UnmarshalD4(r, &Options{
		ArrayLength: 256,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+512, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFrameIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+516, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EffectGroupScaleZKeyData struct {
	// Inherits EffectGroupKeyData
	// Inherits PolymorphicBase
	DwType     DT_UINT
	DwPad      DT_UINT
	ArKeyItems DT_VARIABLEARRAY[*EffectGroupKey]
}

func (t *EffectGroupScaleZKeyData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArKeyItems.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MountSelectMessage struct {
	THeader              RequiredMessageHeader
	SnoSelectedMountItem DT_SNO
}

func (t *MountSelectMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSelectedMountItem.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 73,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_fba0555c struct {
	Normal DT_VECTOR3D
	Offset DT_FLOAT
}

func (t *Type_fba0555c) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Normal.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Offset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_fbb7557a struct {
	DwPlaylistID    DT_UINT
	DwPlaylistIndex DT_UINT
}

func (t *Type_fbb7557a) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPlaylistID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPlaylistIndex.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_fbdf1440 struct {
	ArBones DT_VARIABLEARRAY[*AppBone]
}

func (t *Type_fbdf1440) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArBones.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type EmitterSubObjectData struct {
	// Inherits EmitterDataBase
	// Inherits PolymorphicBase
	DwType              DT_UINT
	DwPad               DT_UINT
	FSequential         DT_INT
	SzSubObjectName     DT_UINT
	PathSequentialRange Type_cbfdd2ea
}

func (t *EmitterSubObjectData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FSequential.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzSubObjectName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.PathSequentialRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_fbecf664 struct {
	// Inherits Type_4e43aa7a
	DwType      DT_UINT
	Unk_9b2bc26 Type_80fa280c
	Unk_77ed19a DT_ENUM
	DwPad       DT_UINT
}

func (t *Type_fbecf664) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_9b2bc26.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_77ed19a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type GlobalMarkerActorHiddenCacheData struct {
	// Inherits GlobalMarkerActorData
	// Inherits PolymorphicBase
	DwType          DT_UINT
	DwPad           DT_UINT
	GbidHiddenCache DT_GBID
}

func (t *GlobalMarkerActorHiddenCacheData) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidHiddenCache.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 28,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TranslationKey struct {
	NFrame DT_INT
	Wp     DT_VECTOR3D
}

func (t *TranslationKey) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NFrame.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Wp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type IconScale struct {
	Unk_19dc976 DT_TAGMAP[*DT_ENUM]
}

func (t *IconScale) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_19dc976.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type IconAnchorPoint struct {
	SzName      DT_UINT
	Unk_fd93db3 DT_TAGMAP[*DT_ENUM]
}

func (t *IconAnchorPoint) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fd93db3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DungeonStatesEntry_Table struct {
	// Inherits GameBalanceTable
	// Inherits PolymorphicBase
	DwType   DT_UINT
	DwPad    DT_UINT
	TEntries DT_VARIABLEARRAY[*DungeonStatesEntry]
}

func (t *DungeonStatesEntry_Table) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MailReadResponseMessage struct {
	THeader RequiredMessageHeader
	IdMail  Type_f5ac91bb
	IdErr   DT_INT
}

func (t *MailReadResponseMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdMail.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdErr.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type NecroArmySpecUpgradeMessage struct {
	THeader                  RequiredMessageHeader
	EUnitType                DT_ENUM
	ESpecialization          DT_ENUM
	SnoSpecializationUpgrade DT_SNO
}

func (t *NecroArmySpecUpgradeMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EUnitType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESpecialization.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSpecializationUpgrade.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_fcb18f8f struct {
	// Inherits ScriptEventParamBase
	// Inherits PolymorphicBase
	DwType        DT_UINT
	EParamType    DT_ENUM
	DwPad         DT_UINT
	TMarkerHandle MarkerHandle
	DwGroupHash   DT_UINT
	IdValue       DT_INT
	SzGroup       DT_CSTRING[*DT_BYTE]
}

func (t *Type_fcb18f8f) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EParamType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TMarkerHandle.UnmarshalD4(r, &Options{Flags: 513}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwGroupHash.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdValue.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzGroup.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ExternalPlatform struct {
	SzProductId DT_CSTRING[*DT_BYTE]
}

func (t *ExternalPlatform) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SzProductId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SkillKitDefinition struct {
	ArActiveSkillEntries     DT_VARIABLEARRAY[*ActiveSkillEntry]
	ArDefaultSkillLoadout    DT_VARIABLEARRAY[*DT_SNO]
	ArNodes                  DT_VARIABLEARRAY[*SkillTreeNode]
	ArConnections            DT_VARIABLEARRAY[*SkillTreeNodeConnection]
	DwNextID                 DT_UINT
	VNodeMinPositions        DT_VECTOR2D
	VNodeMaxPositions        DT_VECTOR2D
	VRootNodeCenterPosition  DT_VECTOR2D
	VBackgroundImagePosition DT_VECTOR2D
}

func (t *SkillKitDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArActiveSkillEntries.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArDefaultSkillLoadout.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArNodes.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArConnections.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwNextID.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.VNodeMinPositions.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.VNodeMaxPositions.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.VRootNodeCenterPosition.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+100, io.SeekStart); err != nil {
		return err
	}
	if err := t.VBackgroundImagePosition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkingColorDefinition struct {
	NSortOrder  DT_INT
	FIsTattoo   DT_INT
	Unk_fc3d8a3 DT_FIXEDARRAY[*DT_RGBACOLORVALUE]
	Unk_37592cc DT_FLOAT
	Unk_7c43e7a DT_FLOAT
}

func (t *MarkingColorDefinition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NSortOrder.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.FIsTattoo.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_fc3d8a3.UnmarshalD4(r, &Options{ArrayLength: 3}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_37592cc.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7c43e7a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type BountyTierIcons struct {
	HIconSelected         DT_UINT
	HIconNormal           DT_UINT
	HIconDisabled         DT_UINT
	HIconDisabledSelected DT_UINT
}

func (t *BountyTierIcons) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIconSelected.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIconNormal.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIconDisabled.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.HIconDisabledSelected.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type ItemPVPEarDataMessage struct {
	THeader       RequiredMessageHeader
	Ann           DT_ACD_NETWORK_NAME
	IdGameAccount DT_UINT
	Unk_81ffda3   DT_UINT
	NPlayerClass  DT_INT
	BIsMale       DT_INT
	NLevel        DT_INT
	SnoLevelArea  DT_SNO
}

func (t *ItemPVPEarDataMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Ann.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.IdGameAccount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_81ffda3.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPlayerClass.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.BIsMale.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.NLevel.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoLevelArea.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 22,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type MarkerHeightFieldSection struct {
	NWidth            DT_INT
	NHeight           DT_INT
	NMaxHeight        DT_WORD
	NMinHeight        DT_WORD
	Unk_784cc0a       DT_FLOAT
	Unk_96d4a3a       DT_VARIABLEARRAY[*DT_SNO]
	Unk_92a8c46       DT_VARIABLEARRAY[*MarkerHeightFieldTextureInfo]
	Unk_66ea301       MarkerHeightFieldTextureInfo
	Unk_573867e       MarkerHeightFieldTextureInfo
	Unk_50ad237       MarkerHeightFieldTextureInfo
	Unk_b7e82ff       MarkerHeightFieldTextureInfo
	Unk_aae2d5e       MarkerHeightFieldTextureInfo
	ArBiomes          DT_VARIABLEARRAY[*DT_SNO]
	ArClutter         DT_VARIABLEARRAY[*MarkerHeightFieldClutter]
	TOceanIndicesInfo Type_bf456a16
	Unk_4fbebbf       Type_bf456a16
	TIndicesInfo      Type_bf456a16
	Unk_eb5aed9       Type_bf456a16
	Unk_7c5feb2       Type_bf456a16
	Unk_4963bda       Type_bf456a16
	ArLODs            DT_VARIABLEARRAY[*Type_bf456a16]
	ArFogMask         DT_VARIABLEARRAY[*DT_BYTE]
	ArOceanMask       DT_VARIABLEARRAY[*DT_BYTE]
	Unk_131b0a2       DT_VECTOR4D
}

func (t *MarkerHeightFieldSection) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NWidth.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMaxHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+10, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMinHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_784cc0a.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_96d4a3a.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 57,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_92a8c46.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_66ea301.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_573867e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_50ad237.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_b7e82ff.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_aae2d5e.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+112, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArBiomes.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 77,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+128, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArClutter.UnmarshalD4(r, &Options{Flags: 2097153}); err != nil {
		return err
	}
	if _, err := r.Seek(p+144, io.SeekStart); err != nil {
		return err
	}
	if err := t.TOceanIndicesInfo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+152, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4fbebbf.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+160, io.SeekStart); err != nil {
		return err
	}
	if err := t.TIndicesInfo.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+168, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_eb5aed9.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+176, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7c5feb2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+184, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_4963bda.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+192, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArLODs.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+208, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArFogMask.UnmarshalD4(r, &Options{Flags: 2097153}); err != nil {
		return err
	}
	if _, err := r.Seek(p+224, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArOceanMask.UnmarshalD4(r, &Options{Flags: 2097153}); err != nil {
		return err
	}
	if _, err := r.Seek(p+240, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_131b0a2.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+256, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type VertexCountSettings struct {
	NVertexCountMin DT_INT
	NVertexCountMax DT_INT
}

func (t *VertexCountSettings) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.NVertexCountMin.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.NVertexCountMax.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PlayerPotionDosesSubcondition struct {
	// Inherits Type_d3c3637f
	// Inherits Subcondition
	// Inherits PolymorphicBase
	DwType        DT_UINT
	BNegate       DT_INT
	EComparisonOp DT_ENUM
	DwPad         DT_UINT
	NPotionCount  DT_INT
}

func (t *PlayerPotionDosesSubcondition) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BNegate.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.EComparisonOp.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPotionCount.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_fd884ad3 struct {
	StartIndex DT_WORD
	EndIndex   DT_WORD
}

func (t *Type_fd884ad3) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.StartIndex.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+2, io.SeekStart); err != nil {
		return err
	}
	if err := t.EndIndex.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PrefetchMarkerSetMessage struct {
	THeader      RequiredMessageHeader
	SnoMarkerSet DT_SNO
	Unk_a61d97   DT_OPTIONAL[*DT_INT]
}

func (t *PrefetchMarkerSetMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoMarkerSet.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 24,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a61d97.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SurfaceGridPrimitive struct {
	DwHeight   DT_BYTE
	SnoSurface DT_UINT
}

func (t *SurfaceGridPrimitive) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwHeight.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoSurface.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_fe183d60 struct {
	Unk_651223  DT_FLOAT
	Unk_651224  DT_FLOAT
	Unk_651225  DT_FLOAT
	Unk_651226  DT_FLOAT
	Unk_651227  DT_FLOAT
	Unk_651228  DT_FLOAT
	Unk_bd37344 DT_RGBACOLOR
	Unk_bd37345 DT_RGBACOLOR
	Unk_bd37346 DT_RGBACOLOR
	Unk_bd37347 DT_RGBACOLOR
	Unk_bd37348 DT_RGBACOLOR
	Unk_bd37349 DT_RGBACOLOR
}

func (t *Type_fe183d60) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_651223.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_651224.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_651225.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_651226.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_651227.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_651228.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bd37344.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bd37345.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bd37346.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+36, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bd37347.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bd37348.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+44, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_bd37349.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DynamicAudioState struct {
	TAudioState       WwiseSwitchValue
	TTriggerRange     DT_RANGE[*DT_FLOAT]
	FlMinimumDuration DT_FLOAT
}

func (t *DynamicAudioState) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.TAudioState.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.TTriggerRange.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlMinimumDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_fe214945 struct {
	// Inherits PowerCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	BCouldHaveRagdolled   DT_INT
}

func (t *Type_fe214945) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCouldHaveRagdolled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type OnPhaseExitedPowerCallback struct {
	// Inherits PowerCallbackBase
	// Inherits PolymorphicBase
	DwType                DT_UINT
	DwPad                 DT_UINT
	SnoTriggerEffectGroup DT_SNO
	BCouldHaveRagdolled   DT_INT
	TPhaseName            DT_UINT
}

func (t *OnPhaseExitedPowerCallback) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoTriggerEffectGroup.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 14,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.BCouldHaveRagdolled.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.TPhaseName.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type LabelRuleSet struct {
	ArRules DT_VARIABLEARRAY[*LabelRule]
}

func (t *LabelRuleSet) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArRules.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type AIStateDebugSetLoopMessage struct {
	THeader       RequiredMessageHeader
	AnnActor      DT_ACD_NETWORK_NAME
	DwCooldownKey DT_INT64
	FlCooldown    DT_FLOAT
}

func (t *AIStateDebugSetLoopMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnActor.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwCooldownKey.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+32, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlCooldown.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SetTetherInfoForPlayerMessage struct {
	THeader        RequiredMessageHeader
	AnnPlayer      DT_ACD_NETWORK_NAME
	FlTetherRadius DT_FLOAT
	WpTetherPoint  SharedServerWorldPlace
}

func (t *SetTetherInfoForPlayerMessage) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.AnnPlayer.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlTetherRadius.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+28, io.SeekStart); err != nil {
		return err
	}
	if err := t.WpTetherPoint.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type TrackPieces struct {
	// Inherits WindowPiecesBase
	// Inherits PolymorphicBase
	DwType       DT_UINT
	DwPad        DT_UINT
	FlImageScale DT_FLOAT
	NPadding     DT_UINT
	HPieceFrame  DT_FIXEDARRAY[*DT_UINT]
}

func (t *TrackPieces) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.FlImageScale.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.NPadding.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.HPieceFrame.UnmarshalD4(r, &Options{
		ArrayLength: 3,
		Flags:       1,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_feacdb4e struct {
	SnoPower     DT_SNO
	DwWeaponSlot DT_INT
}

func (t *Type_feacdb4e) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+4, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwWeaponSlot.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_feb5d551 struct {
	// Inherits TriggerEvent
	// Inherits PolymorphicBase
	DwType            DT_UINT
	DwPad             DT_UINT
	TConditions       TriggerConditions
	FGenerated        DT_INT
	Unk_6cba752       DT_INT
	Unk_e560b0b       DT_UINT
	BOverridePosition DT_INT
	VecPosition       DT_VECTOR2D
}

func (t *Type_feb5d551) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+12, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.TConditions.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.FGenerated.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_6cba752.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_e560b0b.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.BOverridePosition.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+84, io.SeekStart); err != nil {
		return err
	}
	if err := t.VecPosition.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type Type_ff4098b9 struct {
	ArSnos      DT_VARIABLEARRAY[*DT_SNO]
	Unk_7fc1b58 DT_INT
	Unk_cc11a8e DT_VARIABLEARRAY[*DT_BYTE]
}

func (t *Type_ff4098b9) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSnos.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_7fc1b58.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_cc11a8e.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type DeathTemplate struct{}

func (t *DeathTemplate) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+1, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type CriteriaStartEvent struct {
	// Inherits CriteriaEvent
	// Inherits PolymorphicBase
	DwType               DT_UINT
	EId                  DT_ENUM
	ArModifier           DT_VARIABLEARRAY[*CriteriaModifier]
	Snoname              DT_SNO_NAME
	EGizmoType           DT_ENUM
	EIQL                 DT_ENUM
	ESlot                DT_ENUM
	EHealType            DT_ENUM
	ECurrencyType        DT_ENUM
	EZone                DT_ENUM
	UVal                 DT_UINT
	GbidAchievementEvent DT_GBID
	UOperand             DT_INT64
	BUsesOperand         DT_INT
	DwPad                DT_UINT
	UTimerDuration       DT_INT64
}

func (t *CriteriaStartEvent) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.EId.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArModifier.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+40, io.SeekStart); err != nil {
		return err
	}
	if err := t.Snoname.UnmarshalD4(r, &Options{Flags: 513}); err != nil {
		return err
	}
	if _, err := r.Seek(p+48, io.SeekStart); err != nil {
		return err
	}
	if err := t.EGizmoType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+52, io.SeekStart); err != nil {
		return err
	}
	if err := t.EIQL.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+56, io.SeekStart); err != nil {
		return err
	}
	if err := t.ESlot.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+60, io.SeekStart); err != nil {
		return err
	}
	if err := t.EHealType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+64, io.SeekStart); err != nil {
		return err
	}
	if err := t.ECurrencyType.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+68, io.SeekStart); err != nil {
		return err
	}
	if err := t.EZone.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+72, io.SeekStart); err != nil {
		return err
	}
	if err := t.UVal.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+76, io.SeekStart); err != nil {
		return err
	}
	if err := t.GbidAchievementEvent.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 62,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+80, io.SeekStart); err != nil {
		return err
	}
	if err := t.UOperand.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+88, io.SeekStart); err != nil {
		return err
	}
	if err := t.BUsesOperand.UnmarshalD4(r, &Options{Flags: 16}); err != nil {
		return err
	}
	if _, err := r.Seek(p+92, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+96, io.SeekStart); err != nil {
		return err
	}
	if err := t.UTimerDuration.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+104, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type SubzoneModifierTagsEntry struct {
	THeader             GBIDHeader
	SnoPower            DT_SNO
	SnoBuff             DT_SNO
	Unk_891f4a8         DT_SNO
	Unk_82ec588         DT_FLOAT
	NMonsterLevelOffset DT_INT
	ArSpawnLocOverrides DT_VARIABLEARRAY[*Type_e87d70c1]
	Unk_a60ef1c         DT_INT
}

func (t *SubzoneModifierTagsEntry) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+0, io.SeekStart); err != nil {
		return err
	}
	if err := t.THeader.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+260, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoPower.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+264, io.SeekStart); err != nil {
		return err
	}
	if err := t.SnoBuff.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 29,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+268, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_891f4a8.UnmarshalD4(r, &Options{
		Flags: 1,
		Group: 31,
	}); err != nil {
		return err
	}
	if _, err := r.Seek(p+272, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_82ec588.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+276, io.SeekStart); err != nil {
		return err
	}
	if err := t.NMonsterLevelOffset.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+280, io.SeekStart); err != nil {
		return err
	}
	if err := t.ArSpawnLocOverrides.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+296, io.SeekStart); err != nil {
		return err
	}
	if err := t.Unk_a60ef1c.UnmarshalD4(r, &Options{Flags: 1}); err != nil {
		return err
	}
	if _, err := r.Seek(p+304, io.SeekStart); err != nil {
		return err
	}
	return nil
}

type PowerConditionIsPlayerActiveSkill struct {
	// Inherits PowerConditionBase
	// Inherits PolymorphicBase
	DwType   DT_UINT
	BInverse DT_INT
	DwPad    DT_UINT
}

func (t *PowerConditionIsPlayerActiveSkill) UnmarshalD4(r *bin.BinaryReader, o *Options) error {
	p, err := r.Pos()
	if err != nil {
		return err
	}
	if _, err := r.Seek(p+8, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwType.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+16, io.SeekStart); err != nil {
		return err
	}
	if err := t.BInverse.UnmarshalD4(r, &Options{Flags: 17}); err != nil {
		return err
	}
	if _, err := r.Seek(p+20, io.SeekStart); err != nil {
		return err
	}
	if err := t.DwPad.UnmarshalD4(r, &Options{}); err != nil {
		return err
	}
	if _, err := r.Seek(p+24, io.SeekStart); err != nil {
		return err
	}
	return nil
}
